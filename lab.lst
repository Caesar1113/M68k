680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 18 Jan 2023      Time: 15:56:06          Source: C:\M68KV6.0 - 800BY480\LAB.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  3E00      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  0482      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  3DF4      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  3DF8      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  4282 0800 
08000034  3DFC      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  1DB0      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\M68KV6.0 - 800BY480\PROGRAMS\DEBUGMONITORCODE\M68KDEBUG (NO DISASSEMBLER).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include "DebugMonitor.h"
                      46   ; // use 08030000 for a system running from sram or 0B000000 for system running from dram
                      47   ; #define StartOfExceptionVectorTable 0x08030000
                      48   ; //#define StartOfExceptionVectorTable 0x0B000000
                      49   ; // use 0C000000 for dram or hex 08040000 for sram
                      50   ; #define TopOfStack 0x08040000
                      51   ; //#define TopOfStack 0x0C000000
                      52   ; /* DO NOT INITIALISE GLOBAL VARIABLES - DO IT in MAIN() */
                      53   ; unsigned int i, x, y, z, PortA_Count;
                      54   ; int     Trace, GoFlag, Echo;                       // used in tracing/single stepping
                      55   ; // 68000 register dump and preintialise value (these can be changed by the user program when it is running, e.g. stack pointer, registers etc
                      56   ; unsigned int d0,d1,d2,d3,d4,d5,d6,d7 ;
                      57   ; unsigned int a0,a1,a2,a3,a4,a5,a6 ;
                      58   ; unsigned int PC, SSP, USP ;
                      59   ; unsigned short int SR;
                      60   ; // Breakpoint variables
                      61   ; unsigned int BreakPointAddress[8];                      //array of 8 breakpoint addresses
                      62   ; unsigned short int BreakPointInstruction[8] ;           // to hold the instruction opcode at the breakpoint
                      63   ; unsigned int BreakPointSetOrCleared[8] ;
                      64   ; unsigned int InstructionSize ;
                      65   ; // watchpoint variables
                      66   ; unsigned int WatchPointAddress[8];                      //array of 8 breakpoint addresses
                      67   ; unsigned int WatchPointSetOrCleared[8] ;
                      68   ; char WatchPointString[8][100] ;
                      69   ; char    TempString[100] ;
                      70   ; /************************************************************************************
                      71   ; *Subroutine to give the 68000 something useless to do to waste 1 mSec
                      72   ; ************************************************************************************/
                      73   ; void Wait1ms(void)
                      74   ; {
                      75   _Wait1ms:
0800003E  2F02        76          move.l    D2,-(A7)
                      77   ; long int  i ;
                      78   ; for(i = 0; i < 1000; i ++)
08000040  4282        79          clr.l     D2
                      80   Wait1ms_1:
08000042  0C82 0000   81          cmp.l     #1000,D2
08000046  03E8      
08000048  6C04        82          bge.s     Wait1ms_3
0800004A  5282        83          addq.l    #1,D2
0800004C  60F4        84          bra       Wait1ms_1
                      85   Wait1ms_3:
0800004E  241F        86          move.l    (A7)+,D2
08000050  4E75        87          rts
                      88   ; ;
                      89   ; }
                      90   ; /************************************************************************************
                      91   ; *Subroutine to give the 68000 something useless to do to waste 3 mSec
                      92   ; **************************************************************************************/
                      93   ; void Wait3ms(void)
                      94   ; {
                      95   _Wait3ms:
08000052  2F02        96          move.l    D2,-(A7)
                      97   ; int i ;
                      98   ; for(i = 0; i < 3; i++)
08000054  4282        99          clr.l     D2
                     100   Wait3ms_1:
08000056  0C82 0000  101          cmp.l     #3,D2
0800005A  0003      
0800005C  6C0A       102          bge.s     Wait3ms_3
                     103   ; Wait1ms() ;
0800005E  4EB9 0800  104          jsr       _Wait1ms
08000062  003E      
08000064  5282       105          addq.l    #1,D2
08000066  60EE       106          bra       Wait3ms_1
                     107   Wait3ms_3:
08000068  241F       108          move.l    (A7)+,D2
0800006A  4E75       109          rts
                     110   ; }
                     111   ; /*********************************************************************************************
                     112   ; *Subroutine to initialise the display by writing some commands to the LCD internal registers
                     113   ; *********************************************************************************************/
                     114   ; void Init_LCD(void)
                     115   ; {
                     116   _Init_LCD:
                     117   ; LCDcommand = (char)(0x0c) ;
0800006C  13FC 000C  118          move.b    #12,4194336
08000070  0040 0020 
                     119   ; Wait3ms() ;
08000074  4EB9 0800  120          jsr       _Wait3ms
08000078  0052      
                     121   ; LCDcommand = (char)(0x38) ;
0800007A  13FC 0038  122          move.b    #56,4194336
0800007E  0040 0020 
                     123   ; Wait3ms() ;
08000082  4EB9 0800  124          jsr       _Wait3ms
08000086  0052      
08000088  4E75       125          rts
                     126   ; }
                     127   ; /******************************************************************************
                     128   ; *subroutine to output a single character held in d1 to the LCD display
                     129   ; *it is assumed the character is an ASCII code and it will be displayed at the
                     130   ; *current cursor position
                     131   ; *******************************************************************************/
                     132   ; void Outchar(int c)
                     133   ; {
                     134   _Outchar:
0800008A  4E56 0000  135          link      A6,#0
                     136   ; LCDdata = (char)(c);
0800008E  202E 0008  137          move.l    8(A6),D0
08000092  13C0 0040  138          move.b    D0,4194338
08000096  0022      
                     139   ; Wait1ms() ;
08000098  4EB9 0800  140          jsr       _Wait1ms
0800009C  003E      
0800009E  4E5E       141          unlk      A6
080000A0  4E75       142          rts
                     143   ; }
                     144   ; /**********************************************************************************
                     145   ; *subroutine to output a message at the current cursor position of the LCD display
                     146   ; ************************************************************************************/
                     147   ; void OutMess(char *theMessage)
                     148   ; {
                     149   _OutMess:
080000A2  4E56 FFFC  150          link      A6,#-4
                     151   ; char c ;
                     152   ; while((c = *theMessage++) != (char)(0))
                     153   OutMess_1:
080000A6  206E 0008  154          move.l    8(A6),A0
080000AA  52AE 0008  155          addq.l    #1,8(A6)
080000AE  1D50 FFFF  156          move.b    (A0),-1(A6)
080000B2  1010       157          move.b    (A0),D0
080000B4  6714       158          beq.s     OutMess_3
                     159   ; Outchar(c) ;
080000B6  122E FFFF  160          move.b    -1(A6),D1
080000BA  4881       161          ext.w     D1
080000BC  48C1       162          ext.l     D1
080000BE  2F01       163          move.l    D1,-(A7)
080000C0  4EB9 0800  164          jsr       _Outchar
080000C4  008A      
080000C6  584F       165          addq.w    #4,A7
080000C8  60DC       166          bra       OutMess_1
                     167   OutMess_3:
080000CA  4E5E       168          unlk      A6
080000CC  4E75       169          rts
                     170   ; }
                     171   ; /******************************************************************************
                     172   ; *subroutine to clear the line by issuing 24 space characters
                     173   ; *******************************************************************************/
                     174   ; void Clearln(void)
                     175   ; {
                     176   _Clearln:
080000CE  2F02       177          move.l    D2,-(A7)
                     178   ; unsigned char i ;
                     179   ; for(i = 0; i < 24; i ++)
080000D0  4202       180          clr.b     D2
                     181   Clearln_1:
080000D2  0C02 0018  182          cmp.b     #24,D2
080000D6  6410       183          bhs.s     Clearln_3
                     184   ; Outchar(' ') ;  /* write a space char to the LCD display */
080000D8  4878 0020  185          pea       32
080000DC  4EB9 0800  186          jsr       _Outchar
080000E0  008A      
080000E2  584F       187          addq.w    #4,A7
080000E4  5202       188          addq.b    #1,D2
080000E6  60EA       189          bra       Clearln_1
                     190   Clearln_3:
080000E8  241F       191          move.l    (A7)+,D2
080000EA  4E75       192          rts
                     193   ; }
                     194   ; /******************************************************************************
                     195   ; *subroutine to move the cursor to the start of line 1 and clear that line
                     196   ; *******************************************************************************/
                     197   ; void Oline0(char *theMessage)
                     198   ; {
                     199   _Oline0:
080000EC  4E56 0000  200          link      A6,#0
                     201   ; LCDcommand = (char)(0x80) ;
080000F0  13FC 0080  202          move.b    #128,4194336
080000F4  0040 0020 
                     203   ; Wait3ms();
080000F8  4EB9 0800  204          jsr       _Wait3ms
080000FC  0052      
                     205   ; Clearln() ;
080000FE  4EB9 0800  206          jsr       _Clearln
08000102  00CE      
                     207   ; LCDcommand = (char)(0x80) ;
08000104  13FC 0080  208          move.b    #128,4194336
08000108  0040 0020 
                     209   ; Wait3ms() ;
0800010C  4EB9 0800  210          jsr       _Wait3ms
08000110  0052      
                     211   ; OutMess(theMessage) ;
08000112  2F2E 0008  212          move.l    8(A6),-(A7)
08000116  4EB9 0800  213          jsr       _OutMess
0800011A  00A2      
0800011C  584F       214          addq.w    #4,A7
0800011E  4E5E       215          unlk      A6
08000120  4E75       216          rts
                     217   ; }
                     218   ; /******************************************************************************
                     219   ; *subroutine to move the cursor to the start of line 2 and clear that line
                     220   ; *******************************************************************************/
                     221   ; void Oline1(char *theMessage)
                     222   ; {
                     223   _Oline1:
08000122  4E56 0000  224          link      A6,#0
                     225   ; LCDcommand = (char)(0xC0) ;
08000126  13FC 00C0  226          move.b    #192,4194336
0800012A  0040 0020 
                     227   ; Wait3ms();
0800012E  4EB9 0800  228          jsr       _Wait3ms
08000132  0052      
                     229   ; Clearln() ;
08000134  4EB9 0800  230          jsr       _Clearln
08000138  00CE      
                     231   ; LCDcommand = (char)(0xC0) ;
0800013A  13FC 00C0  232          move.b    #192,4194336
0800013E  0040 0020 
                     233   ; Wait3ms() ;
08000142  4EB9 0800  234          jsr       _Wait3ms
08000146  0052      
                     235   ; OutMess(theMessage) ;
08000148  2F2E 0008  236          move.l    8(A6),-(A7)
0800014C  4EB9 0800  237          jsr       _OutMess
08000150  00A2      
08000152  584F       238          addq.w    #4,A7
08000154  4E5E       239          unlk      A6
08000156  4E75       240          rts
                     241   ; }
                     242   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     243   ; {
                     244   _InstallExceptionHandler:
08000158  4E56 FFFC  245          link      A6,#-4
                     246   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
0800015C  2D7C 0803  247          move.l    #134414336,-4(A6)
08000160  0000 FFFC 
                     248   ; RamVectorAddress[level] = (long int *)(function_ptr);
08000164  206E FFFC  249          move.l    -4(A6),A0
08000168  202E 000C  250          move.l    12(A6),D0
0800016C  E588       251          lsl.l     #2,D0
0800016E  21AE 0008  252          move.l    8(A6),0(A0,D0.L)
08000172  0800      
08000174  4E5E       253          unlk      A6
08000176  4E75       254          rts
                     255   ; }
                     256   ; void TestLEDS(void)
                     257   ; {
                     258   _TestLEDS:
08000178  48E7 3000  259          movem.l   D2/D3,-(A7)
                     260   ; int delay ;
                     261   ; unsigned char count = 0 ;
0800017C  4202       262          clr.b     D2
                     263   ; while(1)    {
                     264   TestLEDS_1:
                     265   ; PortA = PortB = PortC = PortD = HEX_A = HEX_B = HEX_C = HEX_D = ((count << 4) + (count & 0x0f)) ;
0800017E  1002       266          move.b    D2,D0
08000180  E908       267          lsl.b     #4,D0
08000182  1202       268          move.b    D2,D1
08000184  C23C 000F  269          and.b     #15,D1
08000188  D001       270          add.b     D1,D0
0800018A  13C0 0040  271          move.b    D0,4194326
0800018E  0016      
08000190  13C0 0040  272          move.b    D0,4194324
08000194  0014      
08000196  13C0 0040  273          move.b    D0,4194322
0800019A  0012      
0800019C  13C0 0040  274          move.b    D0,4194320
080001A0  0010      
080001A2  13C0 0040  275          move.b    D0,4194310
080001A6  0006      
080001A8  13C0 0040  276          move.b    D0,4194308
080001AC  0004      
080001AE  13C0 0040  277          move.b    D0,4194306
080001B2  0002      
080001B4  13C0 0040  278          move.b    D0,4194304
080001B8  0000      
                     279   ; for(delay = 0; delay < 200000; delay ++)
080001BA  4283       280          clr.l     D3
                     281   TestLEDS_4:
080001BC  0C83 0003  282          cmp.l     #200000,D3
080001C0  0D40      
080001C2  6C04       283          bge.s     TestLEDS_6
080001C4  5283       284          addq.l    #1,D3
080001C6  60F4       285          bra       TestLEDS_4
                     286   TestLEDS_6:
                     287   ; ;
                     288   ; count ++;
080001C8  5202       289          addq.b    #1,D2
080001CA  60B2       290          bra       TestLEDS_1
                     291   ; }
                     292   ; }
                     293   ; void SwitchTest(void)
                     294   ; {
                     295   _SwitchTest:
080001CC  48E7 3020  296          movem.l   D2/D3/A2,-(A7)
080001D0  45F9 0800  297          lea       _printf.L,A2
080001D4  2276      
                     298   ; int i, switches = 0 ;
080001D6  4283       299          clr.l     D3
                     300   ; printf("\r\n") ;
                     301          pea       @m68kdebugSwitchTest_1.L
********  **** ****  Error: Undefined or illegal symbol
080001DE  4E92       302          jsr       (A2)
080001E0  584F       303          addq.w    #4,A7
                     304   ; while(1)    {
                     305   SwitchTest_1:
                     306   ; switches = (PortB << 8) | (PortA) ;
080001E2  1039 0040  307          move.b    4194306,D0
080001E6  0002      
080001E8  C0BC 0000  308          and.l     #255,D0
080001EC  00FF      
080001EE  E188       309          lsl.l     #8,D0
080001F0  1239 0040  310          move.b    4194304,D1
080001F4  0000      
080001F6  C2BC 0000  311          and.l     #255,D1
080001FA  00FF      
080001FC  8081       312          or.l      D1,D0
080001FE  2600       313          move.l    D0,D3
                     314   ; printf("\rSwitches SW[7-0] = ") ;
                     315          pea       @m68kdebugSwitchTest_2.L
********  **** ****  Error: Undefined or illegal symbol
08000206  4E92       316          jsr       (A2)
08000208  584F       317          addq.w    #4,A7
                     318   ; for( i = (int)(0x00000080); i > 0; i = i >> 1)  {
0800020A  243C 0000  319          move.l    #128,D2
0800020E  0080      
                     320   SwitchTest_4:
08000210  0C82 0000  321          cmp.l     #0,D2
08000214  0000      
08000216  6F20       322          ble.s     SwitchTest_6
                     323   ; if((switches & i) == 0)
08000218  2003       324          move.l    D3,D0
0800021A  C082       325          and.l     D2,D0
0800021C  660C       326          bne.s     SwitchTest_7
                     327   ; printf("0") ;
                     328          pea       @m68kdebugSwitchTest_3.L
********  **** ****  Error: Undefined or illegal symbol
08000224  4E92       329          jsr       (A2)
08000226  584F       330          addq.w    #4,A7
08000228  600A       331          bra.s     SwitchTest_8
                     332   SwitchTest_7:
                     333   ; else
                     334   ; printf("1") ;
                     335          pea       @m68kdebugSwitchTest_4.L
********  **** ****  Error: Undefined or illegal symbol
08000230  4E92       336          jsr       (A2)
08000232  584F       337          addq.w    #4,A7
                     338   SwitchTest_8:
08000234  E282       339          asr.l     #1,D2
08000236  60D8       340          bra       SwitchTest_4
                     341   SwitchTest_6:
08000238  60A8       342          bra       SwitchTest_1
                     343   ; }
                     344   ; }
                     345   ; }
                     346   ; /*********************************************************************************************
                     347   ; *Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     348   ; *********************************************************************************************/
                     349   ; void Init_RS232(void)
                     350   ; {
                     351   _Init_RS232:
                     352   ; RS232_Control = (char)(0x15) ; //  %00010101    divide by 16 clock, set rts low, 8 bits no parity, 1 stop bit transmitter interrupt disabled
0800023A  13FC 0015  353          move.b    #21,4194368
0800023E  0040 0040 
                     354   ; RS232_Baud = (char)(0x1) ;      // program baud rate generator 000 = 230k, 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
08000242  13FC 0001  355          move.b    #1,4194372
08000246  0040 0044 
0800024A  4E75       356          rts
                     357   ; }
                     358   ; int kbhit(void)
                     359   ; {
                     360   _kbhit:
                     361   ; if(((char)(RS232_Status) & (char)(0x01)) == (char)(0x01))    // wait for Rx bit in status register to be '1'
0800024C  1039 0040  362          move.b    4194368,D0
08000250  0040      
08000252  C03C 0001  363          and.b     #1,D0
08000256  0C00 0001  364          cmp.b     #1,D0
0800025A  6604       365          bne.s     kbhit_1
                     366   ; return 1 ;
0800025C  7001       367          moveq     #1,D0
0800025E  6002       368          bra.s     kbhit_3
                     369   kbhit_1:
                     370   ; else
                     371   ; return 0 ;
08000260  4280       372          clr.l     D0
                     373   kbhit_3:
08000262  4E75       374          rts
                     375   ; }
                     376   ; /*********************************************************************************************************
                     377   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     378   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     379   ; **  to allow the board to communicate with HyperTerminal Program
                     380   ; **
                     381   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     382   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     383   ; **  call _putch() also
                     384   ; *********************************************************************************************************/
                     385   ; int _putch( int c)
                     386   ; {
                     387   __putch:
08000264  4E56 0000  388          link      A6,#0
                     389   ; while(((char)(RS232_Status) & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     390   _putch_1:
08000268  1039 0040  391          move.b    4194368,D0
0800026C  0040      
0800026E  C03C 0002  392          and.b     #2,D0
08000272  0C00 0002  393          cmp.b     #2,D0
08000276  6702       394          beq.s     _putch_3
08000278  60EE       395          bra       _putch_1
                     396   _putch_3:
                     397   ; ;
                     398   ; (char)(RS232_TxData) = ((char)(c) & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800027A  202E 0008  399          move.l    8(A6),D0
0800027E  C03C 007F  400          and.b     #127,D0
08000282  13C0 0040  401          move.b    D0,4194370
08000286  0042      
                     402   ; return c ;                                              // putchar() expects the character to be returned
08000288  202E 0008  403          move.l    8(A6),D0
0800028C  4E5E       404          unlk      A6
0800028E  4E75       405          rts
                     406   ; }
                     407   ; /*********************************************************************************************************
                     408   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     409   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     410   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     411   ; **
                     412   ; **  NOTE you do not call this function directly, instead you call the normal _getch() function
                     413   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call _getch() so will
                     414   ; **  call _getch() also
                     415   ; *********************************************************************************************************/
                     416   ; int _getch( void )
                     417   ; {
                     418   __getch:
08000290  2F02       419          move.l    D2,-(A7)
                     420   ; int c ;
                     421   ; while(((char)(RS232_Status) & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     422   _getch_1:
08000292  1039 0040  423          move.b    4194368,D0
08000296  0040      
08000298  C03C 0001  424          and.b     #1,D0
0800029C  0C00 0001  425          cmp.b     #1,D0
080002A0  6702       426          beq.s     _getch_3
080002A2  60EE       427          bra       _getch_1
                     428   _getch_3:
                     429   ; ;
                     430   ; c = (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
080002A4  1039 0040  431          move.b    4194370,D0
080002A8  0042      
080002AA  C0BC 0000  432          and.l     #255,D0
080002AE  00FF      
080002B0  C0BC 0000  433          and.l     #127,D0
080002B4  007F      
080002B6  2400       434          move.l    D0,D2
                     435   ; // shall we echo the character? Echo is set to TRUE at reset, but for speed we don't want to echo when downloading code with the 'L' debugger command
                     436   ; if(Echo)
080002B8  4AB9 0800  437          tst.l     _Echo.L
080002BC  3E1C      
080002BE  670A       438          beq.s     _getch_4
                     439   ; _putch(c);
080002C0  2F02       440          move.l    D2,-(A7)
080002C2  4EB9 0800  441          jsr       __putch
080002C6  0264      
080002C8  584F       442          addq.w    #4,A7
                     443   _getch_4:
                     444   ; return c ;
080002CA  2002       445          move.l    D2,D0
080002CC  241F       446          move.l    (A7)+,D2
080002CE  4E75       447          rts
                     448   ; }
                     449   ; // flush the input stream for any unread characters
                     450   ; void FlushKeyboard(void)
                     451   ; {
                     452   _FlushKeyboard:
080002D0  4E56 FFFC  453          link      A6,#-4
                     454   ; char c ;
                     455   ; while(1)    {
                     456   FlushKeyboard_1:
                     457   ; if(((char)(RS232_Status) & (char)(0x01)) == (char)(0x01))    // if Rx bit in status register is '1'
080002D4  1039 0040  458          move.b    4194368,D0
080002D8  0040      
080002DA  C03C 0001  459          and.b     #1,D0
080002DE  0C00 0001  460          cmp.b     #1,D0
080002E2  6610       461          bne.s     FlushKeyboard_4
                     462   ; c = ((char)(RS232_RxData) & (char)(0x7f)) ;
080002E4  1039 0040  463          move.b    4194370,D0
080002E8  0042      
080002EA  C03C 007F  464          and.b     #127,D0
080002EE  1D40 FFFF  465          move.b    D0,-1(A6)
080002F2  6002       466          bra.s     FlushKeyboard_5
                     467   FlushKeyboard_4:
                     468   ; else
                     469   ; return ;
080002F4  6002       470          bra.s     FlushKeyboard_6
                     471   FlushKeyboard_5:
080002F6  60DC       472          bra       FlushKeyboard_1
                     473   FlushKeyboard_6:
080002F8  4E5E       474          unlk      A6
080002FA  4E75       475          rts
                     476   ; }
                     477   ; }
                     478   ; // converts hex char to 4 bit binary equiv in range 0000-1111 (0-F)
                     479   ; // char assumed to be a valid hex char 0-9, a-f, A-F
                     480   ; char xtod(int c)
                     481   ; {
                     482   _xtod:
080002FC  4E56 0000  483          link      A6,#0
08000300  2F02       484          move.l    D2,-(A7)
08000302  242E 0008  485          move.l    8(A6),D2
                     486   ; if ((char)(c) <= (char)('9'))
08000306  0C02 0039  487          cmp.b     #57,D2
0800030A  6E08       488          bgt.s     xtod_1
                     489   ; return c - (char)(0x30);    // 0 - 9 = 0x30 - 0x39 so convert to number by sutracting 0x30
0800030C  1002       490          move.b    D2,D0
0800030E  0400 0030  491          sub.b     #48,D0
08000312  6014       492          bra.s     xtod_3
                     493   xtod_1:
                     494   ; else if((char)(c) > (char)('F'))    // assume lower case
08000314  0C02 0046  495          cmp.b     #70,D2
08000318  6F08       496          ble.s     xtod_4
                     497   ; return c - (char)(0x57);    // a-f = 0x61-66 so needs to be converted to 0x0A - 0x0F so subtract 0x57
0800031A  1002       498          move.b    D2,D0
0800031C  0400 0057  499          sub.b     #87,D0
08000320  6006       500          bra.s     xtod_3
                     501   xtod_4:
                     502   ; else
                     503   ; return c - (char)(0x37);    // A-F = 0x41-46 so needs to be converted to 0x0A - 0x0F so subtract 0x37
08000322  1002       504          move.b    D2,D0
08000324  0400 0037  505          sub.b     #55,D0
                     506   xtod_3:
08000328  241F       507          move.l    (A7)+,D2
0800032A  4E5E       508          unlk      A6
0800032C  4E75       509          rts
                     510   ; }
                     511   ; int Get2HexDigits(char *CheckSumPtr)
                     512   ; {
                     513   _Get2HexDigits:
0800032E  4E56 0000  514          link      A6,#0
08000332  2F02       515          move.l    D2,-(A7)
                     516   ; register int i = (xtod(_getch()) << 4) | (xtod(_getch()));
08000334  2F00       517          move.l    D0,-(A7)
08000336  4EB9 0800  518          jsr       __getch
0800033A  0290      
0800033C  2200       519          move.l    D0,D1
0800033E  201F       520          move.l    (A7)+,D0
08000340  2F01       521          move.l    D1,-(A7)
08000342  4EB9 0800  522          jsr       _xtod
08000346  02FC      
08000348  584F       523          addq.w    #4,A7
0800034A  C0BC 0000  524          and.l     #255,D0
0800034E  00FF      
08000350  E980       525          asl.l     #4,D0
08000352  2F00       526          move.l    D0,-(A7)
08000354  2F01       527          move.l    D1,-(A7)
08000356  4EB9 0800  528          jsr       __getch
0800035A  0290      
0800035C  221F       529          move.l    (A7)+,D1
0800035E  2F00       530          move.l    D0,-(A7)
08000360  4EB9 0800  531          jsr       _xtod
08000364  02FC      
08000366  584F       532          addq.w    #4,A7
08000368  2200       533          move.l    D0,D1
0800036A  201F       534          move.l    (A7)+,D0
0800036C  C2BC 0000  535          and.l     #255,D1
08000370  00FF      
08000372  8081       536          or.l      D1,D0
08000374  2400       537          move.l    D0,D2
                     538   ; if(CheckSumPtr)
08000376  4AAE 0008  539          tst.l     8(A6)
0800037A  6706       540          beq.s     Get2HexDigits_1
                     541   ; *CheckSumPtr += i ;
0800037C  206E 0008  542          move.l    8(A6),A0
08000380  D510       543          add.b     D2,(A0)
                     544   Get2HexDigits_1:
                     545   ; return i ;
08000382  2002       546          move.l    D2,D0
08000384  241F       547          move.l    (A7)+,D2
08000386  4E5E       548          unlk      A6
08000388  4E75       549          rts
                     550   ; }
                     551   ; int Get4HexDigits(char *CheckSumPtr)
                     552   ; {
                     553   _Get4HexDigits:
0800038A  4E56 0000  554          link      A6,#0
                     555   ; return (Get2HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
0800038E  2F2E 0008  556          move.l    8(A6),-(A7)
08000392  4EB9 0800  557          jsr       _Get2HexDigits
08000396  032E      
08000398  584F       558          addq.w    #4,A7
0800039A  E180       559          asl.l     #8,D0
0800039C  2F00       560          move.l    D0,-(A7)
0800039E  2F2E 0008  561          move.l    8(A6),-(A7)
080003A2  4EB9 0800  562          jsr       _Get2HexDigits
080003A6  032E      
080003A8  584F       563          addq.w    #4,A7
080003AA  2200       564          move.l    D0,D1
080003AC  201F       565          move.l    (A7)+,D0
080003AE  8081       566          or.l      D1,D0
080003B0  4E5E       567          unlk      A6
080003B2  4E75       568          rts
                     569   ; }
                     570   ; int Get6HexDigits(char *CheckSumPtr)
                     571   ; {
                     572   _Get6HexDigits:
080003B4  4E56 0000  573          link      A6,#0
                     574   ; return (Get4HexDigits(CheckSumPtr) << 8) | (Get2HexDigits(CheckSumPtr));
080003B8  2F2E 0008  575          move.l    8(A6),-(A7)
080003BC  4EB9 0800  576          jsr       _Get4HexDigits
080003C0  038A      
080003C2  584F       577          addq.w    #4,A7
080003C4  E180       578          asl.l     #8,D0
080003C6  2F00       579          move.l    D0,-(A7)
080003C8  2F2E 0008  580          move.l    8(A6),-(A7)
080003CC  4EB9 0800  581          jsr       _Get2HexDigits
080003D0  032E      
080003D2  584F       582          addq.w    #4,A7
080003D4  2200       583          move.l    D0,D1
080003D6  201F       584          move.l    (A7)+,D0
080003D8  8081       585          or.l      D1,D0
080003DA  4E5E       586          unlk      A6
080003DC  4E75       587          rts
                     588   ; }
                     589   ; int Get8HexDigits(char *CheckSumPtr)
                     590   ; {
                     591   _Get8HexDigits:
080003DE  4E56 0000  592          link      A6,#0
                     593   ; return (Get4HexDigits(CheckSumPtr) << 16) | (Get4HexDigits(CheckSumPtr));
080003E2  2F2E 0008  594          move.l    8(A6),-(A7)
080003E6  4EB9 0800  595          jsr       _Get4HexDigits
080003EA  038A      
080003EC  584F       596          addq.w    #4,A7
080003EE  E180       597          asl.l     #8,D0
080003F0  E180       598          asl.l     #8,D0
080003F2  2F00       599          move.l    D0,-(A7)
080003F4  2F2E 0008  600          move.l    8(A6),-(A7)
080003F8  4EB9 0800  601          jsr       _Get4HexDigits
080003FC  038A      
080003FE  584F       602          addq.w    #4,A7
08000400  2200       603          move.l    D0,D1
08000402  201F       604          move.l    (A7)+,D0
08000404  8081       605          or.l      D1,D0
08000406  4E5E       606          unlk      A6
08000408  4E75       607          rts
                     608   ; }
                     609   ; void DumpMemory(void)   // simple dump memory fn
                     610   ; {
                     611   _DumpMemory:
0800040A  48E7 3C30  612          movem.l   D2/D3/D4/D5/A2/A3,-(A7)
0800040E  45F9 0800  613          lea       _printf.L,A2
08000412  2276      
08000414  47F9 0800  614          lea       _putch.L,A3
08000418  218C      
                     615   ; int i, j ;
                     616   ; unsigned char *RamPtr,c ; // pointer to where the program is download (assumed)
                     617   ; printf("\r\nDump Memory Block: <ESC> to Abort, <SPACE> to Continue") ;
                     618          pea       @m68kdebugDumpMemory_5.L
********  **** ****  Error: Undefined or illegal symbol
08000420  4E92       619          jsr       (A2)
08000422  584F       620          addq.w    #4,A7
                     621   ; printf("\r\nEnter Start Address: ") ;
                     622          pea       @m68kdebugDumpMemory_6.L
********  **** ****  Error: Undefined or illegal symbol
0800042A  4E92       623          jsr       (A2)
0800042C  584F       624          addq.w    #4,A7
                     625   ; RamPtr = Get8HexDigits(0) ;
0800042E  42A7       626          clr.l     -(A7)
08000430  4EB9 0800  627          jsr       _Get8HexDigits
08000434  03DE      
08000436  584F       628          addq.w    #4,A7
08000438  2600       629          move.l    D0,D3
                     630   ; while(1)    {
                     631   DumpMemory_1:
                     632   ; for(i = 0; i < 16; i ++)    {
0800043A  4285       633          clr.l     D5
                     634   DumpMemory_4:
0800043C  0C85 0000  635          cmp.l     #16,D5
08000440  0010      
08000442  6C00 0096  636          bge       DumpMemory_6
                     637   ; printf("\r\n%08x ", RamPtr) ;
08000446  2F03       638          move.l    D3,-(A7)
                     639          pea       @m68kdebugDumpMemory_7.L
********  **** ****  Error: Undefined or illegal symbol
0800044E  4E92       640          jsr       (A2)
08000450  504F       641          addq.w    #8,A7
                     642   ; for(j=0; j < 16; j ++)  {
08000452  4282       643          clr.l     D2
                     644   DumpMemory_7:
08000454  0C82 0000  645          cmp.l     #16,D2
08000458  0010      
0800045A  6C24       646          bge.s     DumpMemory_9
                     647   ; printf("%02X",RamPtr[j]) ;
0800045C  2043       648          move.l    D3,A0
0800045E  1230 2800  649          move.b    0(A0,D2.L),D1
08000462  C2BC 0000  650          and.l     #255,D1
08000466  00FF      
08000468  2F01       651          move.l    D1,-(A7)
                     652          pea       @m68kdebugDumpMemory_8.L
********  **** ****  Error: Undefined or illegal symbol
08000470  4E92       653          jsr       (A2)
08000472  504F       654          addq.w    #8,A7
                     655   ; putchar(' ') ;
08000474  4878 0020  656          pea       32
08000478  4E93       657          jsr       (A3)
0800047A  584F       658          addq.w    #4,A7
0800047C  5282       659          addq.l    #1,D2
0800047E  60D4       660          bra       DumpMemory_7
                     661   DumpMemory_9:
                     662   ; }
                     663   ; // now display the data as ASCII at the end
                     664   ; printf("  ") ;
                     665          pea       @m68kdebugDumpMemory_9.L
********  **** ****  Error: Undefined or illegal symbol
08000486  4E92       666          jsr       (A2)
08000488  584F       667          addq.w    #4,A7
                     668   ; for(j = 0; j < 16; j++) {
0800048A  4282       669          clr.l     D2
                     670   DumpMemory_10:
0800048C  0C82 0000  671          cmp.l     #16,D2
08000490  0010      
08000492  6C00 003A  672          bge       DumpMemory_12
                     673   ; c = ((char)(RamPtr[j]) & 0x7f) ;
08000496  2043       674          move.l    D3,A0
08000498  1030 2800  675          move.b    0(A0,D2.L),D0
0800049C  C03C 007F  676          and.b     #127,D0
080004A0  1800       677          move.b    D0,D4
                     678   ; if((c > (char)(0x7f)) || (c < ' '))
080004A2  0C04 007F  679          cmp.b     #127,D4
080004A6  6206       680          bhi.s     DumpMemory_15
080004A8  0C04 0020  681          cmp.b     #32,D4
080004AC  640A       682          bhs.s     DumpMemory_13
                     683   DumpMemory_15:
                     684   ; putchar('.') ;
080004AE  4878 002E  685          pea       46
080004B2  4E93       686          jsr       (A3)
080004B4  584F       687          addq.w    #4,A7
080004B6  6012       688          bra.s     DumpMemory_14
                     689   DumpMemory_13:
                     690   ; else
                     691   ; putchar(RamPtr[j]) ;
080004B8  2043       692          move.l    D3,A0
080004BA  1230 2800  693          move.b    0(A0,D2.L),D1
080004BE  C2BC 0000  694          and.l     #255,D1
080004C2  00FF      
080004C4  2F01       695          move.l    D1,-(A7)
080004C6  4E93       696          jsr       (A3)
080004C8  584F       697          addq.w    #4,A7
                     698   DumpMemory_14:
080004CA  5282       699          addq.l    #1,D2
080004CC  60BE       700          bra       DumpMemory_10
                     701   DumpMemory_12:
                     702   ; }
                     703   ; RamPtr = RamPtr + 16 ;
080004CE  0683 0000  704          add.l     #16,D3
080004D2  0010      
080004D4  5285       705          addq.l    #1,D5
080004D6  6000 FF64  706          bra       DumpMemory_4
                     707   DumpMemory_6:
                     708   ; }
                     709   ; printf("\r\n") ;
                     710          pea       @m68kdebugDumpMemory_10.L
********  **** ****  Error: Undefined or illegal symbol
080004E0  4E92       711          jsr       (A2)
080004E2  584F       712          addq.w    #4,A7
                     713   ; c = _getch() ;
080004E4  4EB9 0800  714          jsr       __getch
080004E8  0290      
080004EA  1800       715          move.b    D0,D4
                     716   ; if(c == 0x1b)          // break on ESC
080004EC  0C04 001B  717          cmp.b     #27,D4
080004F0  6602       718          bne.s     DumpMemory_16
                     719   ; break ;
080004F2  6004       720          bra.s     DumpMemory_3
                     721   DumpMemory_16:
080004F4  6000 FF44  722          bra       DumpMemory_1
                     723   DumpMemory_3:
080004F8  4CDF 0C3C  724          movem.l   (A7)+,D2/D3/D4/D5/A2/A3
080004FC  4E75       725          rts
                     726   ; }
                     727   ; }
                     728   ; void FillMemory()
                     729   ; {
                     730   _FillMemory:
080004FE  48E7 3820  731          movem.l   D2/D3/D4/A2,-(A7)
08000502  45F9 0800  732          lea       _printf.L,A2
08000506  2276      
                     733   ; char *StartRamPtr, *EndRamPtr ;
                     734   ; unsigned char FillData ;
                     735   ; printf("\r\nFill Memory Block") ;
                     736          pea       @m68kdebugFillMemory_11.L
********  **** ****  Error: Undefined or illegal symbol
0800050E  4E92       737          jsr       (A2)
08000510  584F       738          addq.w    #4,A7
                     739   ; printf("\r\nEnter Start Address: ") ;
                     740          pea       @m68kdebugFillMemory_12.L
********  **** ****  Error: Undefined or illegal symbol
08000518  4E92       741          jsr       (A2)
0800051A  584F       742          addq.w    #4,A7
                     743   ; StartRamPtr = Get8HexDigits(0) ;
0800051C  42A7       744          clr.l     -(A7)
0800051E  4EB9 0800  745          jsr       _Get8HexDigits
08000522  03DE      
08000524  584F       746          addq.w    #4,A7
08000526  2400       747          move.l    D0,D2
                     748   ; printf("\r\nEnter End Address: ") ;
                     749          pea       @m68kdebugFillMemory_13.L
********  **** ****  Error: Undefined or illegal symbol
0800052E  4E92       750          jsr       (A2)
08000530  584F       751          addq.w    #4,A7
                     752   ; EndRamPtr = Get8HexDigits(0) ;
08000532  42A7       753          clr.l     -(A7)
08000534  4EB9 0800  754          jsr       _Get8HexDigits
08000538  03DE      
0800053A  584F       755          addq.w    #4,A7
0800053C  2800       756          move.l    D0,D4
                     757   ; printf("\r\nEnter Fill Data: ") ;
                     758          pea       @m68kdebugFillMemory_14.L
********  **** ****  Error: Undefined or illegal symbol
08000544  4E92       759          jsr       (A2)
08000546  584F       760          addq.w    #4,A7
                     761   ; FillData = Get2HexDigits(0) ;
08000548  42A7       762          clr.l     -(A7)
0800054A  4EB9 0800  763          jsr       _Get2HexDigits
0800054E  032E      
08000550  584F       764          addq.w    #4,A7
08000552  1600       765          move.b    D0,D3
                     766   ; printf("\r\nFilling Addresses [$%08X - $%08X] with $%02X", StartRamPtr, EndRamPtr, FillData) ;
08000554  C6BC 0000  767          and.l     #255,D3
08000558  00FF      
0800055A  2F03       768          move.l    D3,-(A7)
0800055C  2F04       769          move.l    D4,-(A7)
0800055E  2F02       770          move.l    D2,-(A7)
                     771          pea       @m68kdebugFillMemory_15.L
********  **** ****  Error: Undefined or illegal symbol
08000566  4E92       772          jsr       (A2)
08000568  DEFC 0010  773          add.w     #16,A7
                     774   ; while(StartRamPtr < EndRamPtr)
                     775   FillMemory_1:
0800056C  B484       776          cmp.l     D4,D2
0800056E  6408       777          bhs.s     FillMemory_3
                     778   ; *StartRamPtr++ = FillData ;
08000570  2042       779          move.l    D2,A0
08000572  5282       780          addq.l    #1,D2
08000574  1083       781          move.b    D3,(A0)
08000576  60F4       782          bra       FillMemory_1
                     783   FillMemory_3:
08000578  4CDF 041C  784          movem.l   (A7)+,D2/D3/D4/A2
0800057C  4E75       785          rts
                     786   ; }
                     787   ; void Load_SRecordFile()
                     788   ; {
                     789   _Load_SRecordFile:
0800057E  4E56 FFDC  790          link      A6,#-36
08000582  48E7 3F3C  791          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000586  45EE FFFA  792          lea       -6(A6),A2
0800058A  47F9 0800  793          lea       _Get2HexDigits.L,A3
0800058E  032E      
08000590  49F9 0800  794          lea       _printf.L,A4
08000594  2276      
                     795   ; int i, Address, AddressSize, DataByte, NumDataBytesToRead, LoadFailed, FailedAddress, AddressFail, SRecordCount = 0, ByteTotal = 0 ;
08000596  42AE FFEE  796          clr.l     -18(A6)
0800059A  3A7C 0000  797          move.w    #0,A5
                     798   ; int result, ByteCount ;
                     799   ; char c, CheckSum, ReadCheckSum, HeaderType ;
                     800   ; char *RamPtr ;                          // pointer to Memory where downloaded program will be stored
                     801   ; LoadFailed = 0 ;                        //assume LOAD operation will pass
0800059E  7E00       802          moveq     #0,D7
                     803   ; AddressFail = 0 ;
080005A0  42AE FFEA  804          clr.l     -22(A6)
                     805   ; Echo = 0 ;                              // don't echo S records during download
080005A4  42B9 0800  806          clr.l     _Echo.L
080005A8  3E1C      
                     807   ; printf("\r\nUse HyperTerminal to Send Text File (.hex)\r\n") ;
                     808          pea       @m68kdebugLoad_SRecordFile_16.L
********  **** ****  Error: Undefined or illegal symbol
080005B0  4E94       809          jsr       (A4)
080005B2  584F       810          addq.w    #4,A7
                     811   ; while(1)    {
                     812   Load_SRecordFile_1:
                     813   ; CheckSum = 0 ;
080005B4  4212       814          clr.b     (A2)
                     815   ; do {
                     816   Load_SRecordFile_4:
                     817   ; c = toupper(_getch()) ;
080005B6  2F00       818          move.l    D0,-(A7)
080005B8  4EB9 0800  819          jsr       __getch
080005BC  0290      
080005BE  2200       820          move.l    D0,D1
080005C0  201F       821          move.l    (A7)+,D0
080005C2  2F01       822          move.l    D1,-(A7)
080005C4  4EB9 0800  823          jsr       _toupper
080005C8  225A      
080005CA  584F       824          addq.w    #4,A7
080005CC  1C00       825          move.b    D0,D6
                     826   ; if(c == 0x1b )      // if break
080005CE  0C06 001B  827          cmp.b     #27,D6
080005D2  6604       828          bne.s     Load_SRecordFile_6
                     829   ; return;
080005D4  6000 013C  830          bra       Load_SRecordFile_8
                     831   Load_SRecordFile_6:
080005D8  0C06 0053  832          cmp.b     #83,D6
080005DC  66D8       833          bne       Load_SRecordFile_4
                     834   ; }while(c != (char)('S'));   // wait for S start of header
                     835   ; HeaderType = _getch() ;
080005DE  4EB9 0800  836          jsr       __getch
080005E2  0290      
080005E4  1600       837          move.b    D0,D3
                     838   ; if(HeaderType == (char)('0') || HeaderType == (char)('5'))       // ignore s0, s5 records
080005E6  0C03 0030  839          cmp.b     #48,D3
080005EA  6706       840          beq.s     Load_SRecordFile_11
080005EC  0C03 0035  841          cmp.b     #53,D3
080005F0  6604       842          bne.s     Load_SRecordFile_9
                     843   Load_SRecordFile_11:
                     844   ; continue ;
080005F2  6000 00D8  845          bra       Load_SRecordFile_23
                     846   Load_SRecordFile_9:
                     847   ; if(HeaderType >= (char)('7'))
080005F6  0C03 0037  848          cmp.b     #55,D3
080005FA  6D04       849          blt.s     Load_SRecordFile_12
                     850   ; break ;                 // end load on s7,s8,s9 records
080005FC  6000 00D2  851          bra       Load_SRecordFile_3
                     852   Load_SRecordFile_12:
                     853   ; // get the bytecount
                     854   ; ByteCount = Get2HexDigits(&CheckSum) ;
08000600  2F0A       855          move.l    A2,-(A7)
08000602  4E93       856          jsr       (A3)
08000604  584F       857          addq.w    #4,A7
08000606  2D40 FFF6  858          move.l    D0,-10(A6)
                     859   ; // get the address, 4 digits for s1, 6 digits for s2, and 8 digits for s3 record
                     860   ; if(HeaderType == (char)('1')) {
0800060A  0C03 0031  861          cmp.b     #49,D3
0800060E  6610       862          bne.s     Load_SRecordFile_14
                     863   ; AddressSize = 2 ;       // 2 byte address
08000610  7A02       864          moveq     #2,D5
                     865   ; Address = Get4HexDigits(&CheckSum);
08000612  2F0A       866          move.l    A2,-(A7)
08000614  4EB9 0800  867          jsr       _Get4HexDigits
08000618  038A      
0800061A  584F       868          addq.w    #4,A7
0800061C  2800       869          move.l    D0,D4
0800061E  6024       870          bra.s     Load_SRecordFile_17
                     871   Load_SRecordFile_14:
                     872   ; }
                     873   ; else if (HeaderType == (char)('2')) {
08000620  0C03 0032  874          cmp.b     #50,D3
08000624  6610       875          bne.s     Load_SRecordFile_16
                     876   ; AddressSize = 3 ;       // 3 byte address
08000626  7A03       877          moveq     #3,D5
                     878   ; Address = Get6HexDigits(&CheckSum) ;
08000628  2F0A       879          move.l    A2,-(A7)
0800062A  4EB9 0800  880          jsr       _Get6HexDigits
0800062E  03B4      
08000630  584F       881          addq.w    #4,A7
08000632  2800       882          move.l    D0,D4
08000634  600E       883          bra.s     Load_SRecordFile_17
                     884   Load_SRecordFile_16:
                     885   ; }
                     886   ; else    {
                     887   ; AddressSize = 4 ;       // 4 byte address
08000636  7A04       888          moveq     #4,D5
                     889   ; Address = Get8HexDigits(&CheckSum) ;
08000638  2F0A       890          move.l    A2,-(A7)
0800063A  4EB9 0800  891          jsr       _Get8HexDigits
0800063E  03DE      
08000640  584F       892          addq.w    #4,A7
08000642  2800       893          move.l    D0,D4
                     894   Load_SRecordFile_17:
                     895   ; }
                     896   ; RamPtr = (char *)(Address) ;                            // point to download area
08000644  2D44 FFFC  897          move.l    D4,-4(A6)
                     898   ; NumDataBytesToRead = ByteCount - AddressSize - 1 ;
08000648  202E FFF6  899          move.l    -10(A6),D0
0800064C  9085       900          sub.l     D5,D0
0800064E  5380       901          subq.l    #1,D0
08000650  2D40 FFE2  902          move.l    D0,-30(A6)
                     903   ; for(i = 0; i < NumDataBytesToRead; i ++) {     // read in remaining data bytes (ignore address and checksum at the end
08000654  4282       904          clr.l     D2
                     905   Load_SRecordFile_18:
08000656  B4AE FFE2  906          cmp.l     -30(A6),D2
0800065A  6C1E       907          bge.s     Load_SRecordFile_20
                     908   ; DataByte = Get2HexDigits(&CheckSum) ;
0800065C  2F0A       909          move.l    A2,-(A7)
0800065E  4E93       910          jsr       (A3)
08000660  584F       911          addq.w    #4,A7
08000662  2D40 FFDE  912          move.l    D0,-34(A6)
                     913   ; *RamPtr++ = DataByte ;                      // store downloaded byte in Ram at specified address
08000666  202E FFDE  914          move.l    -34(A6),D0
0800066A  206E FFFC  915          move.l    -4(A6),A0
0800066E  52AE FFFC  916          addq.l    #1,-4(A6)
08000672  1080       917          move.b    D0,(A0)
                     918   ; ByteTotal++;
08000674  524D       919          addq.w    #1,A5
08000676  5282       920          addq.l    #1,D2
08000678  60DC       921          bra       Load_SRecordFile_18
                     922   Load_SRecordFile_20:
                     923   ; }
                     924   ; // checksum is the 1's complement of the sum of all data pairs following the bytecount, i.e. it includes the address and the data itself
                     925   ; ReadCheckSum = Get2HexDigits(0) ;
0800067A  42A7       926          clr.l     -(A7)
0800067C  4E93       927          jsr       (A3)
0800067E  584F       928          addq.w    #4,A7
08000680  1D40 FFFB  929          move.b    D0,-5(A6)
                     930   ; if((~CheckSum&0Xff) != (ReadCheckSum&0Xff))   {
08000684  1012       931          move.b    (A2),D0
08000686  4600       932          not.b     D0
08000688  4880       933          ext.w     D0
0800068A  C07C 00FF  934          and.w     #255,D0
0800068E  122E FFFB  935          move.b    -5(A6),D1
08000692  4881       936          ext.w     D1
08000694  C27C 00FF  937          and.w     #255,D1
08000698  B041       938          cmp.w     D1,D0
0800069A  6708       939          beq.s     Load_SRecordFile_21
                     940   ; LoadFailed = 1 ;
0800069C  7E01       941          moveq     #1,D7
                     942   ; FailedAddress = Address ;
0800069E  2D44 FFE6  943          move.l    D4,-26(A6)
                     944   ; break;
080006A2  602C       945          bra.s     Load_SRecordFile_3
                     946   Load_SRecordFile_21:
                     947   ; }
                     948   ; SRecordCount++ ;
080006A4  52AE FFEE  949          addq.l    #1,-18(A6)
                     950   ; // display feedback on progress
                     951   ; if(SRecordCount % 25 == 0)
080006A8  2F2E FFEE  952          move.l    -18(A6),-(A7)
080006AC  4878 0019  953          pea       25
080006B0  4EB9 0800  954          jsr       LDIV
080006B4  20C0      
080006B6  202F 0004  955          move.l    4(A7),D0
080006BA  504F       956          addq.w    #8,A7
080006BC  4A80       957          tst.l     D0
080006BE  660C       958          bne.s     Load_SRecordFile_23
                     959   ; putchar('.') ;
080006C0  4878 002E  960          pea       46
080006C4  4EB9 0800  961          jsr       _putch
080006C8  218C      
080006CA  584F       962          addq.w    #4,A7
                     963   Load_SRecordFile_23:
080006CC  6000 FEE6  964          bra       Load_SRecordFile_1
                     965   Load_SRecordFile_3:
                     966   ; }
                     967   ; if(LoadFailed == 1) {
080006D0  0C87 0000  968          cmp.l     #1,D7
080006D4  0001      
080006D6  6610       969          bne.s     Load_SRecordFile_25
                     970   ; printf("\r\nLoad Failed at Address = [$%08X]\r\n", FailedAddress) ;
080006D8  2F2E FFE6  971          move.l    -26(A6),-(A7)
                     972          pea       @m68kdebugLoad_SRecordFile_17.L
********  **** ****  Error: Undefined or illegal symbol
080006E2  4E94       973          jsr       (A4)
080006E4  504F       974          addq.w    #8,A7
080006E6  600C       975          bra.s     Load_SRecordFile_26
                     976   Load_SRecordFile_25:
                     977   ; }
                     978   ; else
                     979   ; printf("\r\nSuccess: Downloaded %d bytes\r\n", ByteTotal) ;
080006E8  2F0D       980          move.l    A5,-(A7)
                     981          pea       @m68kdebugLoad_SRecordFile_18.L
********  **** ****  Error: Undefined or illegal symbol
080006F0  4E94       982          jsr       (A4)
080006F2  504F       983          addq.w    #8,A7
                     984   Load_SRecordFile_26:
                     985   ; // pause at the end to wait for download to finish transmitting at the end of S8 etc
                     986   ; for(i = 0; i < 400000; i ++)
080006F4  4282       987          clr.l     D2
                     988   Load_SRecordFile_27:
080006F6  0C82 0006  989          cmp.l     #400000,D2
080006FA  1A80      
080006FC  6C04       990          bge.s     Load_SRecordFile_29
080006FE  5282       991          addq.l    #1,D2
08000700  60F4       992          bra       Load_SRecordFile_27
                     993   Load_SRecordFile_29:
                     994   ; ;
                     995   ; FlushKeyboard() ;
08000702  4EB9 0800  996          jsr       _FlushKeyboard
08000706  02D0      
                     997   ; Echo = 1;
08000708  23FC 0000  998          move.l    #1,_Echo.L
0800070C  0001 0800 
08000710  3E1C      
                     999   Load_SRecordFile_8:
08000712  4CDF 3CFC 1000          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08000716  4E5E      1001          unlk      A6
08000718  4E75      1002          rts
                    1003   ; }
                    1004   ; void MemoryChange(void)
                    1005   ; {
                    1006   _MemoryChange:
0800071A  48E7 3820 1007          movem.l   D2/D3/D4/A2,-(A7)
0800071E  45F9 0800 1008          lea       _printf.L,A2
08000722  2276      
                    1009   ; unsigned char *RamPtr,c ; // pointer to memory
                    1010   ; int Data ;
                    1011   ; printf("\r\nExamine and Change Memory") ;
                    1012          pea       @m68kdebugMemoryChange_19.L
********  **** ****  Error: Undefined or illegal symbol
0800072A  4E92      1013          jsr       (A2)
0800072C  584F      1014          addq.w    #4,A7
                    1015   ; printf("\r\n<ESC> to Stop, <SPACE> to Advance, '-' to Go Back, <DATA> to change") ;
                    1016          pea       @m68kdebugMemoryChange_20.L
********  **** ****  Error: Undefined or illegal symbol
08000734  4E92      1017          jsr       (A2)
08000736  584F      1018          addq.w    #4,A7
                    1019   ; printf("\r\nEnter Address: ") ;
                    1020          pea       @m68kdebugMemoryChange_21.L
********  **** ****  Error: Undefined or illegal symbol
0800073E  4E92      1021          jsr       (A2)
08000740  584F      1022          addq.w    #4,A7
                    1023   ; RamPtr = Get8HexDigits(0) ;
08000742  42A7      1024          clr.l     -(A7)
08000744  4EB9 0800 1025          jsr       _Get8HexDigits
08000748  03DE      
0800074A  584F      1026          addq.w    #4,A7
0800074C  2600      1027          move.l    D0,D3
                    1028   ; while(1)    {
                    1029   MemoryChange_1:
                    1030   ; printf("\r\n[%08x] : %02x  ", RamPtr, *RamPtr) ;
0800074E  2043      1031          move.l    D3,A0
08000750  1210      1032          move.b    (A0),D1
08000752  C2BC 0000 1033          and.l     #255,D1
08000756  00FF      
08000758  2F01      1034          move.l    D1,-(A7)
0800075A  2F03      1035          move.l    D3,-(A7)
                    1036          pea       @m68kdebugMemoryChange_22.L
********  **** ****  Error: Undefined or illegal symbol
08000762  4E92      1037          jsr       (A2)
08000764  DEFC 000C 1038          add.w     #12,A7
                    1039   ; c = tolower(_getch()) ;
08000768  2F00      1040          move.l    D0,-(A7)
0800076A  4EB9 0800 1041          jsr       __getch
0800076E  0290      
08000770  2200      1042          move.l    D0,D1
08000772  201F      1043          move.l    (A7)+,D0
08000774  2F01      1044          move.l    D1,-(A7)
08000776  4EB9 0800 1045          jsr       _tolower
0800077A  21F6      
0800077C  584F      1046          addq.w    #4,A7
0800077E  1400      1047          move.b    D0,D2
                    1048   ; if(c == (char)(0x1b))
08000780  0C02 001B 1049          cmp.b     #27,D2
08000784  6604      1050          bne.s     MemoryChange_4
                    1051   ; return ;                                // abort on escape
08000786  6000 0096 1052          bra       MemoryChange_6
                    1053   MemoryChange_4:
                    1054   ; else if((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f')) {  // are we trying to change data at this location by entering a hex char
0800078A  0C02 0030 1055          cmp.b     #48,D2
0800078E  6506      1056          blo.s     MemoryChange_10
08000790  0C02 0039 1057          cmp.b     #57,D2
08000794  6310      1058          bls.s     MemoryChange_9
                    1059   MemoryChange_10:
08000796  0C02 0061 1060          cmp.b     #97,D2
0800079A  6500 0074 1061          blo       MemoryChange_7
0800079E  0C02 0066 1062          cmp.b     #102,D2
080007A2  6200 006C 1063          bhi       MemoryChange_7
                    1064   MemoryChange_9:
                    1065   ; Data = (xtod(c) << 4) | (xtod(_getch()));
080007A6  C4BC 0000 1066          and.l     #255,D2
080007AA  00FF      
080007AC  2F02      1067          move.l    D2,-(A7)
080007AE  4EB9 0800 1068          jsr       _xtod
080007B2  02FC      
080007B4  584F      1069          addq.w    #4,A7
080007B6  C0BC 0000 1070          and.l     #255,D0
080007BA  00FF      
080007BC  E980      1071          asl.l     #4,D0
080007BE  2F00      1072          move.l    D0,-(A7)
080007C0  2F01      1073          move.l    D1,-(A7)
080007C2  4EB9 0800 1074          jsr       __getch
080007C6  0290      
080007C8  221F      1075          move.l    (A7)+,D1
080007CA  2F00      1076          move.l    D0,-(A7)
080007CC  4EB9 0800 1077          jsr       _xtod
080007D0  02FC      
080007D2  584F      1078          addq.w    #4,A7
080007D4  2200      1079          move.l    D0,D1
080007D6  201F      1080          move.l    (A7)+,D0
080007D8  C2BC 0000 1081          and.l     #255,D1
080007DC  00FF      
080007DE  8081      1082          or.l      D1,D0
080007E0  2800      1083          move.l    D0,D4
                    1084   ; *RamPtr = (char)(Data) ;
080007E2  2043      1085          move.l    D3,A0
080007E4  1084      1086          move.b    D4,(A0)
                    1087   ; if(*RamPtr != Data) {
080007E6  2043      1088          move.l    D3,A0
080007E8  1010      1089          move.b    (A0),D0
080007EA  C0BC 0000 1090          and.l     #255,D0
080007EE  00FF      
080007F0  B084      1091          cmp.l     D4,D0
080007F2  671A      1092          beq.s     MemoryChange_11
                    1093   ; printf("\r\nWarning Change Failed: Wrote [%02x], Read [%02x]", Data, *RamPtr) ;
080007F4  2043      1094          move.l    D3,A0
080007F6  1210      1095          move.b    (A0),D1
080007F8  C2BC 0000 1096          and.l     #255,D1
080007FC  00FF      
080007FE  2F01      1097          move.l    D1,-(A7)
08000800  2F04      1098          move.l    D4,-(A7)
                    1099          pea       @m68kdebugMemoryChange_23.L
********  **** ****  Error: Undefined or illegal symbol
08000808  4E92      1100          jsr       (A2)
0800080A  DEFC 000C 1101          add.w     #12,A7
                    1102   MemoryChange_11:
0800080E  6008      1103          bra.s     MemoryChange_13
                    1104   MemoryChange_7:
                    1105   ; }
                    1106   ; }
                    1107   ; else if(c == (char)('-'))
08000810  0C02 002D 1108          cmp.b     #45,D2
08000814  6602      1109          bne.s     MemoryChange_13
                    1110   ; RamPtr -= 2 ; ;
08000816  5583      1111          subq.l    #2,D3
                    1112   MemoryChange_13:
                    1113   ; RamPtr ++ ;
08000818  5283      1114          addq.l    #1,D3
0800081A  6000 FF32 1115          bra       MemoryChange_1
                    1116   MemoryChange_6:
0800081E  4CDF 041C 1117          movem.l   (A7)+,D2/D3/D4/A2
08000822  4E75      1118          rts
                    1119   ; }
                    1120   ; }
                    1121   ; /*******************************************************************
                    1122   ; ** Write a program to SPI Flash Chip from memory and verify by reading back
                    1123   ; ********************************************************************/
                    1124   ; void ProgramFlashChip(void)
                    1125   ; {
                    1126   _ProgramFlashChip:
08000824  4E75      1127          rts
                    1128   ; //
                    1129   ; // TODO : put your code here to program the 1st 256k of ram (where user program is held at hex 08000000) to SPI flash chip
                    1130   ; // TODO : then verify by reading it back and comparing to memory
                    1131   ; //
                    1132   ; }
                    1133   ; /*************************************************************************
                    1134   ; ** Load a program from SPI Flash Chip and copy to Dram
                    1135   ; **************************************************************************/
                    1136   ; void LoadFromFlashChip(void)
                    1137   ; {
                    1138   _LoadFromFlashChip:
                    1139   ; printf("\r\nLoading Program From SPI Flash....") ;
                    1140          pea       @m68kdebugLoadFromFlashChip_24.L
********  **** ****  Error: Undefined or illegal symbol
0800082C  4EB9 0800 1141          jsr       _printf
08000830  2276      
08000832  584F      1142          addq.w    #4,A7
08000834  4E75      1143          rts
                    1144   ; //
                    1145   ; // TODO : put your code here to read 256k of data from SPI flash chip and store in user ram starting at hex 08000000
                    1146   ; //
                    1147   ; }
                    1148   ; //////////////////////////////////////////////////////////////////////////////////////////////////
                    1149   ; // IMPORTANT
                    1150   ; // TG68 does not support the Native Trace mode of the original 68000 so tracing
                    1151   ; // has to be done with an interrupt (IRQ Level 6)
                    1152   ; //
                    1153   ; // To allow the 68000 to execute one more instruction after each pseudo trace (IRQ6)
                    1154   ; // the IRQ is removed in hardware once the TG68 reads the IRQ autovector (i.e. acknowledges the IRQ)
                    1155   ; //
                    1156   ; // on return from the IRQ service handler, the first access to the user memory program space
                    1157   ; // generates a fresh IRQ (in hardware) to generate a new trace, this allows the tg68 to
                    1158   ; // execute one more new instruction (without it the TG68 would trace on the same instruction
                    1159   ; // each time and not after the next one). It also means it doesn't simgle step outside the user
                    1160   ; // program area
                    1161   ; //
                    1162   ; // The bottom line is the Trace handler, which includes the Dump registers below
                    1163   ; // cannot access the user memory to display for example the Instruction Opcode or to disassemble etc
                    1164   ; // as this would lead to a new IRQ being reset and the TG68 would trace on same instruction
                    1165   ; // NOT SURE THIS IS TRUE NOW THAT TRACE HANDLER HAS BEEN MODIVIED TO NOT AUTOMATICALLY GENERATE A TRACE EXCEPTION
                    1166   ; // INSTEAD IT IS DONE IN THE 'N' COMMAND FOR NEXT
                    1167   ; /////////////////////////////////////////////////////////////////////////////////////////////////////
                    1168   ; void DumpRegisters()
                    1169   ; {
                    1170   _DumpRegisters:
08000836  48E7 3F3C 1171          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0800083A  45F9 0800 1172          lea       _putch.L,A2
0800083E  218C      
08000840  47F9 0800 1173          lea       _printf.L,A3
08000844  2276      
08000846  49F9 0800 1174          lea       _SR.L,A4
0800084A  3E68      
0800084C  4BF9 0800 1175          lea       _WatchPointString.L,A5
08000850  3EFE      
                    1176   ; short i, x, j, k ;
                    1177   ; unsigned char c, *BytePointer;
                    1178   ; // buld up strings for displaying watchpoints
                    1179   ; for(x = 0; x < (short)(8); x++)
08000852  4242      1180          clr.w     D2
                    1181   DumpRegisters_1:
08000854  0C42 0008 1182          cmp.w     #8,D2
08000858  6C00 01C6 1183          bge       DumpRegisters_3
                    1184   ; {
                    1185   ; if(WatchPointSetOrCleared[x] == 1)
0800085C  48C2      1186          ext.l     D2
0800085E  2002      1187          move.l    D2,D0
08000860  E588      1188          lsl.l     #2,D0
08000862  41F9 0800 1189          lea       _WatchPointSetOrCleared.L,A0
08000866  3EDE      
08000868  2030 0800 1190          move.l    0(A0,D0.L),D0
0800086C  0C80 0000 1191          cmp.l     #1,D0
08000870  0001      
08000872  6600 0186 1192          bne       DumpRegisters_4
                    1193   ; {
                    1194   ; sprintf(WatchPointString[x], "$%08X  ", WatchPointAddress[x]) ;
08000876  48C2      1195          ext.l     D2
08000878  2202      1196          move.l    D2,D1
0800087A  E589      1197          lsl.l     #2,D1
0800087C  41F9 0800 1198          lea       _WatchPointAddress.L,A0
08000880  3EBE      
08000882  2F30 1800 1199          move.l    0(A0,D1.L),-(A7)
                    1200          pea       @m68kdebugDumpRegisters_25.L
********  **** ****  Error: Undefined or illegal symbol
0800088C  220D      1201          move.l    A5,D1
0800088E  48C2      1202          ext.l     D2
08000890  2F00      1203          move.l    D0,-(A7)
08000892  2002      1204          move.l    D2,D0
08000894  C1FC 0064 1205          muls      #100,D0
08000898  D280      1206          add.l     D0,D1
0800089A  201F      1207          move.l    (A7)+,D0
0800089C  2F01      1208          move.l    D1,-(A7)
0800089E  4EB9 0800 1209          jsr       _sprintf
080008A2  2212      
080008A4  DEFC 000C 1210          add.w     #12,A7
                    1211   ; BytePointer = (char *)(WatchPointAddress[x]) ;
080008A8  48C2      1212          ext.l     D2
080008AA  2002      1213          move.l    D2,D0
080008AC  E588      1214          lsl.l     #2,D0
080008AE  41F9 0800 1215          lea       _WatchPointAddress.L,A0
080008B2  3EBE      
080008B4  2A30 0800 1216          move.l    0(A0,D0.L),D5
                    1217   ; for(j = 0; j < (short)(16); j+=2)
080008B8  4243      1218          clr.w     D3
                    1219   DumpRegisters_6:
080008BA  0C43 0010 1220          cmp.w     #16,D3
080008BE  6C00 0082 1221          bge       DumpRegisters_8
                    1222   ; {
                    1223   ; for(k = 0; k < (short)(2); k++)
080008C2  4246      1224          clr.w     D6
                    1225   DumpRegisters_9:
080008C4  0C46 0002 1226          cmp.w     #2,D6
080008C8  6C00 0052 1227          bge       DumpRegisters_11
                    1228   ; {
                    1229   ; sprintf(TempString, "%02X", BytePointer[j+k]) ;
080008CC  2045      1230          move.l    D5,A0
080008CE  48C3      1231          ext.l     D3
080008D0  2203      1232          move.l    D3,D1
080008D2  48C6      1233          ext.l     D6
080008D4  D286      1234          add.l     D6,D1
080008D6  1230 1800 1235          move.b    0(A0,D1.L),D1
080008DA  C2BC 0000 1236          and.l     #255,D1
080008DE  00FF      
080008E0  2F01      1237          move.l    D1,-(A7)
                    1238          pea       @m68kdebugDumpRegisters_26.L
********  **** ****  Error: Undefined or illegal symbol
080008E8  4879 0800 1239          pea       _TempString.L
080008EC  421E      
080008EE  4EB9 0800 1240          jsr       _sprintf
080008F2  2212      
080008F4  DEFC 000C 1241          add.w     #12,A7
                    1242   ; strcat(WatchPointString[x], TempString) ;
080008F8  4879 0800 1243          pea       _TempString.L
080008FC  421E      
080008FE  220D      1244          move.l    A5,D1
08000900  48C2      1245          ext.l     D2
08000902  2F00      1246          move.l    D0,-(A7)
08000904  2002      1247          move.l    D2,D0
08000906  C1FC 0064 1248          muls      #100,D0
0800090A  D280      1249          add.l     D0,D1
0800090C  201F      1250          move.l    (A7)+,D0
0800090E  2F01      1251          move.l    D1,-(A7)
08000910  4EB9 0800 1252          jsr       _strcat
08000914  2244      
08000916  504F      1253          addq.w    #8,A7
08000918  5246      1254          addq.w    #1,D6
0800091A  60A8      1255          bra       DumpRegisters_9
                    1256   DumpRegisters_11:
                    1257   ; }
                    1258   ; strcat(WatchPointString[x]," ") ;
                    1259          pea       @m68kdebugDumpRegisters_27.L
********  **** ****  Error: Undefined or illegal symbol
08000922  220D      1260          move.l    A5,D1
08000924  48C2      1261          ext.l     D2
08000926  2F00      1262          move.l    D0,-(A7)
08000928  2002      1263          move.l    D2,D0
0800092A  C1FC 0064 1264          muls      #100,D0
0800092E  D280      1265          add.l     D0,D1
08000930  201F      1266          move.l    (A7)+,D0
08000932  2F01      1267          move.l    D1,-(A7)
08000934  4EB9 0800 1268          jsr       _strcat
08000938  2244      
0800093A  504F      1269          addq.w    #8,A7
0800093C  5443      1270          addq.w    #2,D3
0800093E  6000 FF7A 1271          bra       DumpRegisters_6
                    1272   DumpRegisters_8:
                    1273   ; }
                    1274   ; strcat(WatchPointString[x], "  ") ;
                    1275          pea       @m68kdebugDumpRegisters_28.L
********  **** ****  Error: Undefined or illegal symbol
08000948  220D      1276          move.l    A5,D1
0800094A  48C2      1277          ext.l     D2
0800094C  2F00      1278          move.l    D0,-(A7)
0800094E  2002      1279          move.l    D2,D0
08000950  C1FC 0064 1280          muls      #100,D0
08000954  D280      1281          add.l     D0,D1
08000956  201F      1282          move.l    (A7)+,D0
08000958  2F01      1283          move.l    D1,-(A7)
0800095A  4EB9 0800 1284          jsr       _strcat
0800095E  2244      
08000960  504F      1285          addq.w    #8,A7
                    1286   ; BytePointer = (char *)(WatchPointAddress[x]) ;
08000962  48C2      1287          ext.l     D2
08000964  2002      1288          move.l    D2,D0
08000966  E588      1289          lsl.l     #2,D0
08000968  41F9 0800 1290          lea       _WatchPointAddress.L,A0
0800096C  3EBE      
0800096E  2A30 0800 1291          move.l    0(A0,D0.L),D5
                    1292   ; for(j = 0; j < (short)(16); j++)
08000972  4243      1293          clr.w     D3
                    1294   DumpRegisters_12:
08000974  0C43 0010 1295          cmp.w     #16,D3
08000978  6C00 007E 1296          bge       DumpRegisters_14
                    1297   ; {
                    1298   ; c = ((char)(BytePointer[j]) & 0x7f) ;
0800097C  2045      1299          move.l    D5,A0
0800097E  48C3      1300          ext.l     D3
08000980  1030 3800 1301          move.b    0(A0,D3.L),D0
08000984  C03C 007F 1302          and.b     #127,D0
08000988  1E00      1303          move.b    D0,D7
                    1304   ; if((c > (char)(0x7f)) || (c < (char)(' ')))
0800098A  0C07 007F 1305          cmp.b     #127,D7
0800098E  6206      1306          bhi.s     DumpRegisters_17
08000990  0C07 0020 1307          cmp.b     #32,D7
08000994  6416      1308          bhs.s     DumpRegisters_15
                    1309   DumpRegisters_17:
                    1310   ; sprintf(TempString, ".") ;
                    1311          pea       @m68kdebugDumpRegisters_29.L
********  **** ****  Error: Undefined or illegal symbol
0800099C  4879 0800 1312          pea       _TempString.L
080009A0  421E      
080009A2  4EB9 0800 1313          jsr       _sprintf
080009A6  2212      
080009A8  504F      1314          addq.w    #8,A7
080009AA  6026      1315          bra.s     DumpRegisters_16
                    1316   DumpRegisters_15:
                    1317   ; else
                    1318   ; sprintf(TempString, "%c", BytePointer[j]) ;
080009AC  2045      1319          move.l    D5,A0
080009AE  48C3      1320          ext.l     D3
080009B0  1230 3800 1321          move.b    0(A0,D3.L),D1
080009B4  C2BC 0000 1322          and.l     #255,D1
080009B8  00FF      
080009BA  2F01      1323          move.l    D1,-(A7)
                    1324          pea       @m68kdebugDumpRegisters_30.L
********  **** ****  Error: Undefined or illegal symbol
080009C2  4879 0800 1325          pea       _TempString.L
080009C6  421E      
080009C8  4EB9 0800 1326          jsr       _sprintf
080009CC  2212      
080009CE  DEFC 000C 1327          add.w     #12,A7
                    1328   DumpRegisters_16:
                    1329   ; strcat(WatchPointString[x], TempString) ;
080009D2  4879 0800 1330          pea       _TempString.L
080009D6  421E      
080009D8  220D      1331          move.l    A5,D1
080009DA  48C2      1332          ext.l     D2
080009DC  2F00      1333          move.l    D0,-(A7)
080009DE  2002      1334          move.l    D2,D0
080009E0  C1FC 0064 1335          muls      #100,D0
080009E4  D280      1336          add.l     D0,D1
080009E6  201F      1337          move.l    (A7)+,D0
080009E8  2F01      1338          move.l    D1,-(A7)
080009EA  4EB9 0800 1339          jsr       _strcat
080009EE  2244      
080009F0  504F      1340          addq.w    #8,A7
080009F2  5243      1341          addq.w    #1,D3
080009F4  6000 FF7E 1342          bra       DumpRegisters_12
                    1343   DumpRegisters_14:
080009F8  6020      1344          bra.s     DumpRegisters_5
                    1345   DumpRegisters_4:
                    1346   ; }
                    1347   ; }
                    1348   ; else
                    1349   ; strcpy(WatchPointString[x], "") ;
                    1350          pea       @m68kdebugDumpRegisters_31.L
********  **** ****  Error: Undefined or illegal symbol
08000A00  220D      1351          move.l    A5,D1
08000A02  48C2      1352          ext.l     D2
08000A04  2F00      1353          move.l    D0,-(A7)
08000A06  2002      1354          move.l    D2,D0
08000A08  C1FC 0064 1355          muls      #100,D0
08000A0C  D280      1356          add.l     D0,D1
08000A0E  201F      1357          move.l    (A7)+,D0
08000A10  2F01      1358          move.l    D1,-(A7)
08000A12  4EB9 0800 1359          jsr       _strcpy
08000A16  209E      
08000A18  504F      1360          addq.w    #8,A7
                    1361   DumpRegisters_5:
08000A1A  5242      1362          addq.w    #1,D2
08000A1C  6000 FE36 1363          bra       DumpRegisters_1
                    1364   DumpRegisters_3:
                    1365   ; }
                    1366   ; printf("\r\n\r\n D0 = $%08X  A0 = $%08X",d0,a0) ;
08000A20  2F39 0800 1367          move.l    _a0.L,-(A7)
08000A24  3E40      
08000A26  2F39 0800 1368          move.l    _d0.L,-(A7)
08000A2A  3E20      
                    1369          pea       @m68kdebugDumpRegisters_32.L
********  **** ****  Error: Undefined or illegal symbol
08000A32  4E93      1370          jsr       (A3)
08000A34  DEFC 000C 1371          add.w     #12,A7
                    1372   ; printf("\r\n D1 = $%08X  A1 = $%08X",d1,a1) ;
08000A38  2F39 0800 1373          move.l    _a1.L,-(A7)
08000A3C  3E44      
08000A3E  2F39 0800 1374          move.l    _d1.L,-(A7)
08000A42  3E24      
                    1375          pea       @m68kdebugDumpRegisters_33.L
********  **** ****  Error: Undefined or illegal symbol
08000A4A  4E93      1376          jsr       (A3)
08000A4C  DEFC 000C 1377          add.w     #12,A7
                    1378   ; printf("\r\n D2 = $%08X  A2 = $%08X",d2,a2) ;
08000A50  2F39 0800 1379          move.l    _a2.L,-(A7)
08000A54  3E48      
08000A56  2F39 0800 1380          move.l    _d2.L,-(A7)
08000A5A  3E28      
                    1381          pea       @m68kdebugDumpRegisters_34.L
********  **** ****  Error: Undefined or illegal symbol
08000A62  4E93      1382          jsr       (A3)
08000A64  DEFC 000C 1383          add.w     #12,A7
                    1384   ; printf("\r\n D3 = $%08X  A3 = $%08X",d3,a3) ;
08000A68  2F39 0800 1385          move.l    _a3.L,-(A7)
08000A6C  3E4C      
08000A6E  2F39 0800 1386          move.l    _d3.L,-(A7)
08000A72  3E2C      
                    1387          pea       @m68kdebugDumpRegisters_35.L
********  **** ****  Error: Undefined or illegal symbol
08000A7A  4E93      1388          jsr       (A3)
08000A7C  DEFC 000C 1389          add.w     #12,A7
                    1390   ; printf("\r\n D4 = $%08X  A4 = $%08X",d4,a4) ;
08000A80  2F39 0800 1391          move.l    _a4.L,-(A7)
08000A84  3E50      
08000A86  2F39 0800 1392          move.l    _d4.L,-(A7)
08000A8A  3E30      
                    1393          pea       @m68kdebugDumpRegisters_36.L
********  **** ****  Error: Undefined or illegal symbol
08000A92  4E93      1394          jsr       (A3)
08000A94  DEFC 000C 1395          add.w     #12,A7
                    1396   ; printf("\r\n D5 = $%08X  A5 = $%08X",d5,a5) ;
08000A98  2F39 0800 1397          move.l    _a5.L,-(A7)
08000A9C  3E54      
08000A9E  2F39 0800 1398          move.l    _d5.L,-(A7)
08000AA2  3E34      
                    1399          pea       @m68kdebugDumpRegisters_37.L
********  **** ****  Error: Undefined or illegal symbol
08000AAA  4E93      1400          jsr       (A3)
08000AAC  DEFC 000C 1401          add.w     #12,A7
                    1402   ; printf("\r\n D6 = $%08X  A6 = $%08X",d6,a6) ;
08000AB0  2F39 0800 1403          move.l    _a6.L,-(A7)
08000AB4  3E58      
08000AB6  2F39 0800 1404          move.l    _d6.L,-(A7)
08000ABA  3E38      
                    1405          pea       @m68kdebugDumpRegisters_38.L
********  **** ****  Error: Undefined or illegal symbol
08000AC2  4E93      1406          jsr       (A3)
08000AC4  DEFC 000C 1407          add.w     #12,A7
                    1408   ; printf("\r\n D7 = $%08X  A7 = $%08X",d7,((SR & (unsigned short int)(0x2000)) == ((unsigned short int)(0x2000))) ? SSP : USP) ;
08000AC8  3214      1409          move.w    (A4),D1
08000ACA  C27C 2000 1410          and.w     #8192,D1
08000ACE  0C41 2000 1411          cmp.w     #8192,D1
08000AD2  6608      1412          bne.s     DumpRegisters_18
08000AD4  2239 0800 1413          move.l    _SSP.L,D1
08000AD8  3E60      
08000ADA  6006      1414          bra.s     DumpRegisters_19
                    1415   DumpRegisters_18:
08000ADC  2239 0800 1416          move.l    _USP.L,D1
08000AE0  3E64      
                    1417   DumpRegisters_19:
08000AE2  2F01      1418          move.l    D1,-(A7)
08000AE4  2F39 0800 1419          move.l    _d7.L,-(A7)
08000AE8  3E3C      
                    1420          pea       @m68kdebugDumpRegisters_39.L
********  **** ****  Error: Undefined or illegal symbol
08000AF0  4E93      1421          jsr       (A3)
08000AF2  DEFC 000C 1422          add.w     #12,A7
                    1423   ; printf("\r\n\r\nUSP = $%08X  (A7) User SP", USP ) ;
08000AF6  2F39 0800 1424          move.l    _USP.L,-(A7)
08000AFA  3E64      
                    1425          pea       @m68kdebugDumpRegisters_40.L
********  **** ****  Error: Undefined or illegal symbol
08000B02  4E93      1426          jsr       (A3)
08000B04  504F      1427          addq.w    #8,A7
                    1428   ; printf("\r\nSSP = $%08X  (A7) Supervisor SP", SSP) ;
08000B06  2F39 0800 1429          move.l    _SSP.L,-(A7)
08000B0A  3E60      
                    1430          pea       @m68kdebugDumpRegisters_41.L
********  **** ****  Error: Undefined or illegal symbol
08000B12  4E93      1431          jsr       (A3)
08000B14  504F      1432          addq.w    #8,A7
                    1433   ; printf("\r\n SR = $%04X   ",SR) ;
08000B16  3214      1434          move.w    (A4),D1
08000B18  C2BC 0000 1435          and.l     #65535,D1
08000B1C  FFFF      
08000B1E  2F01      1436          move.l    D1,-(A7)
                    1437          pea       @m68kdebugDumpRegisters_42.L
********  **** ****  Error: Undefined or illegal symbol
08000B26  4E93      1438          jsr       (A3)
08000B28  504F      1439          addq.w    #8,A7
                    1440   ; // display the status word in characters etc.
                    1441   ; printf("   [") ;
                    1442          pea       @m68kdebugDumpRegisters_43.L
********  **** ****  Error: Undefined or illegal symbol
08000B30  4E93      1443          jsr       (A3)
08000B32  584F      1444          addq.w    #4,A7
                    1445   ; if((SR & (unsigned short int)(0x8000)) == (unsigned short int)(0x8000)) putchar('T') ; else putchar('-') ;      // Trace bit(bit 15)
08000B34  3014      1446          move.w    (A4),D0
08000B36  C07C 8000 1447          and.w     #32768,D0
08000B3A  0C40 8000 1448          cmp.w     #32768,D0
08000B3E  660A      1449          bne.s     DumpRegisters_20
08000B40  4878 0054 1450          pea       84
08000B44  4E92      1451          jsr       (A2)
08000B46  584F      1452          addq.w    #4,A7
08000B48  6008      1453          bra.s     DumpRegisters_21
                    1454   DumpRegisters_20:
08000B4A  4878 002D 1455          pea       45
08000B4E  4E92      1456          jsr       (A2)
08000B50  584F      1457          addq.w    #4,A7
                    1458   DumpRegisters_21:
                    1459   ; if((SR & (unsigned short int)(0x2000)) == (unsigned short int)(0x2000)) putchar('S') ; else putchar('U') ;      // supervisor bit  (bit 13)
08000B52  3014      1460          move.w    (A4),D0
08000B54  C07C 2000 1461          and.w     #8192,D0
08000B58  0C40 2000 1462          cmp.w     #8192,D0
08000B5C  660A      1463          bne.s     DumpRegisters_22
08000B5E  4878 0053 1464          pea       83
08000B62  4E92      1465          jsr       (A2)
08000B64  584F      1466          addq.w    #4,A7
08000B66  6008      1467          bra.s     DumpRegisters_23
                    1468   DumpRegisters_22:
08000B68  4878 0055 1469          pea       85
08000B6C  4E92      1470          jsr       (A2)
08000B6E  584F      1471          addq.w    #4,A7
                    1472   DumpRegisters_23:
                    1473   ; if((SR & (unsigned short int)(0x0400)) == (unsigned short int)(0x0400)) putchar('1') ; else putchar('0') ;      // IRQ2 Bit (bit 10)
08000B70  3014      1474          move.w    (A4),D0
08000B72  C07C 0400 1475          and.w     #1024,D0
08000B76  0C40 0400 1476          cmp.w     #1024,D0
08000B7A  660A      1477          bne.s     DumpRegisters_24
08000B7C  4878 0031 1478          pea       49
08000B80  4E92      1479          jsr       (A2)
08000B82  584F      1480          addq.w    #4,A7
08000B84  6008      1481          bra.s     DumpRegisters_25
                    1482   DumpRegisters_24:
08000B86  4878 0030 1483          pea       48
08000B8A  4E92      1484          jsr       (A2)
08000B8C  584F      1485          addq.w    #4,A7
                    1486   DumpRegisters_25:
                    1487   ; if((SR & (unsigned short int)(0x0200)) == (unsigned short int)(0x0200)) putchar('1') ; else putchar('0') ;      // IRQ1 Bit (bit 9)
08000B8E  3014      1488          move.w    (A4),D0
08000B90  C07C 0200 1489          and.w     #512,D0
08000B94  0C40 0200 1490          cmp.w     #512,D0
08000B98  660A      1491          bne.s     DumpRegisters_26
08000B9A  4878 0031 1492          pea       49
08000B9E  4E92      1493          jsr       (A2)
08000BA0  584F      1494          addq.w    #4,A7
08000BA2  6008      1495          bra.s     DumpRegisters_27
                    1496   DumpRegisters_26:
08000BA4  4878 0030 1497          pea       48
08000BA8  4E92      1498          jsr       (A2)
08000BAA  584F      1499          addq.w    #4,A7
                    1500   DumpRegisters_27:
                    1501   ; if((SR & (unsigned short int)(0x0100)) == (unsigned short int)(0x0100)) putchar('1') ; else putchar('0') ;      // IRQ0 Bit (bit 8)
08000BAC  3014      1502          move.w    (A4),D0
08000BAE  C07C 0100 1503          and.w     #256,D0
08000BB2  0C40 0100 1504          cmp.w     #256,D0
08000BB6  660A      1505          bne.s     DumpRegisters_28
08000BB8  4878 0031 1506          pea       49
08000BBC  4E92      1507          jsr       (A2)
08000BBE  584F      1508          addq.w    #4,A7
08000BC0  6008      1509          bra.s     DumpRegisters_29
                    1510   DumpRegisters_28:
08000BC2  4878 0030 1511          pea       48
08000BC6  4E92      1512          jsr       (A2)
08000BC8  584F      1513          addq.w    #4,A7
                    1514   DumpRegisters_29:
                    1515   ; if((SR & (unsigned short int)(0x0010)) == (unsigned short int)(0x0010)) putchar('X') ; else putchar('-') ;      // X Bit (bit 4)
08000BCA  3014      1516          move.w    (A4),D0
08000BCC  C07C 0010 1517          and.w     #16,D0
08000BD0  0C40 0010 1518          cmp.w     #16,D0
08000BD4  660A      1519          bne.s     DumpRegisters_30
08000BD6  4878 0058 1520          pea       88
08000BDA  4E92      1521          jsr       (A2)
08000BDC  584F      1522          addq.w    #4,A7
08000BDE  6008      1523          bra.s     DumpRegisters_31
                    1524   DumpRegisters_30:
08000BE0  4878 002D 1525          pea       45
08000BE4  4E92      1526          jsr       (A2)
08000BE6  584F      1527          addq.w    #4,A7
                    1528   DumpRegisters_31:
                    1529   ; if((SR & (unsigned short int)(0x0008)) == (unsigned short int)(0x0008)) putchar('N') ; else putchar('-') ;      // N Bit (bit 3)
08000BE8  3014      1530          move.w    (A4),D0
08000BEA  C07C 0008 1531          and.w     #8,D0
08000BEE  0C40 0008 1532          cmp.w     #8,D0
08000BF2  660A      1533          bne.s     DumpRegisters_32
08000BF4  4878 004E 1534          pea       78
08000BF8  4E92      1535          jsr       (A2)
08000BFA  584F      1536          addq.w    #4,A7
08000BFC  6008      1537          bra.s     DumpRegisters_33
                    1538   DumpRegisters_32:
08000BFE  4878 002D 1539          pea       45
08000C02  4E92      1540          jsr       (A2)
08000C04  584F      1541          addq.w    #4,A7
                    1542   DumpRegisters_33:
                    1543   ; if((SR & (unsigned short int)(0x0004)) == (unsigned short int)(0x0004)) putchar('Z') ; else putchar('-') ;      // Z Bit (bit 2)
08000C06  3014      1544          move.w    (A4),D0
08000C08  C07C 0004 1545          and.w     #4,D0
08000C0C  0C40 0004 1546          cmp.w     #4,D0
08000C10  660A      1547          bne.s     DumpRegisters_34
08000C12  4878 005A 1548          pea       90
08000C16  4E92      1549          jsr       (A2)
08000C18  584F      1550          addq.w    #4,A7
08000C1A  6008      1551          bra.s     DumpRegisters_35
                    1552   DumpRegisters_34:
08000C1C  4878 002D 1553          pea       45
08000C20  4E92      1554          jsr       (A2)
08000C22  584F      1555          addq.w    #4,A7
                    1556   DumpRegisters_35:
                    1557   ; if((SR & (unsigned short int)(0x0002)) == (unsigned short int)(0x0002)) putchar('V') ; else putchar('-') ;      // V Bit (bit 1)
08000C24  3014      1558          move.w    (A4),D0
08000C26  C07C 0002 1559          and.w     #2,D0
08000C2A  0C40 0002 1560          cmp.w     #2,D0
08000C2E  660A      1561          bne.s     DumpRegisters_36
08000C30  4878 0056 1562          pea       86
08000C34  4E92      1563          jsr       (A2)
08000C36  584F      1564          addq.w    #4,A7
08000C38  6008      1565          bra.s     DumpRegisters_37
                    1566   DumpRegisters_36:
08000C3A  4878 002D 1567          pea       45
08000C3E  4E92      1568          jsr       (A2)
08000C40  584F      1569          addq.w    #4,A7
                    1570   DumpRegisters_37:
                    1571   ; if((SR & (unsigned short int)(0x0001)) == (unsigned short int)(0x0001)) putchar('C') ; else putchar('-') ;      // C Bit (bit 0)
08000C42  3014      1572          move.w    (A4),D0
08000C44  C07C 0001 1573          and.w     #1,D0
08000C48  0C40 0001 1574          cmp.w     #1,D0
08000C4C  660A      1575          bne.s     DumpRegisters_38
08000C4E  4878 0043 1576          pea       67
08000C52  4E92      1577          jsr       (A2)
08000C54  584F      1578          addq.w    #4,A7
08000C56  6008      1579          bra.s     DumpRegisters_39
                    1580   DumpRegisters_38:
08000C58  4878 002D 1581          pea       45
08000C5C  4E92      1582          jsr       (A2)
08000C5E  584F      1583          addq.w    #4,A7
                    1584   DumpRegisters_39:
                    1585   ; putchar(']') ;
08000C60  4878 005D 1586          pea       93
08000C64  4E92      1587          jsr       (A2)
08000C66  584F      1588          addq.w    #4,A7
                    1589   ; printf("\r\n PC = $%08X  ", PC) ;
08000C68  2F39 0800 1590          move.l    _PC.L,-(A7)
08000C6C  3E5C      
                    1591          pea       @m68kdebugDumpRegisters_44.L
********  **** ****  Error: Undefined or illegal symbol
08000C74  4E93      1592          jsr       (A3)
08000C76  504F      1593          addq.w    #8,A7
                    1594   ; if(*(unsigned short int *)(PC) == 0x4e4e)
08000C78  2039 0800 1595          move.l    _PC.L,D0
08000C7C  3E5C      
08000C7E  2040      1596          move.l    D0,A0
08000C80  3010      1597          move.w    (A0),D0
08000C82  0C40 4E4E 1598          cmp.w     #20046,D0
08000C86  660A      1599          bne.s     DumpRegisters_40
                    1600   ; printf("[@ BREAKPOINT]") ;
                    1601          pea       @m68kdebugDumpRegisters_45.L
********  **** ****  Error: Undefined or illegal symbol
08000C8E  4E93      1602          jsr       (A3)
08000C90  584F      1603          addq.w    #4,A7
                    1604   DumpRegisters_40:
                    1605   ; printf("\r\n") ;
                    1606          pea       @m68kdebugDumpRegisters_46.L
********  **** ****  Error: Undefined or illegal symbol
08000C98  4E93      1607          jsr       (A3)
08000C9A  584F      1608          addq.w    #4,A7
                    1609   ; for(i=0; i < 8; i++)    {
08000C9C  4244      1610          clr.w     D4
                    1611   DumpRegisters_42:
08000C9E  0C44 0008 1612          cmp.w     #8,D4
08000CA2  6C00 0040 1613          bge       DumpRegisters_44
                    1614   ; if(WatchPointSetOrCleared[i] == 1)
08000CA6  48C4      1615          ext.l     D4
08000CA8  2004      1616          move.l    D4,D0
08000CAA  E588      1617          lsl.l     #2,D0
08000CAC  41F9 0800 1618          lea       _WatchPointSetOrCleared.L,A0
08000CB0  3EDE      
08000CB2  2030 0800 1619          move.l    0(A0,D0.L),D0
08000CB6  0C80 0000 1620          cmp.l     #1,D0
08000CBA  0001      
08000CBC  6622      1621          bne.s     DumpRegisters_45
                    1622   ; printf("\r\nWP%d = %s", i, WatchPointString[i]) ;
08000CBE  220D      1623          move.l    A5,D1
08000CC0  48C4      1624          ext.l     D4
08000CC2  2F00      1625          move.l    D0,-(A7)
08000CC4  2004      1626          move.l    D4,D0
08000CC6  C1FC 0064 1627          muls      #100,D0
08000CCA  D280      1628          add.l     D0,D1
08000CCC  201F      1629          move.l    (A7)+,D0
08000CCE  2F01      1630          move.l    D1,-(A7)
08000CD0  48C4      1631          ext.l     D4
08000CD2  2F04      1632          move.l    D4,-(A7)
                    1633          pea       @m68kdebugDumpRegisters_47.L
********  **** ****  Error: Undefined or illegal symbol
08000CDA  4E93      1634          jsr       (A3)
08000CDC  DEFC 000C 1635          add.w     #12,A7
                    1636   DumpRegisters_45:
08000CE0  5244      1637          addq.w    #1,D4
08000CE2  60BA      1638          bra       DumpRegisters_42
                    1639   DumpRegisters_44:
08000CE4  4CDF 3CFC 1640          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08000CE8  4E75      1641          rts
                    1642   ; }
                    1643   ; }
                    1644   ; // Trace Exception Handler
                    1645   ; void DumpRegistersandPause(void)
                    1646   ; {
                    1647   _DumpRegistersandPause:
08000CEA  2F0A      1648          move.l    A2,-(A7)
08000CEC  45F9 0800 1649          lea       _printf.L,A2
08000CF0  2276      
                    1650   ; printf("\r\n\r\n\r\n\r\n\r\n\r\nSingle Step  :[ON]") ;
                    1651          pea       @m68kdebugDumpRegistersandPause_48.L
********  **** ****  Error: Undefined or illegal symbol
08000CF8  4E92      1652          jsr       (A2)
08000CFA  584F      1653          addq.w    #4,A7
                    1654   ; printf("\r\nBreak Points :[Disabled]") ;
                    1655          pea       @m68kdebugDumpRegistersandPause_49.L
********  **** ****  Error: Undefined or illegal symbol
08000D02  4E92      1656          jsr       (A2)
08000D04  584F      1657          addq.w    #4,A7
                    1658   ; DumpRegisters() ;
08000D06  4EB9 0800 1659          jsr       _DumpRegisters
08000D0A  0836      
                    1660   ; printf("\r\nPress <SPACE> to Execute Next Instruction");
                    1661          pea       @m68kdebugDumpRegistersandPause_50.L
********  **** ****  Error: Undefined or illegal symbol
08000D12  4E92      1662          jsr       (A2)
08000D14  584F      1663          addq.w    #4,A7
                    1664   ; printf("\r\nPress <ESC> to Resume Program") ;
                    1665          pea       @m68kdebugDumpRegistersandPause_51.L
********  **** ****  Error: Undefined or illegal symbol
08000D1C  4E92      1666          jsr       (A2)
08000D1E  584F      1667          addq.w    #4,A7
                    1668   ; menu() ;
08000D20  4EB9 0800 1669          jsr       _menu
08000D24  190E      
08000D26  245F      1670          move.l    (A7)+,A2
08000D28  4E75      1671          rts
                    1672   ; }
                    1673   ; void ChangeRegisters(void)
                    1674   ; {
                    1675   _ChangeRegisters:
08000D2A  4E56 FFFC 1676          link      A6,#-4
08000D2E  48E7 303C 1677          movem.l   D2/D3/A2/A3/A4/A5,-(A7)
08000D32  45F9 0800 1678          lea       _printf.L,A2
08000D36  2276      
08000D38  47EE FFFC 1679          lea       -4(A6),A3
08000D3C  49F9 0800 1680          lea       _Get8HexDigits.L,A4
08000D40  03DE      
08000D42  4BF9 0800 1681          lea       __getch.L,A5
08000D46  0290      
                    1682   ; // get register name d0-d7, a0-a7, up, sp, sr, pc
                    1683   ; int reg_val ;
                    1684   ; char c, reg[3] ;
                    1685   ; reg[0] = tolower(_getch()) ;
08000D48  2F00      1686          move.l    D0,-(A7)
08000D4A  4E95      1687          jsr       (A5)
08000D4C  2200      1688          move.l    D0,D1
08000D4E  201F      1689          move.l    (A7)+,D0
08000D50  2F01      1690          move.l    D1,-(A7)
08000D52  4EB9 0800 1691          jsr       _tolower
08000D56  21F6      
08000D58  584F      1692          addq.w    #4,A7
08000D5A  1680      1693          move.b    D0,(A3)
                    1694   ; reg[1] = c = tolower(_getch()) ;
08000D5C  2F00      1695          move.l    D0,-(A7)
08000D5E  4E95      1696          jsr       (A5)
08000D60  2200      1697          move.l    D0,D1
08000D62  201F      1698          move.l    (A7)+,D0
08000D64  2F01      1699          move.l    D1,-(A7)
08000D66  4EB9 0800 1700          jsr       _tolower
08000D6A  21F6      
08000D6C  584F      1701          addq.w    #4,A7
08000D6E  1400      1702          move.b    D0,D2
08000D70  1740 0001 1703          move.b    D0,1(A3)
                    1704   ; if(reg[0] == (char)('d'))  {    // change data register
08000D74  1013      1705          move.b    (A3),D0
08000D76  0C00 0064 1706          cmp.b     #100,D0
08000D7A  6600 00AE 1707          bne       ChangeRegisters_1
                    1708   ; if((reg[1] > (char)('7')) || (reg[1] < (char)('0'))) {
08000D7E  102B 0001 1709          move.b    1(A3),D0
08000D82  0C00 0037 1710          cmp.b     #55,D0
08000D86  6E0A      1711          bgt.s     ChangeRegisters_5
08000D88  102B 0001 1712          move.b    1(A3),D0
08000D8C  0C00 0030 1713          cmp.b     #48,D0
08000D90  6C0E      1714          bge.s     ChangeRegisters_3
                    1715   ChangeRegisters_5:
                    1716   ; printf("\r\nIllegal Data Register : Use D0-D7.....\r\n") ;
                    1717          pea       @m68kdebugChangeRegisters_52.L
********  **** ****  Error: Undefined or illegal symbol
08000D98  4E92      1718          jsr       (A2)
08000D9A  584F      1719          addq.w    #4,A7
                    1720   ; return ;
08000D9C  6000 0248 1721          bra       ChangeRegisters_6
                    1722   ChangeRegisters_3:
                    1723   ; }
                    1724   ; else {
                    1725   ; printf("\r\nD%c = ", c) ;
08000DA0  4882      1726          ext.w     D2
08000DA2  48C2      1727          ext.l     D2
08000DA4  2F02      1728          move.l    D2,-(A7)
                    1729          pea       @m68kdebugChangeRegisters_53.L
********  **** ****  Error: Undefined or illegal symbol
08000DAC  4E92      1730          jsr       (A2)
08000DAE  504F      1731          addq.w    #8,A7
                    1732   ; reg_val = Get8HexDigits(0) ;    // read 32 bit value from user keyboard
08000DB0  42A7      1733          clr.l     -(A7)
08000DB2  4E94      1734          jsr       (A4)
08000DB4  584F      1735          addq.w    #4,A7
08000DB6  2600      1736          move.l    D0,D3
                    1737   ; }
                    1738   ; // bit cludgy but d0-d7 not stored as an array for good reason
                    1739   ; if(c == (char)('0'))
08000DB8  0C02 0030 1740          cmp.b     #48,D2
08000DBC  660A      1741          bne.s     ChangeRegisters_7
                    1742   ; d0 = reg_val ;
08000DBE  23C3 0800 1743          move.l    D3,_d0.L
08000DC2  3E20      
08000DC4  6000 0060 1744          bra       ChangeRegisters_20
                    1745   ChangeRegisters_7:
                    1746   ; else if(c == (char)('1'))
08000DC8  0C02 0031 1747          cmp.b     #49,D2
08000DCC  660A      1748          bne.s     ChangeRegisters_9
                    1749   ; d1 = reg_val ;
08000DCE  23C3 0800 1750          move.l    D3,_d1.L
08000DD2  3E24      
08000DD4  6000 0050 1751          bra       ChangeRegisters_20
                    1752   ChangeRegisters_9:
                    1753   ; else if(c == (char)('2'))
08000DD8  0C02 0032 1754          cmp.b     #50,D2
08000DDC  660A      1755          bne.s     ChangeRegisters_11
                    1756   ; d2 = reg_val ;
08000DDE  23C3 0800 1757          move.l    D3,_d2.L
08000DE2  3E28      
08000DE4  6000 0040 1758          bra       ChangeRegisters_20
                    1759   ChangeRegisters_11:
                    1760   ; else if(c == (char)('3'))
08000DE8  0C02 0033 1761          cmp.b     #51,D2
08000DEC  6608      1762          bne.s     ChangeRegisters_13
                    1763   ; d3 = reg_val ;
08000DEE  23C3 0800 1764          move.l    D3,_d3.L
08000DF2  3E2C      
08000DF4  6030      1765          bra.s     ChangeRegisters_20
                    1766   ChangeRegisters_13:
                    1767   ; else if(c == (char)('4'))
08000DF6  0C02 0034 1768          cmp.b     #52,D2
08000DFA  6608      1769          bne.s     ChangeRegisters_15
                    1770   ; d4 = reg_val ;
08000DFC  23C3 0800 1771          move.l    D3,_d4.L
08000E00  3E30      
08000E02  6022      1772          bra.s     ChangeRegisters_20
                    1773   ChangeRegisters_15:
                    1774   ; else if(c == (char)('5'))
08000E04  0C02 0035 1775          cmp.b     #53,D2
08000E08  6608      1776          bne.s     ChangeRegisters_17
                    1777   ; d5 = reg_val ;
08000E0A  23C3 0800 1778          move.l    D3,_d5.L
08000E0E  3E34      
08000E10  6014      1779          bra.s     ChangeRegisters_20
                    1780   ChangeRegisters_17:
                    1781   ; else if(c == (char)('6'))
08000E12  0C02 0036 1782          cmp.b     #54,D2
08000E16  6608      1783          bne.s     ChangeRegisters_19
                    1784   ; d6 = reg_val ;
08000E18  23C3 0800 1785          move.l    D3,_d6.L
08000E1C  3E38      
08000E1E  6006      1786          bra.s     ChangeRegisters_20
                    1787   ChangeRegisters_19:
                    1788   ; else
                    1789   ; d7 = reg_val ;
08000E20  23C3 0800 1790          move.l    D3,_d7.L
08000E24  3E3C      
                    1791   ChangeRegisters_20:
08000E26  6000 01B8 1792          bra       ChangeRegisters_51
                    1793   ChangeRegisters_1:
                    1794   ; }
                    1795   ; else if(reg[0] == (char)('a'))  {    // change address register, a7 is the user stack pointer, sp is the system stack pointer
08000E2A  1013      1796          move.b    (A3),D0
08000E2C  0C00 0061 1797          cmp.b     #97,D0
08000E30  6600 00A6 1798          bne       ChangeRegisters_21
                    1799   ; if((c > (char)('7')) || (c < (char)('0'))) {
08000E34  0C02 0037 1800          cmp.b     #55,D2
08000E38  6E06      1801          bgt.s     ChangeRegisters_25
08000E3A  0C02 0030 1802          cmp.b     #48,D2
08000E3E  6C0E      1803          bge.s     ChangeRegisters_23
                    1804   ChangeRegisters_25:
                    1805   ; printf("\r\nIllegal Address Register : Use A0-A7.....\r\n") ;
                    1806          pea       @m68kdebugChangeRegisters_54.L
********  **** ****  Error: Undefined or illegal symbol
08000E46  4E92      1807          jsr       (A2)
08000E48  584F      1808          addq.w    #4,A7
                    1809   ; return ;
08000E4A  6000 019A 1810          bra       ChangeRegisters_6
                    1811   ChangeRegisters_23:
                    1812   ; }
                    1813   ; else {
                    1814   ; printf("\r\nA%c = ", c) ;
08000E4E  4882      1815          ext.w     D2
08000E50  48C2      1816          ext.l     D2
08000E52  2F02      1817          move.l    D2,-(A7)
                    1818          pea       @m68kdebugChangeRegisters_55.L
********  **** ****  Error: Undefined or illegal symbol
08000E5A  4E92      1819          jsr       (A2)
08000E5C  504F      1820          addq.w    #8,A7
                    1821   ; reg_val = Get8HexDigits(0) ;    // read 32 bit value from user keyboard
08000E5E  42A7      1822          clr.l     -(A7)
08000E60  4E94      1823          jsr       (A4)
08000E62  584F      1824          addq.w    #4,A7
08000E64  2600      1825          move.l    D0,D3
                    1826   ; }
                    1827   ; // bit cludgy but a0-a7 not stored as an array for good reason
                    1828   ; if(c == (char)('0'))
08000E66  0C02 0030 1829          cmp.b     #48,D2
08000E6A  660A      1830          bne.s     ChangeRegisters_26
                    1831   ; a0 = reg_val ;
08000E6C  23C3 0800 1832          move.l    D3,_a0.L
08000E70  3E40      
08000E72  6000 0060 1833          bra       ChangeRegisters_39
                    1834   ChangeRegisters_26:
                    1835   ; else if(c == (char)('1'))
08000E76  0C02 0031 1836          cmp.b     #49,D2
08000E7A  660A      1837          bne.s     ChangeRegisters_28
                    1838   ; a1 = reg_val ;
08000E7C  23C3 0800 1839          move.l    D3,_a1.L
08000E80  3E44      
08000E82  6000 0050 1840          bra       ChangeRegisters_39
                    1841   ChangeRegisters_28:
                    1842   ; else if(c == (char)('2'))
08000E86  0C02 0032 1843          cmp.b     #50,D2
08000E8A  660A      1844          bne.s     ChangeRegisters_30
                    1845   ; a2 = reg_val ;
08000E8C  23C3 0800 1846          move.l    D3,_a2.L
08000E90  3E48      
08000E92  6000 0040 1847          bra       ChangeRegisters_39
                    1848   ChangeRegisters_30:
                    1849   ; else if(c == (char)('3'))
08000E96  0C02 0033 1850          cmp.b     #51,D2
08000E9A  6608      1851          bne.s     ChangeRegisters_32
                    1852   ; a3 = reg_val ;
08000E9C  23C3 0800 1853          move.l    D3,_a3.L
08000EA0  3E4C      
08000EA2  6030      1854          bra.s     ChangeRegisters_39
                    1855   ChangeRegisters_32:
                    1856   ; else if(c == (char)('4'))
08000EA4  0C02 0034 1857          cmp.b     #52,D2
08000EA8  6608      1858          bne.s     ChangeRegisters_34
                    1859   ; a4 = reg_val ;
08000EAA  23C3 0800 1860          move.l    D3,_a4.L
08000EAE  3E50      
08000EB0  6022      1861          bra.s     ChangeRegisters_39
                    1862   ChangeRegisters_34:
                    1863   ; else if(c == (char)('5'))
08000EB2  0C02 0035 1864          cmp.b     #53,D2
08000EB6  6608      1865          bne.s     ChangeRegisters_36
                    1866   ; a5 = reg_val ;
08000EB8  23C3 0800 1867          move.l    D3,_a5.L
08000EBC  3E54      
08000EBE  6014      1868          bra.s     ChangeRegisters_39
                    1869   ChangeRegisters_36:
                    1870   ; else if(c == (char)('6'))
08000EC0  0C02 0036 1871          cmp.b     #54,D2
08000EC4  6608      1872          bne.s     ChangeRegisters_38
                    1873   ; a6 = reg_val ;
08000EC6  23C3 0800 1874          move.l    D3,_a6.L
08000ECA  3E58      
08000ECC  6006      1875          bra.s     ChangeRegisters_39
                    1876   ChangeRegisters_38:
                    1877   ; else
                    1878   ; USP = reg_val ;
08000ECE  23C3 0800 1879          move.l    D3,_USP.L
08000ED2  3E64      
                    1880   ChangeRegisters_39:
08000ED4  6000 010A 1881          bra       ChangeRegisters_51
                    1882   ChangeRegisters_21:
                    1883   ; }
                    1884   ; else if((reg[0] == (char)('u')) && (c == (char)('s')))  {
08000ED8  1013      1885          move.b    (A3),D0
08000EDA  0C00 0075 1886          cmp.b     #117,D0
08000EDE  6600 004E 1887          bne       ChangeRegisters_40
08000EE2  0C02 0073 1888          cmp.b     #115,D2
08000EE6  6600 0046 1889          bne       ChangeRegisters_40
                    1890   ; if(tolower(_getch()) == 'p')  {    // change user stack pointer
08000EEA  2F00      1891          move.l    D0,-(A7)
08000EEC  4E95      1892          jsr       (A5)
08000EEE  2200      1893          move.l    D0,D1
08000EF0  201F      1894          move.l    (A7)+,D0
08000EF2  2F01      1895          move.l    D1,-(A7)
08000EF4  4EB9 0800 1896          jsr       _tolower
08000EF8  21F6      
08000EFA  584F      1897          addq.w    #4,A7
08000EFC  0C80 0000 1898          cmp.l     #112,D0
08000F00  0070      
08000F02  6618      1899          bne.s     ChangeRegisters_42
                    1900   ; printf("\r\nUser SP = ") ;
                    1901          pea       @m68kdebugChangeRegisters_56.L
********  **** ****  Error: Undefined or illegal symbol
08000F0A  4E92      1902          jsr       (A2)
08000F0C  584F      1903          addq.w    #4,A7
                    1904   ; USP = Get8HexDigits(0) ;    // read 32 bit value from user keyboard
08000F0E  42A7      1905          clr.l     -(A7)
08000F10  4E94      1906          jsr       (A4)
08000F12  584F      1907          addq.w    #4,A7
08000F14  23C0 0800 1908          move.l    D0,_USP.L
08000F18  3E64      
08000F1A  600E      1909          bra.s     ChangeRegisters_43
                    1910   ChangeRegisters_42:
                    1911   ; }
                    1912   ; else {
                    1913   ; printf("\r\nIllegal Register....") ;
                    1914          pea       @m68kdebugChangeRegisters_57.L
********  **** ****  Error: Undefined or illegal symbol
08000F22  4E92      1915          jsr       (A2)
08000F24  584F      1916          addq.w    #4,A7
                    1917   ; return ;
08000F26  6000 00BE 1918          bra       ChangeRegisters_6
                    1919   ChangeRegisters_43:
08000F2A  6000 00B4 1920          bra       ChangeRegisters_51
                    1921   ChangeRegisters_40:
                    1922   ; }
                    1923   ; }
                    1924   ; else if((reg[0] == (char)('s')) && (c == (char)('s')))  {
08000F2E  1013      1925          move.b    (A3),D0
08000F30  0C00 0073 1926          cmp.b     #115,D0
08000F34  6600 004E 1927          bne       ChangeRegisters_44
08000F38  0C02 0073 1928          cmp.b     #115,D2
08000F3C  6600 0046 1929          bne       ChangeRegisters_44
                    1930   ; if(tolower(_getch()) == 'p')  {    // change system stack pointer
08000F40  2F00      1931          move.l    D0,-(A7)
08000F42  4E95      1932          jsr       (A5)
08000F44  2200      1933          move.l    D0,D1
08000F46  201F      1934          move.l    (A7)+,D0
08000F48  2F01      1935          move.l    D1,-(A7)
08000F4A  4EB9 0800 1936          jsr       _tolower
08000F4E  21F6      
08000F50  584F      1937          addq.w    #4,A7
08000F52  0C80 0000 1938          cmp.l     #112,D0
08000F56  0070      
08000F58  6618      1939          bne.s     ChangeRegisters_46
                    1940   ; printf("\r\nSystem SP = ") ;
                    1941          pea       @m68kdebugChangeRegisters_58.L
********  **** ****  Error: Undefined or illegal symbol
08000F60  4E92      1942          jsr       (A2)
08000F62  584F      1943          addq.w    #4,A7
                    1944   ; SSP = Get8HexDigits(0) ;    // read 32 bit value from user keyboard
08000F64  42A7      1945          clr.l     -(A7)
08000F66  4E94      1946          jsr       (A4)
08000F68  584F      1947          addq.w    #4,A7
08000F6A  23C0 0800 1948          move.l    D0,_SSP.L
08000F6E  3E60      
08000F70  600E      1949          bra.s     ChangeRegisters_47
                    1950   ChangeRegisters_46:
                    1951   ; }
                    1952   ; else {
                    1953   ; printf("\r\nIllegal Register....") ;
                    1954          pea       @m68kdebugChangeRegisters_59.L
********  **** ****  Error: Undefined or illegal symbol
08000F78  4E92      1955          jsr       (A2)
08000F7A  584F      1956          addq.w    #4,A7
                    1957   ; return ;
08000F7C  6000 0068 1958          bra       ChangeRegisters_6
                    1959   ChangeRegisters_47:
08000F80  6000 005E 1960          bra       ChangeRegisters_51
                    1961   ChangeRegisters_44:
                    1962   ; }
                    1963   ; }
                    1964   ; else if((reg[0] == (char)('p')) && (c == (char)('c')))  {    // change program counter
08000F84  1013      1965          move.b    (A3),D0
08000F86  0C00 0070 1966          cmp.b     #112,D0
08000F8A  6620      1967          bne.s     ChangeRegisters_48
08000F8C  0C02 0063 1968          cmp.b     #99,D2
08000F90  661A      1969          bne.s     ChangeRegisters_48
                    1970   ; printf("\r\nPC = ") ;
                    1971          pea       @m68kdebugChangeRegisters_60.L
********  **** ****  Error: Undefined or illegal symbol
08000F98  4E92      1972          jsr       (A2)
08000F9A  584F      1973          addq.w    #4,A7
                    1974   ; PC = Get8HexDigits(0) ;    // read 32 bit value from user keyboard
08000F9C  42A7      1975          clr.l     -(A7)
08000F9E  4E94      1976          jsr       (A4)
08000FA0  584F      1977          addq.w    #4,A7
08000FA2  23C0 0800 1978          move.l    D0,_PC.L
08000FA6  3E5C      
08000FA8  6000 0036 1979          bra       ChangeRegisters_51
                    1980   ChangeRegisters_48:
                    1981   ; }
                    1982   ; else if((reg[0] == (char)('s')) && (c == (char)('r')))  {    // change status register
08000FAC  1013      1983          move.b    (A3),D0
08000FAE  0C00 0073 1984          cmp.b     #115,D0
08000FB2  6622      1985          bne.s     ChangeRegisters_50
08000FB4  0C02 0072 1986          cmp.b     #114,D2
08000FB8  661C      1987          bne.s     ChangeRegisters_50
                    1988   ; printf("\r\nSR = ") ;
                    1989          pea       @m68kdebugChangeRegisters_61.L
********  **** ****  Error: Undefined or illegal symbol
08000FC0  4E92      1990          jsr       (A2)
08000FC2  584F      1991          addq.w    #4,A7
                    1992   ; SR = Get4HexDigits(0) ;    // read 16 bit value from user keyboard
08000FC4  42A7      1993          clr.l     -(A7)
08000FC6  4EB9 0800 1994          jsr       _Get4HexDigits
08000FCA  038A      
08000FCC  584F      1995          addq.w    #4,A7
08000FCE  33C0 0800 1996          move.w    D0,_SR.L
08000FD2  3E68      
08000FD4  600A      1997          bra.s     ChangeRegisters_51
                    1998   ChangeRegisters_50:
                    1999   ; }
                    2000   ; else
                    2001   ; printf("\r\nIllegal Register: Use A0-A7, D0-D7, SSP, USP, PC or SR\r\n") ;
                    2002          pea       @m68kdebugChangeRegisters_62.L
********  **** ****  Error: Undefined or illegal symbol
08000FDC  4E92      2003          jsr       (A2)
08000FDE  584F      2004          addq.w    #4,A7
                    2005   ChangeRegisters_51:
                    2006   ; DumpRegisters() ;
08000FE0  4EB9 0800 2007          jsr       _DumpRegisters
08000FE4  0836      
                    2008   ChangeRegisters_6:
08000FE6  4CDF 3C0C 2009          movem.l   (A7)+,D2/D3/A2/A3/A4/A5
08000FEA  4E5E      2010          unlk      A6
08000FEC  4E75      2011          rts
                    2012   ; }
                    2013   ; void BreakPointDisplay(void)
                    2014   ; {
                    2015   _BreakPointDisplay:
08000FEE  48E7 3030 2016          movem.l   D2/D3/A2/A3,-(A7)
08000FF2  45F9 0800 2017          lea       _printf.L,A2
08000FF6  2276      
08000FF8  47F9 0800 2018          lea       _BreakPointAddress.L,A3
08000FFC  3E6A      
                    2019   ; int i, BreakPointsSet = 0 ;
08000FFE  4283      2020          clr.l     D3
                    2021   ; // any break points  set
                    2022   ; for(i = 0; i < 8; i++)  {
08001000  4282      2023          clr.l     D2
                    2024   BreakPointDisplay_1:
08001002  0C82 0000 2025          cmp.l     #8,D2
08001006  0008      
08001008  6C1C      2026          bge.s     BreakPointDisplay_3
                    2027   ; if(BreakPointSetOrCleared[i] == 1)
0800100A  2002      2028          move.l    D2,D0
0800100C  E588      2029          lsl.l     #2,D0
0800100E  41F9 0800 2030          lea       _BreakPointSetOrCleared.L,A0
08001012  3E9A      
08001014  2030 0800 2031          move.l    0(A0,D0.L),D0
08001018  0C80 0000 2032          cmp.l     #1,D0
0800101C  0001      
0800101E  6602      2033          bne.s     BreakPointDisplay_4
                    2034   ; BreakPointsSet = 1;
08001020  7601      2035          moveq     #1,D3
                    2036   BreakPointDisplay_4:
08001022  5282      2037          addq.l    #1,D2
08001024  60DC      2038          bra       BreakPointDisplay_1
                    2039   BreakPointDisplay_3:
                    2040   ; }
                    2041   ; if(BreakPointsSet == 1) {
08001026  0C83 0000 2042          cmp.l     #1,D3
0800102A  0001      
0800102C  6616      2043          bne.s     BreakPointDisplay_6
                    2044   ; printf("\r\n\r\nNum     Address      Instruction") ;
                    2045          pea       @m68kdebugBreakPointDisplay_63.L
********  **** ****  Error: Undefined or illegal symbol
08001034  4E92      2046          jsr       (A2)
08001036  584F      2047          addq.w    #4,A7
                    2048   ; printf("\r\n---     ---------    -----------") ;
                    2049          pea       @m68kdebugBreakPointDisplay_64.L
********  **** ****  Error: Undefined or illegal symbol
0800103E  4E92      2050          jsr       (A2)
08001040  584F      2051          addq.w    #4,A7
08001042  600A      2052          bra.s     BreakPointDisplay_7
                    2053   BreakPointDisplay_6:
                    2054   ; }
                    2055   ; else
                    2056   ; printf("\r\nNo BreakPoints Set") ;
                    2057          pea       @m68kdebugBreakPointDisplay_65.L
********  **** ****  Error: Undefined or illegal symbol
0800104A  4E92      2058          jsr       (A2)
0800104C  584F      2059          addq.w    #4,A7
                    2060   BreakPointDisplay_7:
                    2061   ; for(i = 0; i < 8; i++)  {
0800104E  4282      2062          clr.l     D2
                    2063   BreakPointDisplay_8:
08001050  0C82 0000 2064          cmp.l     #8,D2
08001054  0008      
08001056  6C00 005A 2065          bge       BreakPointDisplay_10
                    2066   ; // put opcode back, then put break point back
                    2067   ; if(BreakPointSetOrCleared[i] == 1)  {
0800105A  2002      2068          move.l    D2,D0
0800105C  E588      2069          lsl.l     #2,D0
0800105E  41F9 0800 2070          lea       _BreakPointSetOrCleared.L,A0
08001062  3E9A      
08001064  2030 0800 2071          move.l    0(A0,D0.L),D0
08001068  0C80 0000 2072          cmp.l     #1,D0
0800106C  0001      
0800106E  6600 003E 2073          bne       BreakPointDisplay_11
                    2074   ; *(unsigned short int *)(BreakPointAddress[i]) = BreakPointInstruction[i];
08001072  2002      2075          move.l    D2,D0
08001074  E388      2076          lsl.l     #1,D0
08001076  41F9 0800 2077          lea       _BreakPointInstruction.L,A0
0800107A  3E8A      
0800107C  2202      2078          move.l    D2,D1
0800107E  E589      2079          lsl.l     #2,D1
08001080  2233 1800 2080          move.l    0(A3,D1.L),D1
08001084  2241      2081          move.l    D1,A1
08001086  32B0 0800 2082          move.w    0(A0,D0.L),(A1)
                    2083   ; *(unsigned short int *)(BreakPointAddress[i]) = (unsigned short int)(0x4e4e) ;
0800108A  2002      2084          move.l    D2,D0
0800108C  E588      2085          lsl.l     #2,D0
0800108E  2033 0800 2086          move.l    0(A3,D0.L),D0
08001092  2040      2087          move.l    D0,A0
08001094  30BC 4E4E 2088          move.w    #20046,(A0)
                    2089   ; printf("\r\n%3d     $%08x",i, BreakPointAddress[i]) ;
08001098  2202      2090          move.l    D2,D1
0800109A  E589      2091          lsl.l     #2,D1
0800109C  2F33 1800 2092          move.l    0(A3,D1.L),-(A7)
080010A0  2F02      2093          move.l    D2,-(A7)
                    2094          pea       @m68kdebugBreakPointDisplay_66.L
********  **** ****  Error: Undefined or illegal symbol
080010A8  4E92      2095          jsr       (A2)
080010AA  DEFC 000C 2096          add.w     #12,A7
                    2097   BreakPointDisplay_11:
080010AE  5282      2098          addq.l    #1,D2
080010B0  609E      2099          bra       BreakPointDisplay_8
                    2100   BreakPointDisplay_10:
                    2101   ; }
                    2102   ; }
                    2103   ; printf("\r\n") ;
                    2104          pea       @m68kdebugBreakPointDisplay_67.L
********  **** ****  Error: Undefined or illegal symbol
080010B8  4E92      2105          jsr       (A2)
080010BA  584F      2106          addq.w    #4,A7
080010BC  4CDF 0C0C 2107          movem.l   (A7)+,D2/D3/A2/A3
080010C0  4E75      2108          rts
                    2109   ; }
                    2110   ; void WatchPointDisplay(void)
                    2111   ; {
                    2112   _WatchPointDisplay:
080010C2  48E7 3020 2113          movem.l   D2/D3/A2,-(A7)
080010C6  45F9 0800 2114          lea       _printf.L,A2
080010CA  2276      
                    2115   ; int i ;
                    2116   ; int WatchPointsSet = 0 ;
080010CC  4283      2117          clr.l     D3
                    2118   ; // any watchpoints set
                    2119   ; for(i = 0; i < 8; i++)  {
080010CE  4282      2120          clr.l     D2
                    2121   WatchPointDisplay_1:
080010D0  0C82 0000 2122          cmp.l     #8,D2
080010D4  0008      
080010D6  6C1C      2123          bge.s     WatchPointDisplay_3
                    2124   ; if(WatchPointSetOrCleared[i] == 1)
080010D8  2002      2125          move.l    D2,D0
080010DA  E588      2126          lsl.l     #2,D0
080010DC  41F9 0800 2127          lea       _WatchPointSetOrCleared.L,A0
080010E0  3EDE      
080010E2  2030 0800 2128          move.l    0(A0,D0.L),D0
080010E6  0C80 0000 2129          cmp.l     #1,D0
080010EA  0001      
080010EC  6602      2130          bne.s     WatchPointDisplay_4
                    2131   ; WatchPointsSet = 1;
080010EE  7601      2132          moveq     #1,D3
                    2133   WatchPointDisplay_4:
080010F0  5282      2134          addq.l    #1,D2
080010F2  60DC      2135          bra       WatchPointDisplay_1
                    2136   WatchPointDisplay_3:
                    2137   ; }
                    2138   ; if(WatchPointsSet == 1) {
080010F4  0C83 0000 2139          cmp.l     #1,D3
080010F8  0001      
080010FA  6616      2140          bne.s     WatchPointDisplay_6
                    2141   ; printf("\r\nNum     Address") ;
                    2142          pea       @m68kdebugWatchPointDisplay_68.L
********  **** ****  Error: Undefined or illegal symbol
08001102  4E92      2143          jsr       (A2)
08001104  584F      2144          addq.w    #4,A7
                    2145   ; printf("\r\n---     ---------") ;
                    2146          pea       @m68kdebugWatchPointDisplay_69.L
********  **** ****  Error: Undefined or illegal symbol
0800110C  4E92      2147          jsr       (A2)
0800110E  584F      2148          addq.w    #4,A7
08001110  600A      2149          bra.s     WatchPointDisplay_7
                    2150   WatchPointDisplay_6:
                    2151   ; }
                    2152   ; else
                    2153   ; printf("\r\nNo WatchPoints Set") ;
                    2154          pea       @m68kdebugWatchPointDisplay_70.L
********  **** ****  Error: Undefined or illegal symbol
08001118  4E92      2155          jsr       (A2)
0800111A  584F      2156          addq.w    #4,A7
                    2157   WatchPointDisplay_7:
                    2158   ; for(i = 0; i < 8; i++)  {
0800111C  4282      2159          clr.l     D2
                    2160   WatchPointDisplay_8:
0800111E  0C82 0000 2161          cmp.l     #8,D2
08001122  0008      
08001124  6C00 0038 2162          bge       WatchPointDisplay_10
                    2163   ; if(WatchPointSetOrCleared[i] == 1)
08001128  2002      2164          move.l    D2,D0
0800112A  E588      2165          lsl.l     #2,D0
0800112C  41F9 0800 2166          lea       _WatchPointSetOrCleared.L,A0
08001130  3EDE      
08001132  2030 0800 2167          move.l    0(A0,D0.L),D0
08001136  0C80 0000 2168          cmp.l     #1,D0
0800113A  0001      
0800113C  661C      2169          bne.s     WatchPointDisplay_11
                    2170   ; printf("\r\n%3d     $%08x",i, WatchPointAddress[i]) ;
0800113E  2202      2171          move.l    D2,D1
08001140  E589      2172          lsl.l     #2,D1
08001142  41F9 0800 2173          lea       _WatchPointAddress.L,A0
08001146  3EBE      
08001148  2F30 1800 2174          move.l    0(A0,D1.L),-(A7)
0800114C  2F02      2175          move.l    D2,-(A7)
                    2176          pea       @m68kdebugWatchPointDisplay_71.L
********  **** ****  Error: Undefined or illegal symbol
08001154  4E92      2177          jsr       (A2)
08001156  DEFC 000C 2178          add.w     #12,A7
                    2179   WatchPointDisplay_11:
0800115A  5282      2180          addq.l    #1,D2
0800115C  60C0      2181          bra       WatchPointDisplay_8
                    2182   WatchPointDisplay_10:
                    2183   ; }
                    2184   ; printf("\r\n") ;
                    2185          pea       @m68kdebugWatchPointDisplay_72.L
********  **** ****  Error: Undefined or illegal symbol
08001164  4E92      2186          jsr       (A2)
08001166  584F      2187          addq.w    #4,A7
08001168  4CDF 040C 2188          movem.l   (A7)+,D2/D3/A2
0800116C  4E75      2189          rts
                    2190   ; }
                    2191   ; void BreakPointClear(void)
                    2192   ; {
                    2193   _BreakPointClear:
0800116E  4E56 FFFC 2194          link      A6,#-4
08001172  48E7 2020 2195          movem.l   D2/A2,-(A7)
08001176  45F9 0800 2196          lea       _printf.L,A2
0800117A  2276      
                    2197   ; unsigned int i ;
                    2198   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2199   ; BreakPointDisplay() ;
0800117C  4EB9 0800 2200          jsr       _BreakPointDisplay
08001180  0FEE      
                    2201   ; printf("\r\nEnter Break Point Number: ") ;
                    2202          pea       @m68kdebugBreakPointClear_73.L
********  **** ****  Error: Undefined or illegal symbol
08001188  4E92      2203          jsr       (A2)
0800118A  584F      2204          addq.w    #4,A7
                    2205   ; i = xtod(_getch()) ;           // get break pointer number
0800118C  2F00      2206          move.l    D0,-(A7)
0800118E  4EB9 0800 2207          jsr       __getch
08001192  0290      
08001194  2200      2208          move.l    D0,D1
08001196  201F      2209          move.l    (A7)+,D0
08001198  2F01      2210          move.l    D1,-(A7)
0800119A  4EB9 0800 2211          jsr       _xtod
0800119E  02FC      
080011A0  584F      2212          addq.w    #4,A7
080011A2  C0BC 0000 2213          and.l     #255,D0
080011A6  00FF      
080011A8  2400      2214          move.l    D0,D2
                    2215   ; if((i < 0) || (i > 7))   {
080011AA  0C82 0000 2216          cmp.l     #0,D2
080011AE  0000      
080011B0  6508      2217          blo.s     BreakPointClear_3
080011B2  0C82 0000 2218          cmp.l     #7,D2
080011B6  0007      
080011B8  630E      2219          bls.s     BreakPointClear_1
                    2220   BreakPointClear_3:
                    2221   ; printf("\r\nIllegal Range : Use 0 - 7") ;
                    2222          pea       @m68kdebugBreakPointClear_74.L
********  **** ****  Error: Undefined or illegal symbol
080011C0  4E92      2223          jsr       (A2)
080011C2  584F      2224          addq.w    #4,A7
                    2225   ; return ;
080011C4  6000 0082 2226          bra       BreakPointClear_4
                    2227   BreakPointClear_1:
                    2228   ; }
                    2229   ; if(BreakPointSetOrCleared[i] == 1)  {       // if break point set
080011C8  2002      2230          move.l    D2,D0
080011CA  E588      2231          lsl.l     #2,D0
080011CC  41F9 0800 2232          lea       _BreakPointSetOrCleared.L,A0
080011D0  3E9A      
080011D2  2030 0800 2233          move.l    0(A0,D0.L),D0
080011D6  0C80 0000 2234          cmp.l     #1,D0
080011DA  0001      
080011DC  6600 005A 2235          bne       BreakPointClear_5
                    2236   ; ProgramBreakPointAddress = (volatile unsigned short int *)(BreakPointAddress[i]) ;     // point to the instruction in the user program we are about to change
080011E0  2002      2237          move.l    D2,D0
080011E2  E588      2238          lsl.l     #2,D0
080011E4  41F9 0800 2239          lea       _BreakPointAddress.L,A0
080011E8  3E6A      
080011EA  2D70 0800 2240          move.l    0(A0,D0.L),-4(A6)
080011EE  FFFC      
                    2241   ; BreakPointAddress[i] = 0 ;
080011F0  2002      2242          move.l    D2,D0
080011F2  E588      2243          lsl.l     #2,D0
080011F4  41F9 0800 2244          lea       _BreakPointAddress.L,A0
080011F8  3E6A      
080011FA  42B0 0800 2245          clr.l     0(A0,D0.L)
                    2246   ; BreakPointSetOrCleared[i] = 0 ;
080011FE  2002      2247          move.l    D2,D0
08001200  E588      2248          lsl.l     #2,D0
08001202  41F9 0800 2249          lea       _BreakPointSetOrCleared.L,A0
08001206  3E9A      
08001208  42B0 0800 2250          clr.l     0(A0,D0.L)
                    2251   ; *ProgramBreakPointAddress = BreakPointInstruction[i] ;  // put original instruction back
0800120C  2002      2252          move.l    D2,D0
0800120E  E388      2253          lsl.l     #1,D0
08001210  41F9 0800 2254          lea       _BreakPointInstruction.L,A0
08001214  3E8A      
08001216  226E FFFC 2255          move.l    -4(A6),A1
0800121A  32B0 0800 2256          move.w    0(A0,D0.L),(A1)
                    2257   ; BreakPointInstruction[i] = 0 ;
0800121E  2002      2258          move.l    D2,D0
08001220  E388      2259          lsl.l     #1,D0
08001222  41F9 0800 2260          lea       _BreakPointInstruction.L,A0
08001226  3E8A      
08001228  4270 0800 2261          clr.w     0(A0,D0.L)
                    2262   ; printf("\r\nBreak Point Cleared.....\r\n") ;
                    2263          pea       @m68kdebugBreakPointClear_75.L
********  **** ****  Error: Undefined or illegal symbol
08001232  4E92      2264          jsr       (A2)
08001234  584F      2265          addq.w    #4,A7
08001236  600A      2266          bra.s     BreakPointClear_6
                    2267   BreakPointClear_5:
                    2268   ; }
                    2269   ; else
                    2270   ; printf("\r\nBreak Point wasn't Set.....") ;
                    2271          pea       @m68kdebugBreakPointClear_76.L
********  **** ****  Error: Undefined or illegal symbol
0800123E  4E92      2272          jsr       (A2)
08001240  584F      2273          addq.w    #4,A7
                    2274   BreakPointClear_6:
                    2275   ; BreakPointDisplay() ;
08001242  4EB9 0800 2276          jsr       _BreakPointDisplay
08001246  0FEE      
                    2277   ; return ;
                    2278   BreakPointClear_4:
08001248  4CDF 0404 2279          movem.l   (A7)+,D2/A2
0800124C  4E5E      2280          unlk      A6
0800124E  4E75      2281          rts
                    2282   ; }
                    2283   ; void WatchPointClear(void)
                    2284   ; {
                    2285   _WatchPointClear:
08001250  48E7 2020 2286          movem.l   D2/A2,-(A7)
08001254  45F9 0800 2287          lea       _printf.L,A2
08001258  2276      
                    2288   ; unsigned int i ;
                    2289   ; WatchPointDisplay() ;
0800125A  4EB9 0800 2290          jsr       _WatchPointDisplay
0800125E  10C2      
                    2291   ; printf("\r\nEnter Watch Point Number: ") ;
                    2292          pea       @m68kdebugWatchPointClear_77.L
********  **** ****  Error: Undefined or illegal symbol
08001266  4E92      2293          jsr       (A2)
08001268  584F      2294          addq.w    #4,A7
                    2295   ; i = xtod(_getch()) ;           // get watch pointer number
0800126A  2F00      2296          move.l    D0,-(A7)
0800126C  4EB9 0800 2297          jsr       __getch
08001270  0290      
08001272  2200      2298          move.l    D0,D1
08001274  201F      2299          move.l    (A7)+,D0
08001276  2F01      2300          move.l    D1,-(A7)
08001278  4EB9 0800 2301          jsr       _xtod
0800127C  02FC      
0800127E  584F      2302          addq.w    #4,A7
08001280  C0BC 0000 2303          and.l     #255,D0
08001284  00FF      
08001286  2400      2304          move.l    D0,D2
                    2305   ; if((i < 0) || (i > 7))   {
08001288  0C82 0000 2306          cmp.l     #0,D2
0800128C  0000      
0800128E  6508      2307          blo.s     WatchPointClear_3
08001290  0C82 0000 2308          cmp.l     #7,D2
08001294  0007      
08001296  630E      2309          bls.s     WatchPointClear_1
                    2310   WatchPointClear_3:
                    2311   ; printf("\r\nIllegal Range : Use 0 - 7") ;
                    2312          pea       @m68kdebugWatchPointClear_78.L
********  **** ****  Error: Undefined or illegal symbol
0800129E  4E92      2313          jsr       (A2)
080012A0  584F      2314          addq.w    #4,A7
                    2315   ; return ;
080012A2  6000 0050 2316          bra       WatchPointClear_4
                    2317   WatchPointClear_1:
                    2318   ; }
                    2319   ; if(WatchPointSetOrCleared[i] == 1)  {       // if watch point set
080012A6  2002      2320          move.l    D2,D0
080012A8  E588      2321          lsl.l     #2,D0
080012AA  41F9 0800 2322          lea       _WatchPointSetOrCleared.L,A0
080012AE  3EDE      
080012B0  2030 0800 2323          move.l    0(A0,D0.L),D0
080012B4  0C80 0000 2324          cmp.l     #1,D0
080012B8  0001      
080012BA  6628      2325          bne.s     WatchPointClear_5
                    2326   ; WatchPointAddress[i] = 0 ;
080012BC  2002      2327          move.l    D2,D0
080012BE  E588      2328          lsl.l     #2,D0
080012C0  41F9 0800 2329          lea       _WatchPointAddress.L,A0
080012C4  3EBE      
080012C6  42B0 0800 2330          clr.l     0(A0,D0.L)
                    2331   ; WatchPointSetOrCleared[i] = 0 ;
080012CA  2002      2332          move.l    D2,D0
080012CC  E588      2333          lsl.l     #2,D0
080012CE  41F9 0800 2334          lea       _WatchPointSetOrCleared.L,A0
080012D2  3EDE      
080012D4  42B0 0800 2335          clr.l     0(A0,D0.L)
                    2336   ; printf("\r\nWatch Point Cleared.....\r\n") ;
                    2337          pea       @m68kdebugWatchPointClear_79.L
********  **** ****  Error: Undefined or illegal symbol
080012DE  4E92      2338          jsr       (A2)
080012E0  584F      2339          addq.w    #4,A7
080012E2  600A      2340          bra.s     WatchPointClear_6
                    2341   WatchPointClear_5:
                    2342   ; }
                    2343   ; else
                    2344   ; printf("\r\nWatch Point Was not Set.....") ;
                    2345          pea       @m68kdebugWatchPointClear_80.L
********  **** ****  Error: Undefined or illegal symbol
080012EA  4E92      2346          jsr       (A2)
080012EC  584F      2347          addq.w    #4,A7
                    2348   WatchPointClear_6:
                    2349   ; WatchPointDisplay() ;
080012EE  4EB9 0800 2350          jsr       _WatchPointDisplay
080012F2  10C2      
                    2351   ; return ;
                    2352   WatchPointClear_4:
080012F4  4CDF 0404 2353          movem.l   (A7)+,D2/A2
080012F8  4E75      2354          rts
                    2355   ; }
                    2356   ; void DisableBreakPoints(void)
                    2357   ; {
                    2358   _DisableBreakPoints:
080012FA  4E56 FFFC 2359          link      A6,#-4
080012FE  2F02      2360          move.l    D2,-(A7)
                    2361   ; int i ;
                    2362   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2363   ; for(i = 0; i < 8; i++)  {
08001300  4282      2364          clr.l     D2
                    2365   DisableBreakPoints_1:
08001302  0C82 0000 2366          cmp.l     #8,D2
08001306  0008      
08001308  6C00 003E 2367          bge       DisableBreakPoints_3
                    2368   ; if(BreakPointSetOrCleared[i] == 1)    {                                                    // if break point set
0800130C  2002      2369          move.l    D2,D0
0800130E  E588      2370          lsl.l     #2,D0
08001310  41F9 0800 2371          lea       _BreakPointSetOrCleared.L,A0
08001314  3E9A      
08001316  2030 0800 2372          move.l    0(A0,D0.L),D0
0800131A  0C80 0000 2373          cmp.l     #1,D0
0800131E  0001      
08001320  6622      2374          bne.s     DisableBreakPoints_4
                    2375   ; ProgramBreakPointAddress = (volatile unsigned short int *)(BreakPointAddress[i]) ;     // point to the instruction in the user program where the break point has been set
08001322  2002      2376          move.l    D2,D0
08001324  E588      2377          lsl.l     #2,D0
08001326  41F9 0800 2378          lea       _BreakPointAddress.L,A0
0800132A  3E6A      
0800132C  2D70 0800 2379          move.l    0(A0,D0.L),-4(A6)
08001330  FFFC      
                    2380   ; *ProgramBreakPointAddress = BreakPointInstruction[i];                                  // copy the instruction back to the user program overwritting the $4e4e
08001332  2002      2381          move.l    D2,D0
08001334  E388      2382          lsl.l     #1,D0
08001336  41F9 0800 2383          lea       _BreakPointInstruction.L,A0
0800133A  3E8A      
0800133C  226E FFFC 2384          move.l    -4(A6),A1
08001340  32B0 0800 2385          move.w    0(A0,D0.L),(A1)
                    2386   DisableBreakPoints_4:
08001344  5282      2387          addq.l    #1,D2
08001346  60BA      2388          bra       DisableBreakPoints_1
                    2389   DisableBreakPoints_3:
08001348  241F      2390          move.l    (A7)+,D2
0800134A  4E5E      2391          unlk      A6
0800134C  4E75      2392          rts
                    2393   ; }
                    2394   ; }
                    2395   ; }
                    2396   ; void EnableBreakPoints(void)
                    2397   ; {
                    2398   _EnableBreakPoints:
0800134E  4E56 FFFC 2399          link      A6,#-4
08001352  2F02      2400          move.l    D2,-(A7)
                    2401   ; int i ;
                    2402   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2403   ; for(i = 0; i < 8; i++)  {
08001354  4282      2404          clr.l     D2
                    2405   EnableBreakPoints_1:
08001356  0C82 0000 2406          cmp.l     #8,D2
0800135A  0008      
0800135C  6C32      2407          bge.s     EnableBreakPoints_3
                    2408   ; if(BreakPointSetOrCleared[i] == 1)    {                                                     // if break point set
0800135E  2002      2409          move.l    D2,D0
08001360  E588      2410          lsl.l     #2,D0
08001362  41F9 0800 2411          lea       _BreakPointSetOrCleared.L,A0
08001366  3E9A      
08001368  2030 0800 2412          move.l    0(A0,D0.L),D0
0800136C  0C80 0000 2413          cmp.l     #1,D0
08001370  0001      
08001372  6618      2414          bne.s     EnableBreakPoints_4
                    2415   ; ProgramBreakPointAddress = (volatile unsigned short int *)(BreakPointAddress[i]) ;     // point to the instruction in the user program where the break point has been set
08001374  2002      2416          move.l    D2,D0
08001376  E588      2417          lsl.l     #2,D0
08001378  41F9 0800 2418          lea       _BreakPointAddress.L,A0
0800137C  3E6A      
0800137E  2D70 0800 2419          move.l    0(A0,D0.L),-4(A6)
08001382  FFFC      
                    2420   ; *ProgramBreakPointAddress = (unsigned short int)(0x4e4e);                              // put the breakpoint back in user program
08001384  206E FFFC 2421          move.l    -4(A6),A0
08001388  30BC 4E4E 2422          move.w    #20046,(A0)
                    2423   EnableBreakPoints_4:
0800138C  5282      2424          addq.l    #1,D2
0800138E  60C6      2425          bra       EnableBreakPoints_1
                    2426   EnableBreakPoints_3:
08001390  241F      2427          move.l    (A7)+,D2
08001392  4E5E      2428          unlk      A6
08001394  4E75      2429          rts
                    2430   ; }
                    2431   ; }
                    2432   ; }
                    2433   ; void KillAllBreakPoints(void)
                    2434   ; {
                    2435   _KillAllBreakPoints:
08001396  4E56 FFFC 2436          link      A6,#-4
0800139A  2F02      2437          move.l    D2,-(A7)
                    2438   ; int i ;
                    2439   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2440   ; for(i = 0; i < 8; i++)  {
0800139C  4282      2441          clr.l     D2
                    2442   KillAllBreakPoints_1:
0800139E  0C82 0000 2443          cmp.l     #8,D2
080013A2  0008      
080013A4  6C00 0052 2444          bge       KillAllBreakPoints_3
                    2445   ; // clear BP
                    2446   ; ProgramBreakPointAddress = (volatile unsigned short int *)(BreakPointAddress[i]) ;     // point to the instruction in the user program where the break point has been set
080013A8  2002      2447          move.l    D2,D0
080013AA  E588      2448          lsl.l     #2,D0
080013AC  41F9 0800 2449          lea       _BreakPointAddress.L,A0
080013B0  3E6A      
080013B2  2D70 0800 2450          move.l    0(A0,D0.L),-4(A6)
080013B6  FFFC      
                    2451   ; *ProgramBreakPointAddress = BreakPointInstruction[i];                                  // copy the instruction back to the user program
080013B8  2002      2452          move.l    D2,D0
080013BA  E388      2453          lsl.l     #1,D0
080013BC  41F9 0800 2454          lea       _BreakPointInstruction.L,A0
080013C0  3E8A      
080013C2  226E FFFC 2455          move.l    -4(A6),A1
080013C6  32B0 0800 2456          move.w    0(A0,D0.L),(A1)
                    2457   ; BreakPointAddress[i] = 0 ;                                                             // set BP address to NULL
080013CA  2002      2458          move.l    D2,D0
080013CC  E588      2459          lsl.l     #2,D0
080013CE  41F9 0800 2460          lea       _BreakPointAddress.L,A0
080013D2  3E6A      
080013D4  42B0 0800 2461          clr.l     0(A0,D0.L)
                    2462   ; BreakPointInstruction[i] = 0 ;
080013D8  2002      2463          move.l    D2,D0
080013DA  E388      2464          lsl.l     #1,D0
080013DC  41F9 0800 2465          lea       _BreakPointInstruction.L,A0
080013E0  3E8A      
080013E2  4270 0800 2466          clr.w     0(A0,D0.L)
                    2467   ; BreakPointSetOrCleared[i] = 0 ;                                                        // mark break point as cleared for future setting
080013E6  2002      2468          move.l    D2,D0
080013E8  E588      2469          lsl.l     #2,D0
080013EA  41F9 0800 2470          lea       _BreakPointSetOrCleared.L,A0
080013EE  3E9A      
080013F0  42B0 0800 2471          clr.l     0(A0,D0.L)
080013F4  5282      2472          addq.l    #1,D2
080013F6  60A6      2473          bra       KillAllBreakPoints_1
                    2474   KillAllBreakPoints_3:
080013F8  241F      2475          move.l    (A7)+,D2
080013FA  4E5E      2476          unlk      A6
080013FC  4E75      2477          rts
                    2478   ; }
                    2479   ; //BreakPointDisplay() ;       // display the break points
                    2480   ; }
                    2481   ; void KillAllWatchPoints(void)
                    2482   ; {
                    2483   _KillAllWatchPoints:
080013FE  2F02      2484          move.l    D2,-(A7)
                    2485   ; int i ;
                    2486   ; for(i = 0; i < 8; i++)  {
08001400  4282      2487          clr.l     D2
                    2488   KillAllWatchPoints_1:
08001402  0C82 0000 2489          cmp.l     #8,D2
08001406  0008      
08001408  6C20      2490          bge.s     KillAllWatchPoints_3
                    2491   ; WatchPointAddress[i] = 0 ;                                                             // set BP address to NULL
0800140A  2002      2492          move.l    D2,D0
0800140C  E588      2493          lsl.l     #2,D0
0800140E  41F9 0800 2494          lea       _WatchPointAddress.L,A0
08001412  3EBE      
08001414  42B0 0800 2495          clr.l     0(A0,D0.L)
                    2496   ; WatchPointSetOrCleared[i] = 0 ;                                                        // mark break point as cleared for future setting
08001418  2002      2497          move.l    D2,D0
0800141A  E588      2498          lsl.l     #2,D0
0800141C  41F9 0800 2499          lea       _WatchPointSetOrCleared.L,A0
08001420  3EDE      
08001422  42B0 0800 2500          clr.l     0(A0,D0.L)
08001426  5282      2501          addq.l    #1,D2
08001428  60D8      2502          bra       KillAllWatchPoints_1
                    2503   KillAllWatchPoints_3:
0800142A  241F      2504          move.l    (A7)+,D2
0800142C  4E75      2505          rts
                    2506   ; }
                    2507   ; //WatchPointDisplay() ;       // display the break points
                    2508   ; }
                    2509   ; void SetBreakPoint(void)
                    2510   ; {
                    2511   _SetBreakPoint:
0800142E  4E56 FFFC 2512          link      A6,#-4
08001432  48E7 3830 2513          movem.l   D2/D3/D4/A2/A3,-(A7)
08001436  45F9 0800 2514          lea       _printf.L,A2
0800143A  2276      
0800143C  47F9 0800 2515          lea       _BreakPointSetOrCleared.L,A3
08001440  3E9A      
                    2516   ; int i ;
                    2517   ; int BPNumber;
                    2518   ; int BPAddress;
                    2519   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2520   ; // see if any free break points
                    2521   ; for(i = 0; i < 8; i ++) {
08001442  4282      2522          clr.l     D2
                    2523   SetBreakPoint_1:
08001444  0C82 0000 2524          cmp.l     #8,D2
08001448  0008      
0800144A  6C10      2525          bge.s     SetBreakPoint_3
                    2526   ; if( BreakPointSetOrCleared[i] == 0)
0800144C  2002      2527          move.l    D2,D0
0800144E  E588      2528          lsl.l     #2,D0
08001450  2033 0800 2529          move.l    0(A3,D0.L),D0
08001454  6602      2530          bne.s     SetBreakPoint_4
                    2531   ; break ;         // if spare BP found allow user to set it
08001456  6004      2532          bra.s     SetBreakPoint_3
                    2533   SetBreakPoint_4:
08001458  5282      2534          addq.l    #1,D2
0800145A  60E8      2535          bra       SetBreakPoint_1
                    2536   SetBreakPoint_3:
                    2537   ; }
                    2538   ; if(i == 8) {
0800145C  0C82 0000 2539          cmp.l     #8,D2
08001460  0008      
08001462  660E      2540          bne.s     SetBreakPoint_6
                    2541   ; printf("\r\nNo FREE Break Points.....") ;
                    2542          pea       @m68kdebugSetBreakPoint_81.L
********  **** ****  Error: Undefined or illegal symbol
0800146A  4E92      2543          jsr       (A2)
0800146C  584F      2544          addq.w    #4,A7
                    2545   ; return ;
0800146E  6000 00DA 2546          bra       SetBreakPoint_15
                    2547   SetBreakPoint_6:
                    2548   ; }
                    2549   ; printf("\r\nBreak Point Address: ") ;
                    2550          pea       @m68kdebugSetBreakPoint_82.L
********  **** ****  Error: Undefined or illegal symbol
08001478  4E92      2551          jsr       (A2)
0800147A  584F      2552          addq.w    #4,A7
                    2553   ; BPAddress = Get8HexDigits(0) ;
0800147C  42A7      2554          clr.l     -(A7)
0800147E  4EB9 0800 2555          jsr       _Get8HexDigits
08001482  03DE      
08001484  584F      2556          addq.w    #4,A7
08001486  2600      2557          move.l    D0,D3
                    2558   ; ProgramBreakPointAddress = (volatile unsigned short int *)(BPAddress) ;     // point to the instruction in the user program we are about to change
08001488  2803      2559          move.l    D3,D4
                    2560   ; if((BPAddress & 0x00000001) == 0x00000001)  {   // cannot set BP at an odd address
0800148A  2003      2561          move.l    D3,D0
0800148C  C0BC 0000 2562          and.l     #1,D0
08001490  0001      
08001492  0C80 0000 2563          cmp.l     #1,D0
08001496  0001      
08001498  660E      2564          bne.s     SetBreakPoint_9
                    2565   ; printf("\r\nError : Break Points CANNOT be set at ODD addresses") ;
                    2566          pea       @m68kdebugSetBreakPoint_83.L
********  **** ****  Error: Undefined or illegal symbol
080014A0  4E92      2567          jsr       (A2)
080014A2  584F      2568          addq.w    #4,A7
                    2569   ; return ;
080014A4  6000 00A4 2570          bra       SetBreakPoint_15
                    2571   SetBreakPoint_9:
                    2572   ; }
                    2573   ; if(BPAddress < 0x00008000)  {   // cannot set BP in ROM
080014A8  0C83 0000 2574          cmp.l     #32768,D3
080014AC  8000      
080014AE  640E      2575          bhs.s     SetBreakPoint_11
                    2576   ; printf("\r\nError : Break Points CANNOT be set for ROM in Range : [$0-$00007FFF]") ;
                    2577          pea       @m68kdebugSetBreakPoint_84.L
********  **** ****  Error: Undefined or illegal symbol
080014B6  4E92      2578          jsr       (A2)
080014B8  584F      2579          addq.w    #4,A7
                    2580   ; return ;
080014BA  6000 008E 2581          bra       SetBreakPoint_15
                    2582   SetBreakPoint_11:
                    2583   ; }
                    2584   ; // search for first free bp or existing same BP
                    2585   ; for(i = 0; i < 8; i++)  {
080014BE  4282      2586          clr.l     D2
                    2587   SetBreakPoint_13:
080014C0  0C82 0000 2588          cmp.l     #8,D2
080014C4  0008      
080014C6  6C00 0082 2589          bge       SetBreakPoint_15
                    2590   ; if(BreakPointAddress[i] == BPAddress)   {
080014CA  2002      2591          move.l    D2,D0
080014CC  E588      2592          lsl.l     #2,D0
080014CE  41F9 0800 2593          lea       _BreakPointAddress.L,A0
080014D2  3E6A      
080014D4  B6B0 0800 2594          cmp.l     0(A0,D0.L),D3
080014D8  6610      2595          bne.s     SetBreakPoint_16
                    2596   ; printf("\r\nError: Break Point Already Exists at Address : %08x\r\n", BPAddress) ;
080014DA  2F03      2597          move.l    D3,-(A7)
                    2598          pea       @m68kdebugSetBreakPoint_85.L
********  **** ****  Error: Undefined or illegal symbol
080014E2  4E92      2599          jsr       (A2)
080014E4  504F      2600          addq.w    #8,A7
                    2601   ; return ;
080014E6  6000 0062 2602          bra       SetBreakPoint_15
                    2603   SetBreakPoint_16:
                    2604   ; }
                    2605   ; if(BreakPointSetOrCleared[i] == 0) {
080014EA  2002      2606          move.l    D2,D0
080014EC  E588      2607          lsl.l     #2,D0
080014EE  2033 0800 2608          move.l    0(A3,D0.L),D0
080014F2  6600 0050 2609          bne       SetBreakPoint_18
                    2610   ; // set BP here
                    2611   ; BreakPointSetOrCleared[i] = 1 ;                                 // mark this breakpoint as set
080014F6  2002      2612          move.l    D2,D0
080014F8  E588      2613          lsl.l     #2,D0
080014FA  27BC 0000 2614          move.l    #1,0(A3,D0.L)
080014FE  0001 0800 
                    2615   ; BreakPointInstruction[i] = *ProgramBreakPointAddress ;          // copy the user program instruction here so we can put it back afterwards
08001502  2044      2616          move.l    D4,A0
08001504  2002      2617          move.l    D2,D0
08001506  E388      2618          lsl.l     #1,D0
08001508  43F9 0800 2619          lea       _BreakPointInstruction.L,A1
0800150C  3E8A      
0800150E  3390 0800 2620          move.w    (A0),0(A1,D0.L)
                    2621   ; printf("\r\nBreak Point Set at Address: [$%08x]", ProgramBreakPointAddress) ;
08001512  2F04      2622          move.l    D4,-(A7)
                    2623          pea       @m68kdebugSetBreakPoint_86.L
********  **** ****  Error: Undefined or illegal symbol
0800151A  4E92      2624          jsr       (A2)
0800151C  504F      2625          addq.w    #8,A7
                    2626   ; *ProgramBreakPointAddress = (unsigned short int)(0x4e4e)    ;   // put a Trap14 instruction at the user specified address
0800151E  2044      2627          move.l    D4,A0
08001520  30BC 4E4E 2628          move.w    #20046,(A0)
                    2629   ; BreakPointAddress[i] = BPAddress ;                              // record the address of this break point in the debugger
08001524  2002      2630          move.l    D2,D0
08001526  E588      2631          lsl.l     #2,D0
08001528  41F9 0800 2632          lea       _BreakPointAddress.L,A0
0800152C  3E6A      
0800152E  2183 0800 2633          move.l    D3,0(A0,D0.L)
                    2634   ; printf("\r\n") ;
                    2635          pea       @m68kdebugSetBreakPoint_87.L
********  **** ****  Error: Undefined or illegal symbol
08001538  4E92      2636          jsr       (A2)
0800153A  584F      2637          addq.w    #4,A7
                    2638   ; BreakPointDisplay() ;       // display the break points
0800153C  4EB9 0800 2639          jsr       _BreakPointDisplay
08001540  0FEE      
                    2640   ; return ;
08001542  6006      2641          bra.s     SetBreakPoint_15
                    2642   SetBreakPoint_18:
08001544  5282      2643          addq.l    #1,D2
08001546  6000 FF78 2644          bra       SetBreakPoint_13
                    2645   SetBreakPoint_15:
0800154A  4CDF 0C1C 2646          movem.l   (A7)+,D2/D3/D4/A2/A3
0800154E  4E5E      2647          unlk      A6
08001550  4E75      2648          rts
                    2649   ; }
                    2650   ; }
                    2651   ; }
                    2652   ; void SetWatchPoint(void)
                    2653   ; {
                    2654   _SetWatchPoint:
08001552  4E56 FFF8 2655          link      A6,#-8
08001556  48E7 3030 2656          movem.l   D2/D3/A2/A3,-(A7)
0800155A  45F9 0800 2657          lea       _printf.L,A2
0800155E  2276      
08001560  47F9 0800 2658          lea       _WatchPointSetOrCleared.L,A3
08001564  3EDE      
                    2659   ; int i ;
                    2660   ; int WPNumber;
                    2661   ; int WPAddress;
                    2662   ; volatile unsigned short int *ProgramWatchPointAddress ;
                    2663   ; // see if any free break points
                    2664   ; for(i = 0; i < 8; i ++) {
08001566  4282      2665          clr.l     D2
                    2666   SetWatchPoint_1:
08001568  0C82 0000 2667          cmp.l     #8,D2
0800156C  0008      
0800156E  6C10      2668          bge.s     SetWatchPoint_3
                    2669   ; if( WatchPointSetOrCleared[i] == 0)
08001570  2002      2670          move.l    D2,D0
08001572  E588      2671          lsl.l     #2,D0
08001574  2033 0800 2672          move.l    0(A3,D0.L),D0
08001578  6602      2673          bne.s     SetWatchPoint_4
                    2674   ; break ;         // if spare WP found allow user to set it
0800157A  6004      2675          bra.s     SetWatchPoint_3
                    2676   SetWatchPoint_4:
0800157C  5282      2677          addq.l    #1,D2
0800157E  60E8      2678          bra       SetWatchPoint_1
                    2679   SetWatchPoint_3:
                    2680   ; }
                    2681   ; if(i == 8) {
08001580  0C82 0000 2682          cmp.l     #8,D2
08001584  0008      
08001586  660E      2683          bne.s     SetWatchPoint_6
                    2684   ; printf("\r\nNo FREE Watch Points.....") ;
                    2685          pea       @m68kdebugSetWatchPoint_88.L
********  **** ****  Error: Undefined or illegal symbol
0800158E  4E92      2686          jsr       (A2)
08001590  584F      2687          addq.w    #4,A7
                    2688   ; return ;
08001592  6000 0090 2689          bra       SetWatchPoint_11
                    2690   SetWatchPoint_6:
                    2691   ; }
                    2692   ; printf("\r\nWatch Point Address: ") ;
                    2693          pea       @m68kdebugSetWatchPoint_89.L
********  **** ****  Error: Undefined or illegal symbol
0800159C  4E92      2694          jsr       (A2)
0800159E  584F      2695          addq.w    #4,A7
                    2696   ; WPAddress = Get8HexDigits(0) ;
080015A0  42A7      2697          clr.l     -(A7)
080015A2  4EB9 0800 2698          jsr       _Get8HexDigits
080015A6  03DE      
080015A8  584F      2699          addq.w    #4,A7
080015AA  2600      2700          move.l    D0,D3
                    2701   ; // search for first free wp or existing same wp
                    2702   ; for(i = 0; i < 8; i++)  {
080015AC  4282      2703          clr.l     D2
                    2704   SetWatchPoint_9:
080015AE  0C82 0000 2705          cmp.l     #8,D2
080015B2  0008      
080015B4  6C00 006E 2706          bge       SetWatchPoint_11
                    2707   ; if(WatchPointAddress[i] == WPAddress && WPAddress != 0)   {     //so we can set a wp at 0
080015B8  2002      2708          move.l    D2,D0
080015BA  E588      2709          lsl.l     #2,D0
080015BC  41F9 0800 2710          lea       _WatchPointAddress.L,A0
080015C0  3EBE      
080015C2  B6B0 0800 2711          cmp.l     0(A0,D0.L),D3
080015C6  6614      2712          bne.s     SetWatchPoint_12
080015C8  4A83      2713          tst.l     D3
080015CA  6710      2714          beq.s     SetWatchPoint_12
                    2715   ; printf("\r\nError: Watch Point Already Set at Address : %08x\r\n", WPAddress) ;
080015CC  2F03      2716          move.l    D3,-(A7)
                    2717          pea       @m68kdebugSetWatchPoint_90.L
********  **** ****  Error: Undefined or illegal symbol
080015D4  4E92      2718          jsr       (A2)
080015D6  504F      2719          addq.w    #8,A7
                    2720   ; return ;
080015D8  6000 004A 2721          bra       SetWatchPoint_11
                    2722   SetWatchPoint_12:
                    2723   ; }
                    2724   ; if(WatchPointSetOrCleared[i] == 0) {
080015DC  2002      2725          move.l    D2,D0
080015DE  E588      2726          lsl.l     #2,D0
080015E0  2033 0800 2727          move.l    0(A3,D0.L),D0
080015E4  6600 003A 2728          bne       SetWatchPoint_14
                    2729   ; WatchPointSetOrCleared[i] = 1 ;                                 // mark this watchpoint as set
080015E8  2002      2730          move.l    D2,D0
080015EA  E588      2731          lsl.l     #2,D0
080015EC  27BC 0000 2732          move.l    #1,0(A3,D0.L)
080015F0  0001 0800 
                    2733   ; printf("\r\nWatch Point Set at Address: [$%08x]", WPAddress) ;
080015F4  2F03      2734          move.l    D3,-(A7)
                    2735          pea       @m68kdebugSetWatchPoint_91.L
********  **** ****  Error: Undefined or illegal symbol
080015FC  4E92      2736          jsr       (A2)
080015FE  504F      2737          addq.w    #8,A7
                    2738   ; WatchPointAddress[i] = WPAddress ;                              // record the address of this watch point in the debugger
08001600  2002      2739          move.l    D2,D0
08001602  E588      2740          lsl.l     #2,D0
08001604  41F9 0800 2741          lea       _WatchPointAddress.L,A0
08001608  3EBE      
0800160A  2183 0800 2742          move.l    D3,0(A0,D0.L)
                    2743   ; printf("\r\n") ;
                    2744          pea       @m68kdebugSetWatchPoint_92.L
********  **** ****  Error: Undefined or illegal symbol
08001614  4E92      2745          jsr       (A2)
08001616  584F      2746          addq.w    #4,A7
                    2747   ; WatchPointDisplay() ;       // display the break points
08001618  4EB9 0800 2748          jsr       _WatchPointDisplay
0800161C  10C2      
                    2749   ; return ;
0800161E  6004      2750          bra.s     SetWatchPoint_11
                    2751   SetWatchPoint_14:
08001620  5282      2752          addq.l    #1,D2
08001622  608A      2753          bra       SetWatchPoint_9
                    2754   SetWatchPoint_11:
08001624  4CDF 0C0C 2755          movem.l   (A7)+,D2/D3/A2/A3
08001628  4E5E      2756          unlk      A6
0800162A  4E75      2757          rts
                    2758   ; }
                    2759   ; }
                    2760   ; }
                    2761   ; void HandleBreakPoint(void)
                    2762   ; {
                    2763   _HandleBreakPoint:
0800162C  4E56 FFFC 2764          link      A6,#-4
08001630  48E7 0038 2765          movem.l   A2/A3/A4,-(A7)
08001634  45F9 0800 2766          lea       _i.L,A2
08001638  3E00      
0800163A  47F9 0800 2767          lea       _printf.L,A3
0800163E  2276      
08001640  49F9 0800 2768          lea       _PC.L,A4
08001644  3E5C      
                    2769   ; volatile unsigned short int *ProgramBreakPointAddress ;
                    2770   ; // now we have to put the break point back to run the instruction
                    2771   ; // PC will contain the address of the TRAP instruction but advanced by two bytes so lets play with that
                    2772   ; PC = PC - 2 ;  // ready for user to resume after reaching breakpoint
08001646  5594      2773          subq.l    #2,(A4)
                    2774   ; printf("\r\n\r\n\r\n\r\n@BREAKPOINT") ;
                    2775          pea       @m68kdebugHandleBreakPoint_93.L
********  **** ****  Error: Undefined or illegal symbol
0800164E  4E93      2776          jsr       (A3)
08001650  584F      2777          addq.w    #4,A7
                    2778   ; printf("\r\nSingle Step : [ON]") ;
                    2779          pea       @m68kdebugHandleBreakPoint_94.L
********  **** ****  Error: Undefined or illegal symbol
08001658  4E93      2780          jsr       (A3)
0800165A  584F      2781          addq.w    #4,A7
                    2782   ; printf("\r\nBreakPoints : [Enabled]") ;
                    2783          pea       @m68kdebugHandleBreakPoint_95.L
********  **** ****  Error: Undefined or illegal symbol
08001662  4E93      2784          jsr       (A3)
08001664  584F      2785          addq.w    #4,A7
                    2786   ; // now clear the break point (put original instruction back)
                    2787   ; ProgramBreakPointAddress = PC ;
08001666  2D54 FFFC 2788          move.l    (A4),-4(A6)
                    2789   ; for(i = 0; i < 8; i ++) {
0800166A  4292      2790          clr.l     (A2)
                    2791   HandleBreakPoint_1:
0800166C  2012      2792          move.l    (A2),D0
0800166E  0C80 0000 2793          cmp.l     #8,D0
08001672  0008      
08001674  6400 0056 2794          bhs       HandleBreakPoint_3
                    2795   ; if(BreakPointAddress[i] == PC) {        // if we have found the breakpoint
08001678  2012      2796          move.l    (A2),D0
0800167A  E588      2797          lsl.l     #2,D0
0800167C  41F9 0800 2798          lea       _BreakPointAddress.L,A0
08001680  3E6A      
08001682  2230 0800 2799          move.l    0(A0,D0.L),D1
08001686  B294      2800          cmp.l     (A4),D1
08001688  6600 003E 2801          bne       HandleBreakPoint_4
                    2802   ; BreakPointAddress[i] = 0 ;
0800168C  2012      2803          move.l    (A2),D0
0800168E  E588      2804          lsl.l     #2,D0
08001690  41F9 0800 2805          lea       _BreakPointAddress.L,A0
08001694  3E6A      
08001696  42B0 0800 2806          clr.l     0(A0,D0.L)
                    2807   ; BreakPointSetOrCleared[i] = 0 ;
0800169A  2012      2808          move.l    (A2),D0
0800169C  E588      2809          lsl.l     #2,D0
0800169E  41F9 0800 2810          lea       _BreakPointSetOrCleared.L,A0
080016A2  3E9A      
080016A4  42B0 0800 2811          clr.l     0(A0,D0.L)
                    2812   ; *ProgramBreakPointAddress = BreakPointInstruction[i] ;  // put original instruction back
080016A8  2012      2813          move.l    (A2),D0
080016AA  E388      2814          lsl.l     #1,D0
080016AC  41F9 0800 2815          lea       _BreakPointInstruction.L,A0
080016B0  3E8A      
080016B2  226E FFFC 2816          move.l    -4(A6),A1
080016B6  32B0 0800 2817          move.w    0(A0,D0.L),(A1)
                    2818   ; BreakPointInstruction[i] = 0 ;
080016BA  2012      2819          move.l    (A2),D0
080016BC  E388      2820          lsl.l     #1,D0
080016BE  41F9 0800 2821          lea       _BreakPointInstruction.L,A0
080016C2  3E8A      
080016C4  4270 0800 2822          clr.w     0(A0,D0.L)
                    2823   HandleBreakPoint_4:
080016C8  5292      2824          addq.l    #1,(A2)
080016CA  60A0      2825          bra       HandleBreakPoint_1
                    2826   HandleBreakPoint_3:
                    2827   ; }
                    2828   ; }
                    2829   ; DumpRegisters() ;
080016CC  4EB9 0800 2830          jsr       _DumpRegisters
080016D0  0836      
                    2831   ; printf("\r\nPress <SPACE> to Execute Next Instruction");
                    2832          pea       @m68kdebugHandleBreakPoint_96.L
********  **** ****  Error: Undefined or illegal symbol
080016D8  4E93      2833          jsr       (A3)
080016DA  584F      2834          addq.w    #4,A7
                    2835   ; printf("\r\nPress <ESC> to Resume User Program\r\n") ;
                    2836          pea       @m68kdebugHandleBreakPoint_97.L
********  **** ****  Error: Undefined or illegal symbol
080016E2  4E93      2837          jsr       (A3)
080016E4  584F      2838          addq.w    #4,A7
                    2839   ; menu() ;
080016E6  4EB9 0800 2840          jsr       _menu
080016EA  190E      
080016EC  4CDF 1C00 2841          movem.l   (A7)+,A2/A3/A4
080016F0  4E5E      2842          unlk      A6
080016F2  4E75      2843          rts
                    2844   ; }
                    2845   ; void UnknownCommand()
                    2846   ; {
                    2847   _UnknownCommand:
                    2848   ; printf("\r\nUnknown Command.....\r\n") ;
                    2849          pea       @m68kdebugUnknownCommand_98.L
********  **** ****  Error: Undefined or illegal symbol
080016FA  4EB9 0800 2850          jsr       _printf
080016FE  2276      
08001700  584F      2851          addq.w    #4,A7
                    2852   ; Help() ;
08001702  4EB9 0800 2853          jsr       _Help
08001706  1834      
08001708  4E75      2854          rts
                    2855   ; }
                    2856   ; // system when the users program executes a TRAP #15 instruction to halt program and return to debug monitor
                    2857   ; void CallDebugMonitor(void)
                    2858   ; {
                    2859   _CallDebugMonitor:
                    2860   ; printf("\r\nProgram Ended (TRAP #15)....") ;
                    2861          pea       @m68kdebugCallDebugMonitor_99.L
********  **** ****  Error: Undefined or illegal symbol
08001710  4EB9 0800 2862          jsr       _printf
08001714  2276      
08001716  584F      2863          addq.w    #4,A7
                    2864   ; menu();
08001718  4EB9 0800 2865          jsr       _menu
0800171C  190E      
0800171E  4E75      2866          rts
                    2867   ; }
                    2868   ; void Breakpoint(void)
                    2869   ; {
                    2870   _Breakpoint:
08001720  2F02      2871          move.l    D2,-(A7)
                    2872   ; char c;
                    2873   ; c = toupper(_getch());
08001722  2F00      2874          move.l    D0,-(A7)
08001724  4EB9 0800 2875          jsr       __getch
08001728  0290      
0800172A  2200      2876          move.l    D0,D1
0800172C  201F      2877          move.l    (A7)+,D0
0800172E  2F01      2878          move.l    D1,-(A7)
08001730  4EB9 0800 2879          jsr       _toupper
08001734  225A      
08001736  584F      2880          addq.w    #4,A7
08001738  1400      2881          move.b    D0,D2
                    2882   ; if( c == (char)('D'))                                      // BreakPoint Display
0800173A  0C02 0044 2883          cmp.b     #68,D2
0800173E  660A      2884          bne.s     Breakpoint_1
                    2885   ; BreakPointDisplay() ;
08001740  4EB9 0800 2886          jsr       _BreakPointDisplay
08001744  0FEE      
08001746  6000 005E 2887          bra       Breakpoint_10
                    2888   Breakpoint_1:
                    2889   ; else if(c == (char)('K')) {                                 // breakpoint Kill
0800174A  0C02 004B 2890          cmp.b     #75,D2
0800174E  6634      2891          bne.s     Breakpoint_3
                    2892   ; printf("\r\nKill All Break Points...(y/n)?") ;
                    2893          pea       @m68kdebugBreakpoint_100.L
********  **** ****  Error: Undefined or illegal symbol
08001756  4EB9 0800 2894          jsr       _printf
0800175A  2276      
0800175C  584F      2895          addq.w    #4,A7
                    2896   ; c = toupper(_getch());
0800175E  2F00      2897          move.l    D0,-(A7)
08001760  4EB9 0800 2898          jsr       __getch
08001764  0290      
08001766  2200      2899          move.l    D0,D1
08001768  201F      2900          move.l    (A7)+,D0
0800176A  2F01      2901          move.l    D1,-(A7)
0800176C  4EB9 0800 2902          jsr       _toupper
08001770  225A      
08001772  584F      2903          addq.w    #4,A7
08001774  1400      2904          move.b    D0,D2
                    2905   ; if(c == (char)('Y'))
08001776  0C02 0059 2906          cmp.b     #89,D2
0800177A  6606      2907          bne.s     Breakpoint_5
                    2908   ; KillAllBreakPoints() ;
0800177C  4EB9 0800 2909          jsr       _KillAllBreakPoints
08001780  1396      
                    2910   Breakpoint_5:
08001782  6022      2911          bra.s     Breakpoint_10
                    2912   Breakpoint_3:
                    2913   ; }
                    2914   ; else if(c == (char)('S')) {
08001784  0C02 0053 2915          cmp.b     #83,D2
08001788  6608      2916          bne.s     Breakpoint_7
                    2917   ; SetBreakPoint() ;
0800178A  4EB9 0800 2918          jsr       _SetBreakPoint
0800178E  142E      
08001790  6014      2919          bra.s     Breakpoint_10
                    2920   Breakpoint_7:
                    2921   ; }
                    2922   ; else if(c == (char)('C')) {
08001792  0C02 0043 2923          cmp.b     #67,D2
08001796  6608      2924          bne.s     Breakpoint_9
                    2925   ; BreakPointClear() ;
08001798  4EB9 0800 2926          jsr       _BreakPointClear
0800179C  116E      
0800179E  6006      2927          bra.s     Breakpoint_10
                    2928   Breakpoint_9:
                    2929   ; }
                    2930   ; else
                    2931   ; UnknownCommand() ;
080017A0  4EB9 0800 2932          jsr       _UnknownCommand
080017A4  16F4      
                    2933   Breakpoint_10:
080017A6  241F      2934          move.l    (A7)+,D2
080017A8  4E75      2935          rts
                    2936   ; }
                    2937   ; void Watchpoint(void)
                    2938   ; {
                    2939   _Watchpoint:
080017AA  2F02      2940          move.l    D2,-(A7)
                    2941   ; char c;
                    2942   ; c = toupper(_getch());
080017AC  2F00      2943          move.l    D0,-(A7)
080017AE  4EB9 0800 2944          jsr       __getch
080017B2  0290      
080017B4  2200      2945          move.l    D0,D1
080017B6  201F      2946          move.l    (A7)+,D0
080017B8  2F01      2947          move.l    D1,-(A7)
080017BA  4EB9 0800 2948          jsr       _toupper
080017BE  225A      
080017C0  584F      2949          addq.w    #4,A7
080017C2  1400      2950          move.b    D0,D2
                    2951   ; if( c == (char)('D'))                                      // WatchPoint Display
080017C4  0C02 0044 2952          cmp.b     #68,D2
080017C8  660A      2953          bne.s     Watchpoint_1
                    2954   ; WatchPointDisplay() ;
080017CA  4EB9 0800 2955          jsr       _WatchPointDisplay
080017CE  10C2      
080017D0  6000 005E 2956          bra       Watchpoint_10
                    2957   Watchpoint_1:
                    2958   ; else if(c == (char)('K')) {                                 // wtahcpoint Kill
080017D4  0C02 004B 2959          cmp.b     #75,D2
080017D8  6634      2960          bne.s     Watchpoint_3
                    2961   ; printf("\r\nKill All Watch Points...(y/n)?") ;
                    2962          pea       @m68kdebugWatchpoint_101.L
********  **** ****  Error: Undefined or illegal symbol
080017E0  4EB9 0800 2963          jsr       _printf
080017E4  2276      
080017E6  584F      2964          addq.w    #4,A7
                    2965   ; c = toupper(_getch());
080017E8  2F00      2966          move.l    D0,-(A7)
080017EA  4EB9 0800 2967          jsr       __getch
080017EE  0290      
080017F0  2200      2968          move.l    D0,D1
080017F2  201F      2969          move.l    (A7)+,D0
080017F4  2F01      2970          move.l    D1,-(A7)
080017F6  4EB9 0800 2971          jsr       _toupper
080017FA  225A      
080017FC  584F      2972          addq.w    #4,A7
080017FE  1400      2973          move.b    D0,D2
                    2974   ; if(c == (char)('Y'))
08001800  0C02 0059 2975          cmp.b     #89,D2
08001804  6606      2976          bne.s     Watchpoint_5
                    2977   ; KillAllWatchPoints() ;
08001806  4EB9 0800 2978          jsr       _KillAllWatchPoints
0800180A  13FE      
                    2979   Watchpoint_5:
0800180C  6022      2980          bra.s     Watchpoint_10
                    2981   Watchpoint_3:
                    2982   ; }
                    2983   ; else if(c == (char)('S')) {
0800180E  0C02 0053 2984          cmp.b     #83,D2
08001812  6608      2985          bne.s     Watchpoint_7
                    2986   ; SetWatchPoint() ;
08001814  4EB9 0800 2987          jsr       _SetWatchPoint
08001818  1552      
0800181A  6014      2988          bra.s     Watchpoint_10
                    2989   Watchpoint_7:
                    2990   ; }
                    2991   ; else if(c == (char)('C')) {
0800181C  0C02 0043 2992          cmp.b     #67,D2
08001820  6608      2993          bne.s     Watchpoint_9
                    2994   ; WatchPointClear() ;
08001822  4EB9 0800 2995          jsr       _WatchPointClear
08001826  1250      
08001828  6006      2996          bra.s     Watchpoint_10
                    2997   Watchpoint_9:
                    2998   ; }
                    2999   ; else
                    3000   ; UnknownCommand() ;
0800182A  4EB9 0800 3001          jsr       _UnknownCommand
0800182E  16F4      
                    3002   Watchpoint_10:
08001830  241F      3003          move.l    (A7)+,D2
08001832  4E75      3004          rts
                    3005   ; }
                    3006   ; void Help(void)
                    3007   ; {
                    3008   _Help:
08001834  48E7 2020 3009          movem.l   D2/A2,-(A7)
08001838  45F9 0800 3010          lea       _printf.L,A2
0800183C  2276      
                    3011   ; char *banner = "\r\n----------------------------------------------------------------" ;
                    3012          lea       @m68kdebugHelp_102.L,A0
********  **** ****  Error: Undefined or illegal symbol
08001844  2408      3013          move.l    A0,D2
                    3014   ; printf(banner) ;
08001846  2F02      3015          move.l    D2,-(A7)
08001848  4E92      3016          jsr       (A2)
0800184A  584F      3017          addq.w    #4,A7
                    3018   ; printf("\r\n  Debugger Command Summary") ;
                    3019          pea       @m68kdebugHelp_103.L
********  **** ****  Error: Undefined or illegal symbol
08001852  4E92      3020          jsr       (A2)
08001854  584F      3021          addq.w    #4,A7
                    3022   ; printf(banner) ;
08001856  2F02      3023          move.l    D2,-(A7)
08001858  4E92      3024          jsr       (A2)
0800185A  584F      3025          addq.w    #4,A7
                    3026   ; printf("\r\n  .(reg)       - Change Registers: e.g A0-A7,D0-D7,PC,SSP,USP,SR");
                    3027          pea       @m68kdebugHelp_104.L
********  **** ****  Error: Undefined or illegal symbol
08001862  4E92      3028          jsr       (A2)
08001864  584F      3029          addq.w    #4,A7
                    3030   ; printf("\r\n  BD/BS/BC/BK  - Break Point: Display/Set/Clear/Kill") ;
                    3031          pea       @m68kdebugHelp_105.L
********  **** ****  Error: Undefined or illegal symbol
0800186C  4E92      3032          jsr       (A2)
0800186E  584F      3033          addq.w    #4,A7
                    3034   ; printf("\r\n  C            - Copy Program from Flash to Main Memory") ;
                    3035          pea       @m68kdebugHelp_106.L
********  **** ****  Error: Undefined or illegal symbol
08001876  4E92      3036          jsr       (A2)
08001878  584F      3037          addq.w    #4,A7
                    3038   ; printf("\r\n  D            - Dump Memory Contents to Screen") ;
                    3039          pea       @m68kdebugHelp_107.L
********  **** ****  Error: Undefined or illegal symbol
08001880  4E92      3040          jsr       (A2)
08001882  584F      3041          addq.w    #4,A7
                    3042   ; printf("\r\n  E            - Enter String into Memory") ;
                    3043          pea       @m68kdebugHelp_108.L
********  **** ****  Error: Undefined or illegal symbol
0800188A  4E92      3044          jsr       (A2)
0800188C  584F      3045          addq.w    #4,A7
                    3046   ; printf("\r\n  F            - Fill Memory with Data") ;
                    3047          pea       @m68kdebugHelp_109.L
********  **** ****  Error: Undefined or illegal symbol
08001894  4E92      3048          jsr       (A2)
08001896  584F      3049          addq.w    #4,A7
                    3050   ; printf("\r\n  G            - Go Program Starting at Address: $%08X", PC) ;
08001898  2F39 0800 3051          move.l    _PC.L,-(A7)
0800189C  3E5C      
                    3052          pea       @m68kdebugHelp_110.L
********  **** ****  Error: Undefined or illegal symbol
080018A4  4E92      3053          jsr       (A2)
080018A6  504F      3054          addq.w    #8,A7
                    3055   ; printf("\r\n  L            - Load Program (.HEX file) from Laptop") ;
                    3056          pea       @m68kdebugHelp_111.L
********  **** ****  Error: Undefined or illegal symbol
080018AE  4E92      3057          jsr       (A2)
080018B0  584F      3058          addq.w    #4,A7
                    3059   ; printf("\r\n  M            - Memory Examine and Change");
                    3060          pea       @m68kdebugHelp_112.L
********  **** ****  Error: Undefined or illegal symbol
080018B8  4E92      3061          jsr       (A2)
080018BA  584F      3062          addq.w    #4,A7
                    3063   ; printf("\r\n  P            - Program Flash Memory with User Program") ;
                    3064          pea       @m68kdebugHelp_113.L
********  **** ****  Error: Undefined or illegal symbol
080018C2  4E92      3065          jsr       (A2)
080018C4  584F      3066          addq.w    #4,A7
                    3067   ; printf("\r\n  R            - Display 68000 Registers") ;
                    3068          pea       @m68kdebugHelp_114.L
********  **** ****  Error: Undefined or illegal symbol
080018CC  4E92      3069          jsr       (A2)
080018CE  584F      3070          addq.w    #4,A7
                    3071   ; printf("\r\n  S            - Toggle ON/OFF Single Step Mode") ;
                    3072          pea       @m68kdebugHelp_115.L
********  **** ****  Error: Undefined or illegal symbol
080018D6  4E92      3073          jsr       (A2)
080018D8  584F      3074          addq.w    #4,A7
                    3075   ; printf("\r\n  TM           - Test Memory") ;
                    3076          pea       @m68kdebugHelp_116.L
********  **** ****  Error: Undefined or illegal symbol
080018E0  4E92      3077          jsr       (A2)
080018E2  584F      3078          addq.w    #4,A7
                    3079   ; printf("\r\n  TS           - Test Switches: SW7-0") ;
                    3080          pea       @m68kdebugHelp_117.L
********  **** ****  Error: Undefined or illegal symbol
080018EA  4E92      3081          jsr       (A2)
080018EC  584F      3082          addq.w    #4,A7
                    3083   ; printf("\r\n  TD           - Test Displays: LEDs and 7-Segment") ;
                    3084          pea       @m68kdebugHelp_118.L
********  **** ****  Error: Undefined or illegal symbol
080018F4  4E92      3085          jsr       (A2)
080018F6  584F      3086          addq.w    #4,A7
                    3087   ; printf("\r\n  WD/WS/WC/WK  - Watch Point: Display/Set/Clear/Kill") ;
                    3088          pea       @m68kdebugHelp_119.L
********  **** ****  Error: Undefined or illegal symbol
080018FE  4E92      3089          jsr       (A2)
08001900  584F      3090          addq.w    #4,A7
                    3091   ; printf(banner) ;
08001902  2F02      3092          move.l    D2,-(A7)
08001904  4E92      3093          jsr       (A2)
08001906  584F      3094          addq.w    #4,A7
08001908  4CDF 0404 3095          movem.l   (A7)+,D2/A2
0800190C  4E75      3096          rts
                    3097   ; }
                    3098   ; void menu(void)
                    3099   ; {
                    3100   _menu:
0800190E  48E7 303C 3101          movem.l   D2/D3/A2/A3/A4/A5,-(A7)
08001912  45F9 0800 3102          lea       _printf.L,A2
08001916  2276      
08001918  47F9 0800 3103          lea       _Trace.L,A3
0800191C  3E14      
0800191E  49F9 0800 3104          lea       _x.L,A4
08001922  3E04      
08001924  4BF9 0800 3105          lea       _SR.L,A5
08001928  3E68      
                    3106   ; char c,c1 ;
                    3107   ; while(1)    {
                    3108   menu_1:
                    3109   ; FlushKeyboard() ;               // dump unread characters from keyboard
0800192A  4EB9 0800 3110          jsr       _FlushKeyboard
0800192E  02D0      
                    3111   ; printf("\r\n#") ;
                    3112          pea       @m68kdebugmenu_120.L
********  **** ****  Error: Undefined or illegal symbol
08001936  4E92      3113          jsr       (A2)
08001938  584F      3114          addq.w    #4,A7
                    3115   ; c = toupper(_getch());
0800193A  2F00      3116          move.l    D0,-(A7)
0800193C  4EB9 0800 3117          jsr       __getch
08001940  0290      
08001942  2200      3118          move.l    D0,D1
08001944  201F      3119          move.l    (A7)+,D0
08001946  2F01      3120          move.l    D1,-(A7)
08001948  4EB9 0800 3121          jsr       _toupper
0800194C  225A      
0800194E  584F      3122          addq.w    #4,A7
08001950  1400      3123          move.b    D0,D2
                    3124   ; if( c == (char)('L'))                  // load s record file
08001952  0C02 004C 3125          cmp.b     #76,D2
08001956  660A      3126          bne.s     menu_4
                    3127   ; Load_SRecordFile() ;
08001958  4EB9 0800 3128          jsr       _Load_SRecordFile
0800195C  057E      
0800195E  6000 0246 3129          bra       menu_46
                    3130   menu_4:
                    3131   ; else if( c == (char)('D'))             // dump memory
08001962  0C02 0044 3132          cmp.b     #68,D2
08001966  660A      3133          bne.s     menu_6
                    3134   ; DumpMemory() ;
08001968  4EB9 0800 3135          jsr       _DumpMemory
0800196C  040A      
0800196E  6000 0236 3136          bra       menu_46
                    3137   menu_6:
                    3138   ; else if( c == (char)('E'))             // Enter String into memory
08001972  0C02 0045 3139          cmp.b     #69,D2
08001976  660A      3140          bne.s     menu_8
                    3141   ; EnterString() ;
08001978  4EB9 0800 3142          jsr       _EnterString
0800197C  1D16      
0800197E  6000 0226 3143          bra       menu_46
                    3144   menu_8:
                    3145   ; else if( c == (char)('F'))             // fill memory
08001982  0C02 0046 3146          cmp.b     #70,D2
08001986  660A      3147          bne.s     menu_10
                    3148   ; FillMemory() ;
08001988  4EB9 0800 3149          jsr       _FillMemory
0800198C  04FE      
0800198E  6000 0216 3150          bra       menu_46
                    3151   menu_10:
                    3152   ; else if( c == (char)('G'))  {           // go user program
08001992  0C02 0047 3153          cmp.b     #71,D2
08001996  6628      3154          bne.s     menu_12
                    3155   ; printf("\r\nProgram Running.....") ;
                    3156          pea       @m68kdebugmenu_121.L
********  **** ****  Error: Undefined or illegal symbol
0800199E  4E92      3157          jsr       (A2)
080019A0  584F      3158          addq.w    #4,A7
                    3159   ; printf("\r\nPress <RESET> button <Key0> on DE1 to stop") ;
                    3160          pea       @m68kdebugmenu_122.L
********  **** ****  Error: Undefined or illegal symbol
080019A8  4E92      3161          jsr       (A2)
080019AA  584F      3162          addq.w    #4,A7
                    3163   ; GoFlag = 1 ;
080019AC  23FC 0000 3164          move.l    #1,_GoFlag.L
080019B0  0001 0800 
080019B4  3E18      
                    3165   ; go() ;
                    3166          jsr       _go
********  **** ****  Error: Undefined or illegal symbol
080019BC  6000 01E8 3167          bra       menu_46
                    3168   menu_12:
                    3169   ; }
                    3170   ; else if( c == (char)('M'))           // memory examine and modify
080019C0  0C02 004D 3171          cmp.b     #77,D2
080019C4  660A      3172          bne.s     menu_14
                    3173   ; MemoryChange() ;
080019C6  4EB9 0800 3174          jsr       _MemoryChange
080019CA  071A      
080019CC  6000 01D8 3175          bra       menu_46
                    3176   menu_14:
                    3177   ; else if( c == (char)('P'))            // Program Flash Chip
080019D0  0C02 0050 3178          cmp.b     #80,D2
080019D4  660A      3179          bne.s     menu_16
                    3180   ; ProgramFlashChip() ;
080019D6  4EB9 0800 3181          jsr       _ProgramFlashChip
080019DA  0824      
080019DC  6000 01C8 3182          bra       menu_46
                    3183   menu_16:
                    3184   ; else if( c == (char)('C'))             // copy flash chip to ram and go
080019E0  0C02 0043 3185          cmp.b     #67,D2
080019E4  660A      3186          bne.s     menu_18
                    3187   ; LoadFromFlashChip();
080019E6  4EB9 0800 3188          jsr       _LoadFromFlashChip
080019EA  0826      
080019EC  6000 01B8 3189          bra       menu_46
                    3190   menu_18:
                    3191   ; else if( c == (char)('R'))             // dump registers
080019F0  0C02 0052 3192          cmp.b     #82,D2
080019F4  660A      3193          bne.s     menu_20
                    3194   ; DumpRegisters() ;
080019F6  4EB9 0800 3195          jsr       _DumpRegisters
080019FA  0836      
080019FC  6000 01A8 3196          bra       menu_46
                    3197   menu_20:
                    3198   ; else if( c == (char)('.'))           // change registers
08001A00  0C02 002E 3199          cmp.b     #46,D2
08001A04  660A      3200          bne.s     menu_22
                    3201   ; ChangeRegisters() ;
08001A06  4EB9 0800 3202          jsr       _ChangeRegisters
08001A0A  0D2A      
08001A0C  6000 0198 3203          bra       menu_46
                    3204   menu_22:
                    3205   ; else if( c == (char)('B'))              // breakpoint command
08001A10  0C02 0042 3206          cmp.b     #66,D2
08001A14  660A      3207          bne.s     menu_24
                    3208   ; Breakpoint() ;
08001A16  4EB9 0800 3209          jsr       _Breakpoint
08001A1A  1720      
08001A1C  6000 0188 3210          bra       menu_46
                    3211   menu_24:
                    3212   ; else if( c == (char)('T'))  {          // Test command
08001A20  0C02 0054 3213          cmp.b     #84,D2
08001A24  6600 004E 3214          bne       menu_26
                    3215   ; c1 = toupper(_getch()) ;
08001A28  2F00      3216          move.l    D0,-(A7)
08001A2A  4EB9 0800 3217          jsr       __getch
08001A2E  0290      
08001A30  2200      3218          move.l    D0,D1
08001A32  201F      3219          move.l    (A7)+,D0
08001A34  2F01      3220          move.l    D1,-(A7)
08001A36  4EB9 0800 3221          jsr       _toupper
08001A3A  225A      
08001A3C  584F      3222          addq.w    #4,A7
08001A3E  1600      3223          move.b    D0,D3
                    3224   ; if(c1 == (char)('M'))                    // memory test
08001A40  0C03 004D 3225          cmp.b     #77,D3
08001A44  6608      3226          bne.s     menu_28
                    3227   ; MemoryTest() ;
08001A46  4EB9 0800 3228          jsr       _MemoryTest
08001A4A  1D68      
08001A4C  6022      3229          bra.s     menu_33
                    3230   menu_28:
                    3231   ; else if( c1 == (char)('S'))              // Switch Test command
08001A4E  0C03 0053 3232          cmp.b     #83,D3
08001A52  6608      3233          bne.s     menu_30
                    3234   ; SwitchTest() ;
08001A54  4EB9 0800 3235          jsr       _SwitchTest
08001A58  01CC      
08001A5A  6014      3236          bra.s     menu_33
                    3237   menu_30:
                    3238   ; else if( c1 == (char)('D'))              // display Test command
08001A5C  0C03 0044 3239          cmp.b     #68,D3
08001A60  6608      3240          bne.s     menu_32
                    3241   ; TestLEDS() ;
08001A62  4EB9 0800 3242          jsr       _TestLEDS
08001A66  0178      
08001A68  6006      3243          bra.s     menu_33
                    3244   menu_32:
                    3245   ; else
                    3246   ; UnknownCommand() ;
08001A6A  4EB9 0800 3247          jsr       _UnknownCommand
08001A6E  16F4      
                    3248   menu_33:
08001A70  6000 0134 3249          bra       menu_46
                    3250   menu_26:
                    3251   ; }
                    3252   ; else if( c == (char)(' ')) {             // Next instruction command
08001A74  0C02 0020 3253          cmp.b     #32,D2
08001A78  6638      3254          bne.s     menu_34
                    3255   ; DisableBreakPoints() ;
08001A7A  4EB9 0800 3256          jsr       _DisableBreakPoints
08001A7E  12FA      
                    3257   ; if(Trace == 1 && GoFlag == 1)   {    // if the program is running and trace mode on then 'N' is valid
08001A80  2013      3258          move.l    (A3),D0
08001A82  0C80 0000 3259          cmp.l     #1,D0
08001A86  0001      
08001A88  661A      3260          bne.s     menu_36
08001A8A  2039 0800 3261          move.l    _GoFlag.L,D0
08001A8E  3E18      
08001A90  0C80 0000 3262          cmp.l     #1,D0
08001A94  0001      
08001A96  660C      3263          bne.s     menu_36
                    3264   ; TraceException = 1 ;             // generate a trace exception for the next instruction if user wants to single step though next instruction
08001A98  13FC 0001 3265          move.b    #1,4194314
08001A9C  0040 000A 
                    3266   ; return ;
08001AA0  6000 0108 3267          bra       menu_38
                    3268   menu_36:
                    3269   ; }
                    3270   ; else
                    3271   ; printf("\r\nError: Press 'G' first to start program") ;
                    3272          pea       @m68kdebugmenu_123.L
********  **** ****  Error: Undefined or illegal symbol
08001AAA  4E92      3273          jsr       (A2)
08001AAC  584F      3274          addq.w    #4,A7
08001AAE  6000 00F6 3275          bra       menu_46
                    3276   menu_34:
                    3277   ; }
                    3278   ; else if( c == (char)('S')) {             // single step
08001AB2  0C02 0053 3279          cmp.b     #83,D2
08001AB6  6600 0092 3280          bne       menu_39
                    3281   ; if(Trace == 0) {
08001ABA  2013      3282          move.l    (A3),D0
08001ABC  6600 0054 3283          bne       menu_41
                    3284   ; DisableBreakPoints() ;
08001AC0  4EB9 0800 3285          jsr       _DisableBreakPoints
08001AC4  12FA      
                    3286   ; printf("\r\nSingle Step  :[ON]") ;
                    3287          pea       @m68kdebugmenu_124.L
********  **** ****  Error: Undefined or illegal symbol
08001ACC  4E92      3288          jsr       (A2)
08001ACE  584F      3289          addq.w    #4,A7
                    3290   ; printf("\r\nBreak Points :[Disabled]") ;
                    3291          pea       @m68kdebugmenu_125.L
********  **** ****  Error: Undefined or illegal symbol
08001AD6  4E92      3292          jsr       (A2)
08001AD8  584F      3293          addq.w    #4,A7
                    3294   ; SR = SR | (unsigned short int)(0x8000) ;    // set T bit in status register
08001ADA  0055 8000 3295          or.w      #32768,(A5)
                    3296   ; printf("\r\nPress 'G' to Trace Program from address $%X.....",PC) ;
08001ADE  2F39 0800 3297          move.l    _PC.L,-(A7)
08001AE2  3E5C      
                    3298          pea       @m68kdebugmenu_126.L
********  **** ****  Error: Undefined or illegal symbol
08001AEA  4E92      3299          jsr       (A2)
08001AEC  504F      3300          addq.w    #8,A7
                    3301   ; printf("\r\nPush <RESET Button> to Stop.....") ;
                    3302          pea       @m68kdebugmenu_127.L
********  **** ****  Error: Undefined or illegal symbol
08001AF4  4E92      3303          jsr       (A2)
08001AF6  584F      3304          addq.w    #4,A7
                    3305   ; DumpRegisters() ;
08001AF8  4EB9 0800 3306          jsr       _DumpRegisters
08001AFC  0836      
                    3307   ; Trace = 1;
08001AFE  26BC 0000 3308          move.l    #1,(A3)
08001B02  0001      
                    3309   ; TraceException = 1;
08001B04  13FC 0001 3310          move.b    #1,4194314
08001B08  0040 000A 
                    3311   ; x = *(unsigned int *)(0x00000074) ;       // simulate responding to a Level 5 IRQ by reading vector to reset Trace exception generator
08001B0C  28B8 0074 3312          move.l    116,(A4)
08001B10  6034      3313          bra.s     menu_42
                    3314   menu_41:
                    3315   ; }
                    3316   ; else {
                    3317   ; Trace = 0 ;
08001B12  4293      3318          clr.l     (A3)
                    3319   ; TraceException = 0 ;
08001B14  4239 0040 3320          clr.b     4194314
08001B18  000A      
                    3321   ; x = *(unsigned int *)(0x00000074) ;       // simulate responding to a Level 5 IRQ by reading vector to reset Trace exception generator
08001B1A  28B8 0074 3322          move.l    116,(A4)
                    3323   ; EnableBreakPoints() ;
08001B1E  4EB9 0800 3324          jsr       _EnableBreakPoints
08001B22  134E      
                    3325   ; SR = SR & (unsigned short int)(0x7FFF) ;    // clear T bit in status register
08001B24  0255 7FFF 3326          and.w     #32767,(A5)
                    3327   ; printf("\r\nSingle Step : [OFF]") ;
                    3328          pea       @m68kdebugmenu_128.L
********  **** ****  Error: Undefined or illegal symbol
08001B2E  4E92      3329          jsr       (A2)
08001B30  584F      3330          addq.w    #4,A7
                    3331   ; printf("\r\nBreak Points :[Enabled]") ;
                    3332          pea       @m68kdebugmenu_129.L
********  **** ****  Error: Undefined or illegal symbol
08001B38  4E92      3333          jsr       (A2)
08001B3A  584F      3334          addq.w    #4,A7
                    3335   ; printf("\r\nPress <ESC> to Resume User Program.....") ;
                    3336          pea       @m68kdebugmenu_130.L
********  **** ****  Error: Undefined or illegal symbol
08001B42  4E92      3337          jsr       (A2)
08001B44  584F      3338          addq.w    #4,A7
                    3339   menu_42:
08001B46  6000 005E 3340          bra       menu_46
                    3341   menu_39:
                    3342   ; }
                    3343   ; }
                    3344   ; else if(c == (char)(0x1b))  {   // if user choses to end trace and run program
08001B4A  0C02 001B 3345          cmp.b     #27,D2
08001B4E  6600 0042 3346          bne       menu_43
                    3347   ; Trace = 0;
08001B52  4293      3348          clr.l     (A3)
                    3349   ; TraceException = 0;
08001B54  4239 0040 3350          clr.b     4194314
08001B58  000A      
                    3351   ; x = *(unsigned int *)(0x00000074) ;   // read IRQ 5 vector to reset trace vector generator
08001B5A  28B8 0074 3352          move.l    116,(A4)
                    3353   ; EnableBreakPoints() ;
08001B5E  4EB9 0800 3354          jsr       _EnableBreakPoints
08001B62  134E      
                    3355   ; SR = SR & (unsigned short int)(0x7FFF) ;    // clear T bit in status register
08001B64  0255 7FFF 3356          and.w     #32767,(A5)
                    3357   ; printf("\r\nSingle Step  :[OFF]") ;
                    3358          pea       @m68kdebugmenu_131.L
********  **** ****  Error: Undefined or illegal symbol
08001B6E  4E92      3359          jsr       (A2)
08001B70  584F      3360          addq.w    #4,A7
                    3361   ; printf("\r\nBreak Points :[Enabled]");
                    3362          pea       @m68kdebugmenu_132.L
********  **** ****  Error: Undefined or illegal symbol
08001B78  4E92      3363          jsr       (A2)
08001B7A  584F      3364          addq.w    #4,A7
                    3365   ; printf("\r\nProgram Running.....") ;
                    3366          pea       @m68kdebugmenu_133.L
********  **** ****  Error: Undefined or illegal symbol
08001B82  4E92      3367          jsr       (A2)
08001B84  584F      3368          addq.w    #4,A7
                    3369   ; printf("\r\nPress <RESET> button <Key0> on DE1 to stop") ;
                    3370          pea       @m68kdebugmenu_134.L
********  **** ****  Error: Undefined or illegal symbol
08001B8C  4E92      3371          jsr       (A2)
08001B8E  584F      3372          addq.w    #4,A7
                    3373   ; return ;
08001B90  6018      3374          bra.s     menu_38
                    3375   menu_43:
                    3376   ; }
                    3377   ; else if( c == (char)('W'))              // Watchpoint command
08001B92  0C02 0057 3378          cmp.b     #87,D2
08001B96  6608      3379          bne.s     menu_45
                    3380   ; Watchpoint() ;
08001B98  4EB9 0800 3381          jsr       _Watchpoint
08001B9C  17AA      
08001B9E  6006      3382          bra.s     menu_46
                    3383   menu_45:
                    3384   ; else
                    3385   ; UnknownCommand() ;
08001BA0  4EB9 0800 3386          jsr       _UnknownCommand
08001BA4  16F4      
                    3387   menu_46:
08001BA6  6000 FD82 3388          bra       menu_1
                    3389   menu_38:
08001BAA  4CDF 3C0C 3390          movem.l   (A7)+,D2/D3/A2/A3/A4/A5
08001BAE  4E75      3391          rts
                    3392   ; }
                    3393   ; }
                    3394   ; void PrintErrorMessageandAbort(char *string) {
                    3395   _PrintErrorMessageandAbort:
08001BB0  4E56 0000 3396          link      A6,#0
                    3397   ; printf("\r\n\r\nProgram ABORT !!!!!!\r\n") ;
                    3398          pea       @m68kdebugPrintErrorMessageandAbort_135.L
********  **** ****  Error: Undefined or illegal symbol
08001BBA  4EB9 0800 3399          jsr       _printf
08001BBE  2276      
08001BC0  584F      3400          addq.w    #4,A7
                    3401   ; printf("%s\r\n", string) ;
08001BC2  2F2E 0008 3402          move.l    8(A6),-(A7)
                    3403          pea       @m68kdebugPrintErrorMessageandAbort_136.L
********  **** ****  Error: Undefined or illegal symbol
08001BCC  4EB9 0800 3404          jsr       _printf
08001BD0  2276      
08001BD2  504F      3405          addq.w    #8,A7
                    3406   ; menu() ;
08001BD4  4EB9 0800 3407          jsr       _menu
08001BD8  190E      
08001BDA  4E5E      3408          unlk      A6
08001BDC  4E75      3409          rts
                    3410   ; }
                    3411   ; void IRQMessage(int level) {
                    3412   _IRQMessage:
08001BDE  4E56 0000 3413          link      A6,#0
                    3414   ; printf("\r\n\r\nProgram ABORT !!!!!");
                    3415          pea       @m68kdebugIRQMessage_137.L
********  **** ****  Error: Undefined or illegal symbol
08001BE8  4EB9 0800 3416          jsr       _printf
08001BEC  2276      
08001BEE  584F      3417          addq.w    #4,A7
                    3418   ; printf("\r\nUnhandled Interrupt: IRQ%d !!!!!", level) ;
08001BF0  2F2E 0008 3419          move.l    8(A6),-(A7)
                    3420          pea       @m68kdebugIRQMessage_138.L
********  **** ****  Error: Undefined or illegal symbol
08001BFA  4EB9 0800 3421          jsr       _printf
08001BFE  2276      
08001C00  504F      3422          addq.w    #8,A7
                    3423   ; menu() ;
08001C02  4EB9 0800 3424          jsr       _menu
08001C06  190E      
08001C08  4E5E      3425          unlk      A6
08001C0A  4E75      3426          rts
                    3427   ; }
                    3428   ; void UnhandledIRQ1(void) {
                    3429   _UnhandledIRQ1:
                    3430   ; IRQMessage(1);
08001C0C  4878 0001 3431          pea       1
08001C10  4EB9 0800 3432          jsr       _IRQMessage
08001C14  1BDE      
08001C16  584F      3433          addq.w    #4,A7
08001C18  4E75      3434          rts
                    3435   ; }
                    3436   ; void UnhandledIRQ2(void) {
                    3437   _UnhandledIRQ2:
                    3438   ; IRQMessage(2);
08001C1A  4878 0002 3439          pea       2
08001C1E  4EB9 0800 3440          jsr       _IRQMessage
08001C22  1BDE      
08001C24  584F      3441          addq.w    #4,A7
08001C26  4E75      3442          rts
                    3443   ; }
                    3444   ; void UnhandledIRQ3(void){
                    3445   _UnhandledIRQ3:
                    3446   ; IRQMessage(3);
08001C28  4878 0003 3447          pea       3
08001C2C  4EB9 0800 3448          jsr       _IRQMessage
08001C30  1BDE      
08001C32  584F      3449          addq.w    #4,A7
08001C34  4E75      3450          rts
                    3451   ; }
                    3452   ; void UnhandledIRQ4(void) {
                    3453   _UnhandledIRQ4:
                    3454   ; IRQMessage(4);
08001C36  4878 0004 3455          pea       4
08001C3A  4EB9 0800 3456          jsr       _IRQMessage
08001C3E  1BDE      
08001C40  584F      3457          addq.w    #4,A7
08001C42  4E75      3458          rts
                    3459   ; }
                    3460   ; void UnhandledIRQ5(void) {
                    3461   _UnhandledIRQ5:
                    3462   ; IRQMessage(5);
08001C44  4878 0005 3463          pea       5
08001C48  4EB9 0800 3464          jsr       _IRQMessage
08001C4C  1BDE      
08001C4E  584F      3465          addq.w    #4,A7
08001C50  4E75      3466          rts
                    3467   ; }
                    3468   ; void UnhandledIRQ6(void) {
                    3469   _UnhandledIRQ6:
                    3470   ; PrintErrorMessageandAbort("ADDRESS ERROR: 16 or 32 Bit Transfer to/from an ODD Address....") ;
                    3471          pea       @m68kdebugUnhandledIRQ6_139.L
********  **** ****  Error: Undefined or illegal symbol
08001C58  4EB9 0800 3472          jsr       _PrintErrorMessageandAbort
08001C5C  1BB0      
08001C5E  584F      3473          addq.w    #4,A7
                    3474   ; menu() ;
08001C60  4EB9 0800 3475          jsr       _menu
08001C64  190E      
08001C66  4E75      3476          rts
                    3477   ; }
                    3478   ; void UnhandledIRQ7(void) {
                    3479   _UnhandledIRQ7:
                    3480   ; IRQMessage(7);
08001C68  4878 0007 3481          pea       7
08001C6C  4EB9 0800 3482          jsr       _IRQMessage
08001C70  1BDE      
08001C72  584F      3483          addq.w    #4,A7
08001C74  4E75      3484          rts
                    3485   ; }
                    3486   ; void UnhandledTrap(void) {
                    3487   _UnhandledTrap:
                    3488   ; PrintErrorMessageandAbort("Unhandled Trap !!!!!") ;
                    3489          pea       @m68kdebugUnhandledTrap_140.L
********  **** ****  Error: Undefined or illegal symbol
08001C7C  4EB9 0800 3490          jsr       _PrintErrorMessageandAbort
08001C80  1BB0      
08001C82  584F      3491          addq.w    #4,A7
08001C84  4E75      3492          rts
                    3493   ; }
                    3494   ; void BusError() {
                    3495   _BusError:
                    3496   ; PrintErrorMessageandAbort("BUS Error!") ;
                    3497          pea       @m68kdebugBusError_141.L
********  **** ****  Error: Undefined or illegal symbol
08001C8C  4EB9 0800 3498          jsr       _PrintErrorMessageandAbort
08001C90  1BB0      
08001C92  584F      3499          addq.w    #4,A7
08001C94  4E75      3500          rts
                    3501   ; }
                    3502   ; void AddressError() {
                    3503   _AddressError:
                    3504   ; PrintErrorMessageandAbort("ADDRESS Error!") ;
                    3505          pea       @m68kdebugAddressError_142.L
********  **** ****  Error: Undefined or illegal symbol
08001C9C  4EB9 0800 3506          jsr       _PrintErrorMessageandAbort
08001CA0  1BB0      
08001CA2  584F      3507          addq.w    #4,A7
08001CA4  4E75      3508          rts
                    3509   ; }
                    3510   ; void IllegalInstruction() {
                    3511   _IllegalInstruction:
                    3512   ; PrintErrorMessageandAbort("ILLEGAL INSTRUCTION") ;
                    3513          pea       @m68kdebugIllegalInstruction_143.L
********  **** ****  Error: Undefined or illegal symbol
08001CAC  4EB9 0800 3514          jsr       _PrintErrorMessageandAbort
08001CB0  1BB0      
08001CB2  584F      3515          addq.w    #4,A7
08001CB4  4E75      3516          rts
                    3517   ; }
                    3518   ; void Dividebyzero() {
                    3519   _Dividebyzero:
                    3520   ; PrintErrorMessageandAbort("DIVIDE BY ZERO") ;
                    3521          pea       @m68kdebugDividebyzero_144.L
********  **** ****  Error: Undefined or illegal symbol
08001CBC  4EB9 0800 3522          jsr       _PrintErrorMessageandAbort
08001CC0  1BB0      
08001CC2  584F      3523          addq.w    #4,A7
08001CC4  4E75      3524          rts
                    3525   ; }
                    3526   ; void Check() {
                    3527   _Check:
                    3528   ; PrintErrorMessageandAbort("'CHK' INSTRUCTION") ;
                    3529          pea       @m68kdebugCheck_145.L
********  **** ****  Error: Undefined or illegal symbol
08001CCC  4EB9 0800 3530          jsr       _PrintErrorMessageandAbort
08001CD0  1BB0      
08001CD2  584F      3531          addq.w    #4,A7
08001CD4  4E75      3532          rts
                    3533   ; }
                    3534   ; void Trapv() {
                    3535   _Trapv:
                    3536   ; PrintErrorMessageandAbort("TRAPV INSTRUCTION") ;
                    3537          pea       @m68kdebugTrapv_146.L
********  **** ****  Error: Undefined or illegal symbol
08001CDC  4EB9 0800 3538          jsr       _PrintErrorMessageandAbort
08001CE0  1BB0      
08001CE2  584F      3539          addq.w    #4,A7
08001CE4  4E75      3540          rts
                    3541   ; }
                    3542   ; void PrivError() {
                    3543   _PrivError:
                    3544   ; PrintErrorMessageandAbort("PRIVILEGE VIOLATION") ;
                    3545          pea       @m68kdebugPrivError_147.L
********  **** ****  Error: Undefined or illegal symbol
08001CEC  4EB9 0800 3546          jsr       _PrintErrorMessageandAbort
08001CF0  1BB0      
08001CF2  584F      3547          addq.w    #4,A7
08001CF4  4E75      3548          rts
                    3549   ; }
                    3550   ; void UnitIRQ() {
                    3551   _UnitIRQ:
                    3552   ; PrintErrorMessageandAbort("UNINITIALISED IRQ") ;
                    3553          pea       @m68kdebugUnitIRQ_148.L
********  **** ****  Error: Undefined or illegal symbol
08001CFC  4EB9 0800 3554          jsr       _PrintErrorMessageandAbort
08001D00  1BB0      
08001D02  584F      3555          addq.w    #4,A7
08001D04  4E75      3556          rts
                    3557   ; }
                    3558   ; void Spurious() {
                    3559   _Spurious:
                    3560   ; PrintErrorMessageandAbort("SPURIOUS IRQ") ;
                    3561          pea       @m68kdebugSpurious_149.L
********  **** ****  Error: Undefined or illegal symbol
08001D0C  4EB9 0800 3562          jsr       _PrintErrorMessageandAbort
08001D10  1BB0      
08001D12  584F      3563          addq.w    #4,A7
08001D14  4E75      3564          rts
                    3565   ; }
                    3566   ; void EnterString(void)
                    3567   ; {
                    3568   _EnterString:
08001D16  4E56 FFFC 3569          link      A6,#-4
08001D1A  2F02      3570          move.l    D2,-(A7)
                    3571   ; unsigned char *Start;
                    3572   ; unsigned char c;
                    3573   ; printf("\r\nStart Address in Memory: ") ;
                    3574          pea       @m68kdebugEnterString_150.L
********  **** ****  Error: Undefined or illegal symbol
08001D22  4EB9 0800 3575          jsr       _printf
08001D26  2276      
08001D28  584F      3576          addq.w    #4,A7
                    3577   ; Start = Get8HexDigits(0) ;
08001D2A  42A7      3578          clr.l     -(A7)
08001D2C  4EB9 0800 3579          jsr       _Get8HexDigits
08001D30  03DE      
08001D32  584F      3580          addq.w    #4,A7
08001D34  2400      3581          move.l    D0,D2
                    3582   ; printf("\r\nEnter String (ESC to end) :") ;
                    3583          pea       @m68kdebugEnterString_151.L
********  **** ****  Error: Undefined or illegal symbol
08001D3C  4EB9 0800 3584          jsr       _printf
08001D40  2276      
08001D42  584F      3585          addq.w    #4,A7
                    3586   ; while((c = getchar()) != 0x1b)
                    3587   EnterString_1:
08001D44  4EB9 0800 3588          jsr       _getch
08001D48  21BC      
08001D4A  1D40 FFFF 3589          move.b    D0,-1(A6)
08001D4E  0C00 001B 3590          cmp.b     #27,D0
08001D52  670A      3591          beq.s     EnterString_3
                    3592   ; *Start++ = c ;
08001D54  2042      3593          move.l    D2,A0
08001D56  5282      3594          addq.l    #1,D2
08001D58  10AE FFFF 3595          move.b    -1(A6),(A0)
08001D5C  60E6      3596          bra       EnterString_1
                    3597   EnterString_3:
                    3598   ; *Start = 0x00;  // terminate with a null
08001D5E  2042      3599          move.l    D2,A0
08001D60  4210      3600          clr.b     (A0)
08001D62  241F      3601          move.l    (A7)+,D2
08001D64  4E5E      3602          unlk      A6
08001D66  4E75      3603          rts
                    3604   ; }
                    3605   ; void MemoryTest(void)
                    3606   ; {
                    3607   _MemoryTest:
08001D68  4E56 FFE8 3608          link      A6,#-24
                    3609   ; unsigned int *RamPtr, counter1=1 ;
08001D6C  2D7C 0000 3610          move.l    #1,-18(A6)
08001D70  0001 FFEE 
                    3611   ; register unsigned int i ;
                    3612   ; unsigned int Start, End ;
                    3613   ; char c ;
                    3614   ; printf("\r\nStart Address: ") ;
                    3615          pea       @m68kdebugMemoryTest_152.L
********  **** ****  Error: Undefined or illegal symbol
08001D7A  4EB9 0800 3616          jsr       _printf
08001D7E  2276      
08001D80  584F      3617          addq.w    #4,A7
                    3618   ; Start = Get8HexDigits(0) ;
08001D82  42A7      3619          clr.l     -(A7)
08001D84  4EB9 0800 3620          jsr       _Get8HexDigits
08001D88  03DE      
08001D8A  584F      3621          addq.w    #4,A7
08001D8C  2D40 FFF6 3622          move.l    D0,-10(A6)
                    3623   ; printf("\r\nEnd Address: ") ;
                    3624          pea       @m68kdebugMemoryTest_153.L
********  **** ****  Error: Undefined or illegal symbol
08001D96  4EB9 0800 3625          jsr       _printf
08001D9A  2276      
08001D9C  584F      3626          addq.w    #4,A7
                    3627   ; End = Get8HexDigits(0) ;
08001D9E  42A7      3628          clr.l     -(A7)
08001DA0  4EB9 0800 3629          jsr       _Get8HexDigits
08001DA4  03DE      
08001DA6  584F      3630          addq.w    #4,A7
08001DA8  2D40 FFFA 3631          move.l    D0,-6(A6)
08001DAC  4E5E      3632          unlk      A6
08001DAE  4E75      3633          rts
                    3634   ; // TODO
                    3635   ; // add your code to test memory here using 32 bit reads and writes of data between the start and end of memory
                    3636   ; }
                    3637   ; void main(void)
                    3638   ; {
                    3639   _main:
08001DB0  4E56 FFF4 3640          link      A6,#-12
08001DB4  48E7 3030 3641          movem.l   D2/D3/A2/A3,-(A7)
08001DB8  45F9 0800 3642          lea       _InstallExceptionHandler.L,A2
08001DBC  0158      
08001DBE  47F9 0800 3643          lea       _printf.L,A3
08001DC2  2276      
                    3644   ; char c ;
                    3645   ; int i, j ;
                    3646   ; char *BugMessage = "DE1-68k Bug V1.77";
                    3647          lea       @m68kdebugmain_154.L,A0
********  **** ****  Error: Undefined or illegal symbol
08001DCA  2608      3648          move.l    A0,D3
                    3649   ; char *CopyrightMessage = "Copyright (C) PJ Davies 2016";
                    3650          lea       @m68kdebugmain_155.L,A0
********  **** ****  Error: Undefined or illegal symbol
08001DD2  2D48 FFFC 3651          move.l    A0,-4(A6)
                    3652   ; KillAllBreakPoints() ;
08001DD6  4EB9 0800 3653          jsr       _KillAllBreakPoints
08001DDA  1396      
                    3654   ; i = x = y = z = PortA_Count = 0;
08001DDC  42B9 0800 3655          clr.l     _PortA_Count.L
08001DE0  3E10      
08001DE2  42B9 0800 3656          clr.l     _z.L
08001DE6  3E0C      
08001DE8  42B9 0800 3657          clr.l     _y.L
08001DEC  3E08      
08001DEE  42B9 0800 3658          clr.l     _x.L
08001DF2  3E04      
08001DF4  4282      3659          clr.l     D2
                    3660   ; Trace = GoFlag = 0;                       // used in tracing/single stepping
08001DF6  42B9 0800 3661          clr.l     _GoFlag.L
08001DFA  3E18      
08001DFC  42B9 0800 3662          clr.l     _Trace.L
08001E00  3E14      
                    3663   ; Echo = 1 ;
08001E02  23FC 0000 3664          move.l    #1,_Echo.L
08001E06  0001 0800 
08001E0A  3E1C      
                    3665   ; d0=d1=d2=d3=d4=d5=d6=d7=0 ;
08001E0C  42B9 0800 3666          clr.l     _d7.L
08001E10  3E3C      
08001E12  42B9 0800 3667          clr.l     _d6.L
08001E16  3E38      
08001E18  42B9 0800 3668          clr.l     _d5.L
08001E1C  3E34      
08001E1E  42B9 0800 3669          clr.l     _d4.L
08001E22  3E30      
08001E24  42B9 0800 3670          clr.l     _d3.L
08001E28  3E2C      
08001E2A  42B9 0800 3671          clr.l     _d2.L
08001E2E  3E28      
08001E30  42B9 0800 3672          clr.l     _d1.L
08001E34  3E24      
08001E36  42B9 0800 3673          clr.l     _d0.L
08001E3A  3E20      
                    3674   ; a0=a1=a2=a3=a4=a5=a6=0 ;
08001E3C  42B9 0800 3675          clr.l     _a6.L
08001E40  3E58      
08001E42  42B9 0800 3676          clr.l     _a5.L
08001E46  3E54      
08001E48  42B9 0800 3677          clr.l     _a4.L
08001E4C  3E50      
08001E4E  42B9 0800 3678          clr.l     _a3.L
08001E52  3E4C      
08001E54  42B9 0800 3679          clr.l     _a2.L
08001E58  3E48      
08001E5A  42B9 0800 3680          clr.l     _a1.L
08001E5E  3E44      
08001E60  42B9 0800 3681          clr.l     _a0.L
08001E64  3E40      
                    3682   ; PC = ProgramStart, SSP=TopOfStack, USP = TopOfStack;
08001E66  23FC 0800 3683          move.l    #134217728,_PC.L
08001E6A  0000 0800 
08001E6E  3E5C      
08001E70  23FC 0804 3684          move.l    #134479872,_SSP.L
08001E74  0000 0800 
08001E78  3E60      
08001E7A  23FC 0804 3685          move.l    #134479872,_USP.L
08001E7E  0000 0800 
08001E82  3E64      
                    3686   ; SR = 0x2000;                            // clear interrupts enable tracing  uses IRQ6
08001E84  33FC 2000 3687          move.w    #8192,_SR.L
08001E88  0800 3E68 
                    3688   ; // Initialise Breakpoint variables
                    3689   ; for(i = 0; i < 8; i++)  {
08001E8C  4282      3690          clr.l     D2
                    3691   main_1:
08001E8E  0C82 0000 3692          cmp.l     #8,D2
08001E92  0008      
08001E94  6C00 004C 3693          bge       main_3
                    3694   ; BreakPointAddress[i] = 0;               //array of 8 breakpoint addresses
08001E98  2002      3695          move.l    D2,D0
08001E9A  E588      3696          lsl.l     #2,D0
08001E9C  41F9 0800 3697          lea       _BreakPointAddress.L,A0
08001EA0  3E6A      
08001EA2  42B0 0800 3698          clr.l     0(A0,D0.L)
                    3699   ; WatchPointAddress[i] = 0 ;
08001EA6  2002      3700          move.l    D2,D0
08001EA8  E588      3701          lsl.l     #2,D0
08001EAA  41F9 0800 3702          lea       _WatchPointAddress.L,A0
08001EAE  3EBE      
08001EB0  42B0 0800 3703          clr.l     0(A0,D0.L)
                    3704   ; BreakPointInstruction[i] = 0;           // to hold the instruction at the break point
08001EB4  2002      3705          move.l    D2,D0
08001EB6  E388      3706          lsl.l     #1,D0
08001EB8  41F9 0800 3707          lea       _BreakPointInstruction.L,A0
08001EBC  3E8A      
08001EBE  4270 0800 3708          clr.w     0(A0,D0.L)
                    3709   ; BreakPointSetOrCleared[i] = 0;          // indicates if break point set
08001EC2  2002      3710          move.l    D2,D0
08001EC4  E588      3711          lsl.l     #2,D0
08001EC6  41F9 0800 3712          lea       _BreakPointSetOrCleared.L,A0
08001ECA  3E9A      
08001ECC  42B0 0800 3713          clr.l     0(A0,D0.L)
                    3714   ; WatchPointSetOrCleared[i] = 0;
08001ED0  2002      3715          move.l    D2,D0
08001ED2  E588      3716          lsl.l     #2,D0
08001ED4  41F9 0800 3717          lea       _WatchPointSetOrCleared.L,A0
08001ED8  3EDE      
08001EDA  42B0 0800 3718          clr.l     0(A0,D0.L)
08001EDE  5282      3719          addq.l    #1,D2
08001EE0  60AC      3720          bra       main_1
                    3721   main_3:
                    3722   ; }
                    3723   ; Init_RS232() ;     // initialise the RS232 port
08001EE2  4EB9 0800 3724          jsr       _Init_RS232
08001EE6  023A      
                    3725   ; Init_LCD() ;
08001EE8  4EB9 0800 3726          jsr       _Init_LCD
08001EEC  006C      
                    3727   ; for( i = 32; i < 48; i++)
08001EEE  7420      3728          moveq     #32,D2
                    3729   main_4:
08001EF0  0C82 0000 3730          cmp.l     #48,D2
08001EF4  0030      
08001EF6  6C10      3731          bge.s     main_6
                    3732   ; InstallExceptionHandler(UnhandledTrap, i) ;		        // install Trap exception handler on vector 32-47
08001EF8  2F02      3733          move.l    D2,-(A7)
08001EFA  4879 0800 3734          pea       _UnhandledTrap.L
08001EFE  1C76      
08001F00  4E92      3735          jsr       (A2)
08001F02  504F      3736          addq.w    #8,A7
08001F04  5282      3737          addq.l    #1,D2
08001F06  60E8      3738          bra       main_4
                    3739   main_6:
                    3740   ; InstallExceptionHandler(menu, 47) ;		                   // TRAP #15 call debug and end program
08001F08  4878 002F 3741          pea       47
08001F0C  4879 0800 3742          pea       _menu.L
08001F10  190E      
08001F12  4E92      3743          jsr       (A2)
08001F14  504F      3744          addq.w    #8,A7
                    3745   ; InstallExceptionHandler(UnhandledIRQ1, 25) ;		      // install handler for interrupts
08001F16  4878 0019 3746          pea       25
08001F1A  4879 0800 3747          pea       _UnhandledIRQ1.L
08001F1E  1C0C      
08001F20  4E92      3748          jsr       (A2)
08001F22  504F      3749          addq.w    #8,A7
                    3750   ; InstallExceptionHandler(UnhandledIRQ2, 26) ;		      // install handler for interrupts
08001F24  4878 001A 3751          pea       26
08001F28  4879 0800 3752          pea       _UnhandledIRQ2.L
08001F2C  1C1A      
08001F2E  4E92      3753          jsr       (A2)
08001F30  504F      3754          addq.w    #8,A7
                    3755   ; InstallExceptionHandler(UnhandledIRQ3, 27) ;		      // install handler for interrupts
08001F32  4878 001B 3756          pea       27
08001F36  4879 0800 3757          pea       _UnhandledIRQ3.L
08001F3A  1C28      
08001F3C  4E92      3758          jsr       (A2)
08001F3E  504F      3759          addq.w    #8,A7
                    3760   ; InstallExceptionHandler(UnhandledIRQ4, 28) ;		      // install handler for interrupts
08001F40  4878 001C 3761          pea       28
08001F44  4879 0800 3762          pea       _UnhandledIRQ4.L
08001F48  1C36      
08001F4A  4E92      3763          jsr       (A2)
08001F4C  504F      3764          addq.w    #8,A7
                    3765   ; InstallExceptionHandler(UnhandledIRQ5, 29) ;		      // install handler for interrupts
08001F4E  4878 001D 3766          pea       29
08001F52  4879 0800 3767          pea       _UnhandledIRQ5.L
08001F56  1C44      
08001F58  4E92      3768          jsr       (A2)
08001F5A  504F      3769          addq.w    #8,A7
                    3770   ; InstallExceptionHandler(UnhandledIRQ6, 30) ;		      // install handler for interrupts
08001F5C  4878 001E 3771          pea       30
08001F60  4879 0800 3772          pea       _UnhandledIRQ6.L
08001F64  1C52      
08001F66  4E92      3773          jsr       (A2)
08001F68  504F      3774          addq.w    #8,A7
                    3775   ; InstallExceptionHandler(UnhandledIRQ7, 31) ;		      // install handler for interrupts
08001F6A  4878 001F 3776          pea       31
08001F6E  4879 0800 3777          pea       _UnhandledIRQ7.L
08001F72  1C68      
08001F74  4E92      3778          jsr       (A2)
08001F76  504F      3779          addq.w    #8,A7
                    3780   ; InstallExceptionHandler(HandleBreakPoint, 46) ;		           // install Trap 14 Break Point exception handler on vector 46
08001F78  4878 002E 3781          pea       46
08001F7C  4879 0800 3782          pea       _HandleBreakPoint.L
08001F80  162C      
08001F82  4E92      3783          jsr       (A2)
08001F84  504F      3784          addq.w    #8,A7
                    3785   ; InstallExceptionHandler(DumpRegistersandPause, 29) ;		   // install TRACE handler for IRQ5 on vector 29
08001F86  4878 001D 3786          pea       29
08001F8A  4879 0800 3787          pea       _DumpRegistersandPause.L
08001F8E  0CEA      
08001F90  4E92      3788          jsr       (A2)
08001F92  504F      3789          addq.w    #8,A7
                    3790   ; InstallExceptionHandler(BusError,2) ;                          // install Bus error handler
08001F94  4878 0002 3791          pea       2
08001F98  4879 0800 3792          pea       _BusError.L
08001F9C  1C86      
08001F9E  4E92      3793          jsr       (A2)
08001FA0  504F      3794          addq.w    #8,A7
                    3795   ; InstallExceptionHandler(AddressError,3) ;                      // install address error handler (doesn't work on soft core 68k implementation)
08001FA2  4878 0003 3796          pea       3
08001FA6  4879 0800 3797          pea       _AddressError.L
08001FAA  1C96      
08001FAC  4E92      3798          jsr       (A2)
08001FAE  504F      3799          addq.w    #8,A7
                    3800   ; InstallExceptionHandler(IllegalInstruction,4) ;                // install illegal instruction exception handler
08001FB0  4878 0004 3801          pea       4
08001FB4  4879 0800 3802          pea       _IllegalInstruction.L
08001FB8  1CA6      
08001FBA  4E92      3803          jsr       (A2)
08001FBC  504F      3804          addq.w    #8,A7
                    3805   ; InstallExceptionHandler(Dividebyzero,5) ;                      // install /0 exception handler
08001FBE  4878 0005 3806          pea       5
08001FC2  4879 0800 3807          pea       _Dividebyzero.L
08001FC6  1CB6      
08001FC8  4E92      3808          jsr       (A2)
08001FCA  504F      3809          addq.w    #8,A7
                    3810   ; InstallExceptionHandler(Check,6) ;                             // install check instruction exception handler
08001FCC  4878 0006 3811          pea       6
08001FD0  4879 0800 3812          pea       _Check.L
08001FD4  1CC6      
08001FD6  4E92      3813          jsr       (A2)
08001FD8  504F      3814          addq.w    #8,A7
                    3815   ; InstallExceptionHandler(Trapv,7) ;                             // install trapv instruction exception handler
08001FDA  4878 0007 3816          pea       7
08001FDE  4879 0800 3817          pea       _Trapv.L
08001FE2  1CD6      
08001FE4  4E92      3818          jsr       (A2)
08001FE6  504F      3819          addq.w    #8,A7
                    3820   ; InstallExceptionHandler(PrivError,8) ;                         // install Priv Violation exception handler
08001FE8  4878 0008 3821          pea       8
08001FEC  4879 0800 3822          pea       _PrivError.L
08001FF0  1CE6      
08001FF2  4E92      3823          jsr       (A2)
08001FF4  504F      3824          addq.w    #8,A7
                    3825   ; InstallExceptionHandler(UnitIRQ,15) ;                          // install uninitialised IRQ exception handler
08001FF6  4878 000F 3826          pea       15
08001FFA  4879 0800 3827          pea       _UnitIRQ.L
08001FFE  1CF6      
08002000  4E92      3828          jsr       (A2)
08002002  504F      3829          addq.w    #8,A7
                    3830   ; InstallExceptionHandler(Check,24) ;                            // install spurious IRQ exception handler
08002004  4878 0018 3831          pea       24
08002008  4879 0800 3832          pea       _Check.L
0800200C  1CC6      
0800200E  4E92      3833          jsr       (A2)
08002010  504F      3834          addq.w    #8,A7
                    3835   ; FlushKeyboard() ;                        // dump unread characters from keyboard
08002012  4EB9 0800 3836          jsr       _FlushKeyboard
08002016  02D0      
                    3837   ; TraceException = 0 ;                     // clear trace exception port to remove any software generated single step/trace
08002018  4239 0040 3838          clr.b     4194314
0800201C  000A      
                    3839   ; // test for auto flash boot and run from Flash by reading switch 9 on DE1-soc board. If set, copy program from flash into Dram and run
                    3840   ; while(((char)(PortB & 0x02)) == (char)(0x02))    {
                    3841   main_7:
0800201E  1039 0040 3842          move.b    4194306,D0
08002022  0002      
08002024  C03C 0002 3843          and.b     #2,D0
08002028  0C00 0002 3844          cmp.b     #2,D0
0800202C  6630      3845          bne.s     main_9
                    3846   ; LoadFromFlashChip();
0800202E  4EB9 0800 3847          jsr       _LoadFromFlashChip
08002032  0826      
                    3848   ; printf("\r\nRunning.....") ;
                    3849          pea       @m68kdebugmain_156.L
********  **** ****  Error: Undefined or illegal symbol
0800203A  4E93      3850          jsr       (A3)
0800203C  584F      3851          addq.w    #4,A7
                    3852   ; Oline1("Running.....") ;
                    3853          pea       @m68kdebugmain_157.L
********  **** ****  Error: Undefined or illegal symbol
08002044  4EB9 0800 3854          jsr       _Oline1
08002048  0122      
0800204A  584F      3855          addq.w    #4,A7
                    3856   ; GoFlag = 1;
0800204C  23FC 0000 3857          move.l    #1,_GoFlag.L
08002050  0001 0800 
08002054  3E18      
                    3858   ; go() ;
                    3859          jsr       _go
********  **** ****  Error: Undefined or illegal symbol
0800205C  60C0      3860          bra       main_7
                    3861   main_9:
                    3862   ; }
                    3863   ; // otherwise start the debug monitor
                    3864   ; Oline0(BugMessage) ;
0800205E  2F03      3865          move.l    D3,-(A7)
08002060  4EB9 0800 3866          jsr       _Oline0
08002064  00EC      
08002066  584F      3867          addq.w    #4,A7
                    3868   ; Oline1("By: PJ Davies") ;
                    3869          pea       @m68kdebugmain_158.L
********  **** ****  Error: Undefined or illegal symbol
0800206E  4EB9 0800 3870          jsr       _Oline1
08002072  0122      
08002074  584F      3871          addq.w    #4,A7
                    3872   ; printf("\r\n%s", BugMessage) ;
08002076  2F03      3873          move.l    D3,-(A7)
                    3874          pea       @m68kdebugmain_159.L
********  **** ****  Error: Undefined or illegal symbol
0800207E  4E93      3875          jsr       (A3)
08002080  504F      3876          addq.w    #8,A7
                    3877   ; printf("\r\n%s", CopyrightMessage) ;
08002082  2F2E FFFC 3878          move.l    -4(A6),-(A7)
                    3879          pea       @m68kdebugmain_160.L
********  **** ****  Error: Undefined or illegal symbol
0800208C  4E93      3880          jsr       (A3)
0800208E  504F      3881          addq.w    #8,A7
                    3882   ; menu();
08002090  4EB9 0800 3883          jsr       _menu
08002094  190E      
08002096  4CDF 0C0C 3884          movem.l   (A7)+,D2/D3/A2/A3
0800209A  4E5E      3885          unlk      A6
0800209C  4E75      3886          rts
                    3887   ; }
                    3888   _strcpy:
0800209E  206F 0004 3889          move.l    (4,A7),A0
080020A2  226F 0008 3890          move.l    (8,A7),A1
080020A6  2008      3891          move.l    A0,D0
                    3892   strcpy_1:
080020A8  10D9      3893          move.b    (A1)+,(A0)+
080020AA  66FC      3894          bne.s     strcpy_1
080020AC  4E75      3895          rts
                    3896   ULDIV:
080020AE  4E56 0000 3897          link    A6,#0
080020B2  48E7 C000 3898          movem.l D0/D1,-(A7)
080020B6  222E 0008 3899          move.l  8(A6),D1
080020BA  202E 000C 3900          move.l  12(A6),D0
080020BE  6036      3901          bra.s   ldiv_3
                    3902   LDIV:
080020C0  4E56 0000 3903          link    A6,#0
080020C4  48E7 C000 3904          movem.l D0/D1,-(A7)
080020C8  222E 0008 3905          move.l  8(A6),D1
080020CC  202E 000C 3906          move.l  12(A6),D0
080020D0  4A80      3907          tst.l   D0
080020D2  6A0E      3908          bpl.s   ldiv_1
080020D4  4480      3909          neg.l   D0
080020D6  4A81      3910          tst.l   D1
080020D8  6A14      3911          bpl.s   ldiv_2
080020DA  4481      3912          neg.l   D1
080020DC  612A      3913          bsr.s   dodiv
080020DE  4481      3914          neg.l   D1
080020E0  6016      3915          bra.s   ldiv_4
                    3916   ldiv_1:
080020E2  4A81      3917          tst.l   D1
080020E4  6A10      3918          bpl.s   ldiv_3
080020E6  4481      3919          neg.l   D1
080020E8  611E      3920          bsr.s   dodiv
080020EA  4480      3921          neg.l   D0
080020EC  600A      3922          bra.s   ldiv_4
                    3923   ldiv_2:
080020EE  6118      3924          bsr.s   dodiv
080020F0  4480      3925          neg.l   D0
080020F2  4481      3926          neg.l   D1
080020F4  6002      3927          bra.s   ldiv_4
                    3928   ldiv_3:
080020F6  6110      3929          bsr.s   dodiv
                    3930   ldiv_4:
080020F8  2D40 0008 3931          move.l  D0,8(A6)
080020FC  2D41 000C 3932          move.l  D1,12(A6)
08002100  4CDF 0003 3933          movem.l (A7)+,D0/D1
08002104  4E5E      3934          unlk    A6
08002106  4E75      3935          rts
                    3936   dodiv:
08002108  0C81 0000 3937          cmpi.l  #$FFFF,D1
0800210C  FFFF      
0800210E  6236      3938          bhi.s   dodiv_2
08002110  0C80 0000 3939          cmpi.l  #$FFFF,D0
08002114  FFFF      
08002116  6210      3940          bhi.s   dodiv_1
08002118  80C1      3941          divu    D1,D0
0800211A  2200      3942          move.l  D0,D1
0800211C  4241      3943          clr.w   D1
0800211E  4841      3944          swap    D1
08002120  0280 0000 3945          andi.l  #$FFFF,D0
08002124  FFFF      
08002126  4E75      3946          rts
                    3947   dodiv_1:
08002128  48A7 A000 3948          movem.w D0/D2,-(A7)
0800212C  4240      3949          clr.w   D0
0800212E  4840      3950          swap    D0
08002130  80C1      3951          divu    D1,D0
08002132  3400      3952          move.w  D0,D2
08002134  301F      3953          move.w  (A7)+,D0
08002136  80C1      3954          divu    D1,D0
08002138  4840      3955          swap    D0
0800213A  4281      3956          clr.l   D1
0800213C  3200      3957          move.w  D0,D1
0800213E  3002      3958          move.w  D2,D0
08002140  4840      3959          swap    D0
08002142  341F      3960          move.w  (A7)+,D2
08002144  4E75      3961          rts
                    3962   dodiv_2:
08002146  48E7 3800 3963          movem.l D2/D3/D4,-(A7)
0800214A  2401      3964          move.l  D1,D2
0800214C  4242      3965          clr.w   D2
0800214E  4842      3966          swap    D2
08002150  5282      3967          addq.l  #1,D2
08002152  2600      3968          move.l  D0,D3
08002154  2801      3969          move.l  D1,D4
08002156  2202      3970          move.l  D2,D1
08002158  61CE      3971          bsr.s   dodiv_1
0800215A  2204      3972          move.l  D4,D1
0800215C  82C2      3973          divu    D2,D1
0800215E  80C1      3974          divu    D1,D0
08002160  0280 0000 3975          andi.l  #$FFFF,D0
08002164  FFFF      
                    3976   dodiv_3:
08002166  2204      3977          move.l  D4,D1
08002168  2404      3978          move.l  D4,D2
0800216A  4842      3979          swap    D2
0800216C  C2C0      3980          mulu    D0,D1
0800216E  C4C0      3981          mulu    D0,D2
08002170  4842      3982          swap    D2
08002172  D282      3983          add.l   D2,D1
08002174  9283      3984          sub.l   D3,D1
08002176  620A      3985          bhi.s   dodiv_4
08002178  4481      3986          neg.l   D1
0800217A  B881      3987          cmp.l   D1,D4
0800217C  6208      3988          bhi.s   dodiv_5
0800217E  5280      3989          addq.l  #1,D0
08002180  60E4      3990          bra.s   dodiv_3
                    3991   dodiv_4:
08002182  5380      3992          subq.l  #1,D0
08002184  60E0      3993          bra.s   dodiv_3
                    3994   dodiv_5:
08002186  4CDF 001C 3995          movem.l (A7)+,D2/D3/D4
0800218A  4E75      3996          rts
                    3997   _putch:
0800218C  4E56 0000 3998          link      A6,#0
08002190  2F02      3999          move.l    D2,-(A7)
08002192  242E 0008 4000          move.l    8(A6),D2
08002196  0C82 0000 4001          cmp.l     #10,D2
0800219A  000A      
0800219C  660C      4002          bne.s     putch_1
0800219E  4878 000D 4003          pea       13
080021A2  4EB9 0800 4004          jsr       __putch
080021A6  0264      
080021A8  584F      4005          addq.w    #4,A7
                    4006   putch_1:
080021AA  2F02      4007          move.l    D2,-(A7)
080021AC  4EB9 0800 4008          jsr       __putch
080021B0  0264      
080021B2  584F      4009          addq.w    #4,A7
080021B4  2002      4010          move.l    D2,D0
080021B6  241F      4011          move.l    (A7)+,D2
080021B8  4E5E      4012          unlk      A6
080021BA  4E75      4013          rts
                    4014   _getch:
080021BC  2F02      4015          move.l    D2,-(A7)
080021BE  2439 0800 4016          move.l    __ungetbuf.L,D2
080021C2  3DF4      
080021C4  2039 0800 4017          move.l    __ungetbuf.L,D0
080021C8  3DF4      
080021CA  0C80 FFFF 4018          cmp.l     #-1,D0
080021CE  FFFF      
080021D0  670C      4019          beq.s     getch_1
080021D2  23FC FFFF 4020          move.l    #-1,__ungetbuf.L
080021D6  FFFF 0800 
080021DA  3DF4      
080021DC  6012      4021          bra.s     getch_3
                    4022   getch_1:
080021DE  4EB9 0800 4023          jsr       __getch
080021E2  0290      
080021E4  2400      4024          move.l    D0,D2
080021E6  0C80 0000 4025          cmp.l     #13,D0
080021EA  000D      
080021EC  6602      4026          bne.s     getch_3
080021EE  740A      4027          moveq     #10,D2
                    4028   getch_3:
080021F0  2002      4029          move.l    D2,D0
080021F2  241F      4030          move.l    (A7)+,D2
080021F4  4E75      4031          rts
                    4032   _tolower:
080021F6  202F 0004 4033          move.l    4(A7),D0
080021FA  0C80 0000 4034          cmp.l     #'A',D0
080021FE  0041      
08002200  6D0E      4035          blt.s     tolower_1
08002202  0C80 0000 4036          cmp.l     #'Z',D0
08002206  005A      
08002208  6E06      4037          bgt.s     tolower_1
0800220A  0680 0000 4038          add.l     #$20,D0
0800220E  0020      
                    4039   tolower_1:
08002210  4E75      4040          rts
                    4041   _sprintf:
08002212  4E56 FFFC 4042          link      A6,#-4
08002216  2F02      4043          move.l    D2,-(A7)
08002218  41EE 000C 4044          lea       12(A6),A0
0800221C  5848      4045          addq.w    #4,A0
0800221E  2408      4046          move.l    A0,D2
08002220  2F02      4047          move.l    D2,-(A7)
08002222  2F2E 000C 4048          move.l    12(A6),-(A7)
08002226  2F2E 0008 4049          move.l    8(A6),-(A7)
0800222A  4EB9 0800 4050          jsr       _doprint
0800222E  234E      
08002230  DEFC 000C 4051          add.w     #12,A7
08002234  2D40 FFFC 4052          move.l    D0,-4(A6)
08002238  4282      4053          clr.l     D2
0800223A  202E FFFC 4054          move.l    -4(A6),D0
0800223E  241F      4055          move.l    (A7)+,D2
08002240  4E5E      4056          unlk      A6
08002242  4E75      4057          rts
                    4058   _strcat:
08002244  206F 0004 4059          move.l    (4,A7),A0
08002248  226F 0008 4060          move.l    (8,A7),A1
0800224C  2008      4061          move.l    A0,D0
                    4062   strcat_1:
0800224E  4A18      4063          tst.b     (A0)+
08002250  66FC      4064          bne.s     strcat_1
08002252  5388      4065          subq.l    #1,A0
                    4066   strcat_2:
08002254  10D9      4067          move.b    (A1)+,(A0)+
08002256  66FC      4068          bne.s     strcat_2
08002258  4E75      4069          rts
                    4070   _toupper:
0800225A  202F 0004 4071          move.l    4(A7),D0
0800225E  0C80 0000 4072          cmp.l     #'a',D0
08002262  0061      
08002264  6D0E      4073          blt.s     toupper_1
08002266  0C80 0000 4074          cmp.l     #'z',D0
0800226A  007A      
0800226C  6E06      4075          bgt.s     toupper_1
0800226E  0480 0000 4076          sub.l     #$20,D0
08002272  0020      
                    4077   toupper_1:
08002274  4E75      4078          rts
                    4079   _printf:
08002276  4E56 FFFC 4080          link      A6,#-4
0800227A  2F02      4081          move.l    D2,-(A7)
0800227C  41EE 0008 4082          lea       8(A6),A0
08002280  5848      4083          addq.w    #4,A0
08002282  2408      4084          move.l    A0,D2
08002284  2F02      4085          move.l    D2,-(A7)
08002286  2F2E 0008 4086          move.l    8(A6),-(A7)
0800228A  42A7      4087          clr.l     -(A7)
0800228C  4EB9 0800 4088          jsr       _doprint
08002290  234E      
08002292  DEFC 000C 4089          add.w     #12,A7
08002296  2D40 FFFC 4090          move.l    D0,-4(A6)
0800229A  4282      4091          clr.l     D2
0800229C  202E FFFC 4092          move.l    -4(A6),D0
080022A0  241F      4093          move.l    (A7)+,D2
080022A2  4E5E      4094          unlk      A6
080022A4  4E75      4095          rts
                    4096   @doprint_copy:
080022A6  4E56 0000 4097          link      A6,#0
080022AA  206E 0008 4098          move.l    8(A6),A0
080022AE  4A90      4099          tst.l     (A0)
080022B0  6710      4100          beq.s     @doprint_copy_1
080022B2  202E 000C 4101          move.l    12(A6),D0
080022B6  206E 0008 4102          move.l    8(A6),A0
080022BA  2250      4103          move.l    (A0),A1
080022BC  5290      4104          addq.l    #1,(A0)
080022BE  1280      4105          move.b    D0,(A1)
080022C0  600C      4106          bra.s     @doprint_copy_2
                    4107   @doprint_copy_1:
080022C2  2F2E 000C 4108          move.l    12(A6),-(A7)
080022C6  4EB9 0800 4109          jsr       _putch
080022CA  218C      
080022CC  584F      4110          addq.w    #4,A7
                    4111   @doprint_copy_2:
080022CE  4E5E      4112          unlk      A6
080022D0  4E75      4113          rts
                    4114   @doprint_getval:
080022D2  4E56 0000 4115          link      A6,#0
080022D6  48E7 3000 4116          movem.l   D2/D3,-(A7)
080022DA  262E 0008 4117          move.l    8(A6),D3
080022DE  4282      4118          clr.l     D2
080022E0  2043      4119          move.l    D3,A0
080022E2  2050      4120          move.l    (A0),A0
080022E4  1010      4121          move.b    (A0),D0
080022E6  0C00 002A 4122          cmp.b     #42,D0
080022EA  6612      4123          bne.s     @doprint_getval_1
080022EC  206E 000C 4124          move.l    12(A6),A0
080022F0  2250      4125          move.l    (A0),A1
080022F2  5890      4126          addq.l    #4,(A0)
080022F4  2411      4127          move.l    (A1),D2
080022F6  2043      4128          move.l    D3,A0
080022F8  5290      4129          addq.l    #1,(A0)
080022FA  6000 0048 4130          bra       @doprint_getval_5
                    4131   @doprint_getval_1:
080022FE  7001      4132          moveq     #1,D0
08002300  2043      4133          move.l    D3,A0
08002302  2050      4134          move.l    (A0),A0
08002304  1210      4135          move.b    (A0),D1
08002306  4881      4136          ext.w     D1
08002308  48C1      4137          ext.l     D1
0800230A  D081      4138          add.l     D1,D0
0800230C  41F9 0800 4139          lea       __ctype.L,A0
08002310  3CF2      
08002312  1030 0800 4140          move.b    0(A0,D0.L),D0
08002316  C03C 0004 4141          and.b     #4,D0
0800231A  6728      4142          beq.s     @doprint_getval_5
0800231C  2F02      4143          move.l    D2,-(A7)
0800231E  4878 000A 4144          pea       10
08002322  4EB9 0800 4145          jsr       LMUL
08002326  2B00      
08002328  2017      4146          move.l    (A7),D0
0800232A  504F      4147          addq.w    #8,A7
0800232C  2043      4148          move.l    D3,A0
0800232E  2250      4149          move.l    (A0),A1
08002330  5290      4150          addq.l    #1,(A0)
08002332  1211      4151          move.b    (A1),D1
08002334  4881      4152          ext.w     D1
08002336  48C1      4153          ext.l     D1
08002338  D081      4154          add.l     D1,D0
0800233A  0480 0000 4155          sub.l     #48,D0
0800233E  0030      
08002340  2400      4156          move.l    D0,D2
08002342  60BA      4157          bra       @doprint_getval_1
                    4158   @doprint_getval_5:
08002344  2002      4159          move.l    D2,D0
08002346  4CDF 000C 4160          movem.l   (A7)+,D2/D3
0800234A  4E5E      4161          unlk      A6
0800234C  4E75      4162          rts
                    4163   _doprint:
0800234E  4E56 FFCC 4164          link      A6,#-52
08002352  48E7 3F3C 4165          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08002356  45EE 0008 4166          lea       8(A6),A2
0800235A  47F9 0800 4167          lea       @doprint_copy.L,A3
0800235E  22A6      
08002360  49F9 0800 4168          lea       _ultoa.L,A4
08002364  2A88      
08002366  4286      4169          clr.l     D6
                    4170   doprint_1:
08002368  206E 000C 4171          move.l    12(A6),A0
0800236C  4A10      4172          tst.b     (A0)
0800236E  6700 05F0 4173          beq       doprint_3
08002372  206E 000C 4174          move.l    12(A6),A0
08002376  1010      4175          move.b    (A0),D0
08002378  0C00 0025 4176          cmp.b     #37,D0
0800237C  671C      4177          beq.s     doprint_4
0800237E  206E 000C 4178          move.l    12(A6),A0
08002382  52AE 000C 4179          addq.l    #1,12(A6)
08002386  1210      4180          move.b    (A0),D1
08002388  4881      4181          ext.w     D1
0800238A  48C1      4182          ext.l     D1
0800238C  2F01      4183          move.l    D1,-(A7)
0800238E  2F0A      4184          move.l    A2,-(A7)
08002390  4E93      4185          jsr       (A3)
08002392  504F      4186          addq.w    #8,A7
08002394  5286      4187          addq.l    #1,D6
08002396  6000 05C4 4188          bra       doprint_2
                    4189   doprint_4:
0800239A  52AE 000C 4190          addq.l    #1,12(A6)
0800239E  422E FFD3 4191          clr.b     -45(A6)
080023A2  422E FFD2 4192          clr.b     -46(A6)
080023A6  422E FFD0 4193          clr.b     -48(A6)
080023AA  422E FFCF 4194          clr.b     -49(A6)
080023AE  422E FFCE 4195          clr.b     -50(A6)
080023B2  422E FFCD 4196          clr.b     -51(A6)
080023B6  42AE FFFC 4197          clr.l     -4(A6)
080023BA  7AFF      4198          moveq     #-1,D5
080023BC  41EE FFDC 4199          lea       -36(A6),A0
080023C0  2608      4200          move.l    A0,D3
080023C2  2408      4201          move.l    A0,D2
                    4202   doprint_6:
080023C4  206E 000C 4203          move.l    12(A6),A0
080023C8  1010      4204          move.b    (A0),D0
080023CA  4880      4205          ext.w     D0
080023CC  48C0      4206          ext.l     D0
080023CE  0C80 0000 4207          cmp.l     #43,D0
080023D2  002B      
080023D4  6730      4208          beq.s     doprint_12
080023D6  6E18      4209          bgt.s     doprint_15
080023D8  0C80 0000 4210          cmp.l     #35,D0
080023DC  0023      
080023DE  6700 003E 4211          beq       doprint_14
080023E2  6E00 0046 4212          bgt       doprint_9
080023E6  0C80 0000 4213          cmp.l     #32,D0
080023EA  0020      
080023EC  6724      4214          beq.s     doprint_13
080023EE  603A      4215          bra.s     doprint_9
                    4216   doprint_15:
080023F0  0C80 0000 4217          cmp.l     #45,D0
080023F4  002D      
080023F6  6702      4218          beq.s     doprint_11
080023F8  6030      4219          bra.s     doprint_9
                    4220   doprint_11:
080023FA  1D7C 0001 4221          move.b    #1,-51(A6)
080023FE  FFCD      
08002400  52AE 000C 4222          addq.l    #1,12(A6)
08002404  6026      4223          bra.s     doprint_7
                    4224   doprint_12:
08002406  1D7C 0001 4225          move.b    #1,-50(A6)
0800240A  FFCE      
0800240C  52AE 000C 4226          addq.l    #1,12(A6)
08002410  601A      4227          bra.s     doprint_7
                    4228   doprint_13:
08002412  1D7C 0001 4229          move.b    #1,-49(A6)
08002416  FFCF      
08002418  52AE 000C 4230          addq.l    #1,12(A6)
0800241C  600E      4231          bra.s     doprint_7
                    4232   doprint_14:
0800241E  1D7C 0001 4233          move.b    #1,-48(A6)
08002422  FFD0      
08002424  52AE 000C 4234          addq.l    #1,12(A6)
08002428  6002      4235          bra.s     doprint_7
                    4236   doprint_9:
0800242A  6002      4237          bra.s     doprint_8
                    4238   doprint_7:
0800242C  6096      4239          bra       doprint_6
                    4240   doprint_8:
0800242E  206E 000C 4241          move.l    12(A6),A0
08002432  1010      4242          move.b    (A0),D0
08002434  0C00 0030 4243          cmp.b     #48,D0
08002438  660A      4244          bne.s     doprint_16
0800243A  52AE 000C 4245          addq.l    #1,12(A6)
0800243E  1D7C 0001 4246          move.b    #1,-46(A6)
08002442  FFD2      
                    4247   doprint_16:
08002444  486E 0010 4248          pea       16(A6)
08002448  486E 000C 4249          pea       12(A6)
0800244C  4EB9 0800 4250          jsr       @doprint_getval
08002450  22D2      
08002452  504F      4251          addq.w    #8,A7
08002454  2A40      4252          move.l    D0,A5
08002456  206E 000C 4253          move.l    12(A6),A0
0800245A  1010      4254          move.b    (A0),D0
0800245C  0C00 002E 4255          cmp.b     #46,D0
08002460  6616      4256          bne.s     doprint_18
08002462  52AE 000C 4257          addq.l    #1,12(A6)
08002466  486E 0010 4258          pea       16(A6)
0800246A  486E 000C 4259          pea       12(A6)
0800246E  4EB9 0800 4260          jsr       @doprint_getval
08002472  22D2      
08002474  504F      4261          addq.w    #8,A7
08002476  2A00      4262          move.l    D0,D5
                    4263   doprint_18:
08002478  206E 000C 4264          move.l    12(A6),A0
0800247C  1010      4265          move.b    (A0),D0
0800247E  0C00 006C 4266          cmp.b     #108,D0
08002482  660A      4267          bne.s     doprint_20
08002484  52AE 000C 4268          addq.l    #1,12(A6)
08002488  1D7C 0001 4269          move.b    #1,-45(A6)
0800248C  FFD3      
                    4270   doprint_20:
0800248E  206E 000C 4271          move.l    12(A6),A0
08002492  1010      4272          move.b    (A0),D0
08002494  4880      4273          ext.w     D0
08002496  48C0      4274          ext.l     D0
08002498  0C80 0000 4275          cmp.l     #111,D0
0800249C  006F      
0800249E  6700 00D8 4276          beq       doprint_27
080024A2  6E34      4277          bgt.s     doprint_33
080024A4  0C80 0000 4278          cmp.l     #100,D0
080024A8  0064      
080024AA  6700 0054 4279          beq       doprint_24
080024AE  6E1C      4280          bgt.s     doprint_34
080024B0  0C80 0000 4281          cmp.l     #99,D0
080024B4  0063      
080024B6  6700 0130 4282          beq       doprint_30
080024BA  6E00 0174 4283          bgt       doprint_22
080024BE  0C80 0000 4284          cmp.l     #88,D0
080024C2  0058      
080024C4  6700 00EA 4285          beq       doprint_28
080024C8  6000 0166 4286          bra       doprint_22
                    4287   doprint_34:
080024CC  0C80 0000 4288          cmp.l     #105,D0
080024D0  0069      
080024D2  672C      4289          beq.s     doprint_24
080024D4  6000 015A 4290          bra       doprint_22
                    4291   doprint_33:
080024D8  0C80 0000 4292          cmp.l     #117,D0
080024DC  0075      
080024DE  6700 0060 4293          beq       doprint_26
080024E2  6E0E      4294          bgt.s     doprint_35
080024E4  0C80 0000 4295          cmp.l     #115,D0
080024E8  0073      
080024EA  6700 0124 4296          beq       doprint_31
080024EE  6000 0140 4297          bra       doprint_22
                    4298   doprint_35:
080024F2  0C80 0000 4299          cmp.l     #120,D0
080024F6  0078      
080024F8  6700 00B6 4300          beq       doprint_28
080024FC  6000 0132 4301          bra       doprint_22
                    4302   doprint_24:
08002500  4A2E FFD3 4303          tst.b     -45(A6)
08002504  671C      4304          beq.s     doprint_36
08002506  4878 000A 4305          pea       10
0800250A  2F03      4306          move.l    D3,-(A7)
0800250C  206E 0010 4307          move.l    16(A6),A0
08002510  58AE 0010 4308          addq.l    #4,16(A6)
08002514  2F10      4309          move.l    (A0),-(A7)
08002516  4EB9 0800 4310          jsr       _ltoa
0800251A  2A00      
0800251C  DEFC 000C 4311          add.w     #12,A7
08002520  601A      4312          bra.s     doprint_37
                    4313   doprint_36:
08002522  4878 000A 4314          pea       10
08002526  2F03      4315          move.l    D3,-(A7)
08002528  206E 0010 4316          move.l    16(A6),A0
0800252C  58AE 0010 4317          addq.l    #4,16(A6)
08002530  2F10      4318          move.l    (A0),-(A7)
08002532  4EB9 0800 4319          jsr       _ltoa
08002536  2A00      
08002538  DEFC 000C 4320          add.w     #12,A7
                    4321   doprint_37:
0800253C  6000 0100 4322          bra       doprint_23
                    4323   doprint_26:
08002540  4A2E FFD3 4324          tst.b     -45(A6)
08002544  6718      4325          beq.s     doprint_38
08002546  4878 000A 4326          pea       10
0800254A  2F03      4327          move.l    D3,-(A7)
0800254C  206E 0010 4328          move.l    16(A6),A0
08002550  58AE 0010 4329          addq.l    #4,16(A6)
08002554  2F10      4330          move.l    (A0),-(A7)
08002556  4E94      4331          jsr       (A4)
08002558  DEFC 000C 4332          add.w     #12,A7
0800255C  6016      4333          bra.s     doprint_39
                    4334   doprint_38:
0800255E  4878 000A 4335          pea       10
08002562  2F03      4336          move.l    D3,-(A7)
08002564  206E 0010 4337          move.l    16(A6),A0
08002568  58AE 0010 4338          addq.l    #4,16(A6)
0800256C  2F10      4339          move.l    (A0),-(A7)
0800256E  4E94      4340          jsr       (A4)
08002570  DEFC 000C 4341          add.w     #12,A7
                    4342   doprint_39:
08002574  6000 00C8 4343          bra       doprint_23
                    4344   doprint_27:
08002578  4A2E FFD3 4345          tst.b     -45(A6)
0800257C  6718      4346          beq.s     doprint_40
0800257E  4878 0008 4347          pea       8
08002582  2F03      4348          move.l    D3,-(A7)
08002584  206E 0010 4349          move.l    16(A6),A0
08002588  58AE 0010 4350          addq.l    #4,16(A6)
0800258C  2F10      4351          move.l    (A0),-(A7)
0800258E  4E94      4352          jsr       (A4)
08002590  DEFC 000C 4353          add.w     #12,A7
08002594  6016      4354          bra.s     doprint_41
                    4355   doprint_40:
08002596  4878 0008 4356          pea       8
0800259A  2F03      4357          move.l    D3,-(A7)
0800259C  206E 0010 4358          move.l    16(A6),A0
080025A0  58AE 0010 4359          addq.l    #4,16(A6)
080025A4  2F10      4360          move.l    (A0),-(A7)
080025A6  4E94      4361          jsr       (A4)
080025A8  DEFC 000C 4362          add.w     #12,A7
                    4363   doprint_41:
080025AC  6000 0090 4364          bra       doprint_23
                    4365   doprint_28:
080025B0  4A2E FFD3 4366          tst.b     -45(A6)
080025B4  6718      4367          beq.s     doprint_42
080025B6  4878 0010 4368          pea       16
080025BA  2F03      4369          move.l    D3,-(A7)
080025BC  206E 0010 4370          move.l    16(A6),A0
080025C0  58AE 0010 4371          addq.l    #4,16(A6)
080025C4  2F10      4372          move.l    (A0),-(A7)
080025C6  4E94      4373          jsr       (A4)
080025C8  DEFC 000C 4374          add.w     #12,A7
080025CC  6016      4375          bra.s     doprint_43
                    4376   doprint_42:
080025CE  4878 0010 4377          pea       16
080025D2  2F03      4378          move.l    D3,-(A7)
080025D4  206E 0010 4379          move.l    16(A6),A0
080025D8  58AE 0010 4380          addq.l    #4,16(A6)
080025DC  2F10      4381          move.l    (A0),-(A7)
080025DE  4E94      4382          jsr       (A4)
080025E0  DEFC 000C 4383          add.w     #12,A7
                    4384   doprint_43:
080025E4  6000 0058 4385          bra       doprint_23
                    4386   doprint_30:
080025E8  206E 0010 4387          move.l    16(A6),A0
080025EC  58AE 0010 4388          addq.l    #4,16(A6)
080025F0  2010      4389          move.l    (A0),D0
080025F2  2042      4390          move.l    D2,A0
080025F4  5282      4391          addq.l    #1,D2
080025F6  1080      4392          move.b    D0,(A0)
080025F8  2042      4393          move.l    D2,A0
080025FA  4210      4394          clr.b     (A0)
080025FC  200D      4395          move.l    A5,D0
080025FE  6704      4396          beq.s     doprint_44
08002600  200D      4397          move.l    A5,D0
08002602  6006      4398          bra.s     doprint_45
                    4399   doprint_44:
08002604  7001      4400          moveq     #1,D0
08002606  4880      4401          ext.w     D0
08002608  48C0      4402          ext.l     D0
                    4403   doprint_45:
0800260A  2A00      4404          move.l    D0,D5
0800260C  6000 0030 4405          bra       doprint_23
                    4406   doprint_31:
08002610  206E 0010 4407          move.l    16(A6),A0
08002614  58AE 0010 4408          addq.l    #4,16(A6)
08002618  2610      4409          move.l    (A0),D3
0800261A  0C85 FFFF 4410          cmp.l     #-1,D5
0800261E  FFFF      
08002620  660C      4411          bne.s     doprint_46
08002622  2F03      4412          move.l    D3,-(A7)
08002624  4EB9 0800 4413          jsr       _strlen
08002628  2B8E      
0800262A  584F      4414          addq.w    #4,A7
0800262C  2A00      4415          move.l    D0,D5
                    4416   doprint_46:
0800262E  600E      4417          bra.s     doprint_23
                    4418   doprint_22:
08002630  206E 000C 4419          move.l    12(A6),A0
08002634  2242      4420          move.l    D2,A1
08002636  5282      4421          addq.l    #1,D2
08002638  1290      4422          move.b    (A0),(A1)
0800263A  2042      4423          move.l    D2,A0
0800263C  4210      4424          clr.b     (A0)
                    4425   doprint_23:
0800263E  2F03      4426          move.l    D3,-(A7)
08002640  4EB9 0800 4427          jsr       _strlen
08002644  2B8E      
08002646  584F      4428          addq.w    #4,A7
08002648  1800      4429          move.b    D0,D4
0800264A  206E 000C 4430          move.l    12(A6),A0
0800264E  1010      4431          move.b    (A0),D0
08002650  0C00 0073 4432          cmp.b     #115,D0
08002654  661C      4433          bne.s     doprint_48
08002656  0C85 0000 4434          cmp.l     #0,D5
0800265A  0000      
0800265C  6D14      4435          blt.s     doprint_48
0800265E  4884      4436          ext.w     D4
08002660  48C4      4437          ext.l     D4
08002662  B885      4438          cmp.l     D5,D4
08002664  6F04      4439          ble.s     doprint_50
08002666  2005      4440          move.l    D5,D0
08002668  6006      4441          bra.s     doprint_51
                    4442   doprint_50:
0800266A  1004      4443          move.b    D4,D0
0800266C  4880      4444          ext.w     D0
0800266E  48C0      4445          ext.l     D0
                    4446   doprint_51:
08002670  1800      4447          move.b    D0,D4
                    4448   doprint_48:
08002672  206E 000C 4449          move.l    12(A6),A0
08002676  1010      4450          move.b    (A0),D0
08002678  0C00 0058 4451          cmp.b     #88,D0
0800267C  6600 0028 4452          bne       doprint_56
08002680  41EE FFDC 4453          lea       -36(A6),A0
08002684  2408      4454          move.l    A0,D2
                    4455   doprint_54:
08002686  2042      4456          move.l    D2,A0
08002688  4A10      4457          tst.b     (A0)
0800268A  671A      4458          beq.s     doprint_56
0800268C  2042      4459          move.l    D2,A0
0800268E  1210      4460          move.b    (A0),D1
08002690  4881      4461          ext.w     D1
08002692  48C1      4462          ext.l     D1
08002694  2F01      4463          move.l    D1,-(A7)
08002696  4EB9 0800 4464          jsr       _toupper
0800269A  225A      
0800269C  584F      4465          addq.w    #4,A7
0800269E  2042      4466          move.l    D2,A0
080026A0  1080      4467          move.b    D0,(A0)
080026A2  5282      4468          addq.l    #1,D2
080026A4  60E0      4469          bra       doprint_54
                    4470   doprint_56:
080026A6  7E00      4471          moveq     #0,D7
080026A8  41EE FFD4 4472          lea       -44(A6),A0
080026AC  2408      4473          move.l    A0,D2
080026AE  206E 000C 4474          move.l    12(A6),A0
080026B2  1010      4475          move.b    (A0),D0
080026B4  0C00 0064 4476          cmp.b     #100,D0
080026B8  670E      4477          beq.s     doprint_59
080026BA  206E 000C 4478          move.l    12(A6),A0
080026BE  1010      4479          move.b    (A0),D0
080026C0  0C00 0069 4480          cmp.b     #105,D0
080026C4  6600 0068 4481          bne       doprint_65
                    4482   doprint_59:
080026C8  102E FFCE 4483          move.b    -50(A6),D0
080026CC  4880      4484          ext.w     D0
080026CE  48C0      4485          ext.l     D0
080026D0  4A80      4486          tst.l     D0
080026D2  660C      4487          bne.s     doprint_62
080026D4  2043      4488          move.l    D3,A0
080026D6  1010      4489          move.b    (A0),D0
080026D8  0C00 002D 4490          cmp.b     #45,D0
080026DC  6600 0028 4491          bne       doprint_60
                    4492   doprint_62:
080026E0  2043      4493          move.l    D3,A0
080026E2  1010      4494          move.b    (A0),D0
080026E4  0C00 002D 4495          cmp.b     #45,D0
080026E8  660E      4496          bne.s     doprint_63
080026EA  2043      4497          move.l    D3,A0
080026EC  5283      4498          addq.l    #1,D3
080026EE  2242      4499          move.l    D2,A1
080026F0  5282      4500          addq.l    #1,D2
080026F2  1290      4501          move.b    (A0),(A1)
080026F4  5304      4502          subq.b    #1,D4
080026F6  6008      4503          bra.s     doprint_64
                    4504   doprint_63:
080026F8  2042      4505          move.l    D2,A0
080026FA  5282      4506          addq.l    #1,D2
080026FC  10BC 002B 4507          move.b    #43,(A0)
                    4508   doprint_64:
08002700  5287      4509          addq.l    #1,D7
08002702  6000 002A 4510          bra       doprint_65
                    4511   doprint_60:
08002706  4A2E FFCF 4512          tst.b     -49(A6)
0800270A  6722      4513          beq.s     doprint_65
0800270C  2043      4514          move.l    D3,A0
0800270E  1010      4515          move.b    (A0),D0
08002710  0C00 002D 4516          cmp.b     #45,D0
08002714  660E      4517          bne.s     doprint_67
08002716  2043      4518          move.l    D3,A0
08002718  5283      4519          addq.l    #1,D3
0800271A  2242      4520          move.l    D2,A1
0800271C  5282      4521          addq.l    #1,D2
0800271E  1290      4522          move.b    (A0),(A1)
08002720  5304      4523          subq.b    #1,D4
08002722  6008      4524          bra.s     doprint_68
                    4525   doprint_67:
08002724  2042      4526          move.l    D2,A0
08002726  5282      4527          addq.l    #1,D2
08002728  10BC 0020 4528          move.b    #32,(A0)
                    4529   doprint_68:
0800272C  5287      4530          addq.l    #1,D7
                    4531   doprint_65:
0800272E  4A2E FFD0 4532          tst.b     -48(A6)
08002732  6700 005A 4533          beq       doprint_77
08002736  206E 000C 4534          move.l    12(A6),A0
0800273A  1010      4535          move.b    (A0),D0
0800273C  4880      4536          ext.w     D0
0800273E  48C0      4537          ext.l     D0
08002740  0C80 0000 4538          cmp.l     #111,D0
08002744  006F      
08002746  671A      4539          beq.s     doprint_73
08002748  6E0C      4540          bgt.s     doprint_76
0800274A  0C80 0000 4541          cmp.l     #88,D0
0800274E  0058      
08002750  6710      4542          beq.s     doprint_73
08002752  6000 003A 4543          bra       doprint_77
                    4544   doprint_76:
08002756  0C80 0000 4545          cmp.l     #120,D0
0800275A  0078      
0800275C  6704      4546          beq.s     doprint_73
0800275E  6000 002E 4547          bra       doprint_77
                    4548   doprint_73:
08002762  2042      4549          move.l    D2,A0
08002764  5282      4550          addq.l    #1,D2
08002766  10BC 0030 4551          move.b    #48,(A0)
0800276A  5287      4552          addq.l    #1,D7
0800276C  206E 000C 4553          move.l    12(A6),A0
08002770  1010      4554          move.b    (A0),D0
08002772  0C00 0078 4555          cmp.b     #120,D0
08002776  670C      4556          beq.s     doprint_79
08002778  206E 000C 4557          move.l    12(A6),A0
0800277C  1010      4558          move.b    (A0),D0
0800277E  0C00 0058 4559          cmp.b     #88,D0
08002782  660A      4560          bne.s     doprint_77
                    4561   doprint_79:
08002784  2042      4562          move.l    D2,A0
08002786  5282      4563          addq.l    #1,D2
08002788  10BC 0078 4564          move.b    #120,(A0)
0800278C  5287      4565          addq.l    #1,D7
                    4566   doprint_77:
0800278E  2042      4567          move.l    D2,A0
08002790  4210      4568          clr.b     (A0)
08002792  206E 000C 4569          move.l    12(A6),A0
08002796  1010      4570          move.b    (A0),D0
08002798  4880      4571          ext.w     D0
0800279A  48C0      4572          ext.l     D0
0800279C  0C80 0000 4573          cmp.l     #105,D0
080027A0  0069      
080027A2  6700 0076 4574          beq       doprint_82
080027A6  6E42      4575          bgt.s     doprint_93
080027A8  0C80 0000 4576          cmp.l     #99,D0
080027AC  0063      
080027AE  6700 0084 4577          beq       doprint_96
080027B2  6E1C      4578          bgt.s     doprint_94
080027B4  0C80 0000 4579          cmp.l     #88,D0
080027B8  0058      
080027BA  6700 005E 4580          beq       doprint_82
080027BE  6E00 0184 4581          bgt       doprint_80
080027C2  0C80 0000 4582          cmp.l     #69,D0
080027C6  0045      
080027C8  6700 0050 4583          beq       doprint_82
080027CC  6000 0176 4584          bra       doprint_80
                    4585   doprint_94:
080027D0  0C80 0000 4586          cmp.l     #101,D0
080027D4  0065      
080027D6  6700 0042 4587          beq       doprint_82
080027DA  6E00 0168 4588          bgt       doprint_80
080027DE  0C80 0000 4589          cmp.l     #100,D0
080027E2  0064      
080027E4  6734      4590          beq.s     doprint_82
080027E6  6000 015C 4591          bra       doprint_80
                    4592   doprint_93:
080027EA  0C80 0000 4593          cmp.l     #117,D0
080027EE  0075      
080027F0  6728      4594          beq.s     doprint_82
080027F2  6E1A      4595          bgt.s     doprint_95
080027F4  0C80 0000 4596          cmp.l     #115,D0
080027F8  0073      
080027FA  6700 0038 4597          beq       doprint_96
080027FE  6E00 0144 4598          bgt       doprint_80
08002802  0C80 0000 4599          cmp.l     #111,D0
08002806  006F      
08002808  6710      4600          beq.s     doprint_82
0800280A  6000 0138 4601          bra       doprint_80
                    4602   doprint_95:
0800280E  0C80 0000 4603          cmp.l     #120,D0
08002812  0078      
08002814  6704      4604          beq.s     doprint_82
08002816  6000 012C 4605          bra       doprint_80
                    4606   doprint_82:
0800281A  4A2E FFD2 4607          tst.b     -46(A6)
0800281E  6714      4608          beq.s     doprint_96
08002820  4A2E FFCD 4609          tst.b     -51(A6)
08002824  660E      4610          bne.s     doprint_96
08002826  200D      4611          move.l    A5,D0
08002828  9087      4612          sub.l     D7,D0
0800282A  4884      4613          ext.w     D4
0800282C  48C4      4614          ext.l     D4
0800282E  9084      4615          sub.l     D4,D0
08002830  2D40 FFFC 4616          move.l    D0,-4(A6)
                    4617   doprint_96:
08002834  202E FFFC 4618          move.l    -4(A6),D0
08002838  0C80 0000 4619          cmp.l     #0,D0
0800283C  0000      
0800283E  6C04      4620          bge.s     doprint_98
08002840  42AE FFFC 4621          clr.l     -4(A6)
                    4622   doprint_98:
08002844  4A2E FFCD 4623          tst.b     -51(A6)
08002848  6600 0030 4624          bne       doprint_104
0800284C  1004      4625          move.b    D4,D0
0800284E  4880      4626          ext.w     D0
08002850  48C0      4627          ext.l     D0
08002852  D0AE FFFC 4628          add.l     -4(A6),D0
08002856  D087      4629          add.l     D7,D0
08002858  1D40 FFD1 4630          move.b    D0,-47(A6)
                    4631   doprint_102:
0800285C  102E FFD1 4632          move.b    -47(A6),D0
08002860  4880      4633          ext.w     D0
08002862  48C0      4634          ext.l     D0
08002864  220D      4635          move.l    A5,D1
08002866  534D      4636          subq.w    #1,A5
08002868  B081      4637          cmp.l     D1,D0
0800286A  6C0E      4638          bge.s     doprint_104
0800286C  4878 0020 4639          pea       32
08002870  2F0A      4640          move.l    A2,-(A7)
08002872  4E93      4641          jsr       (A3)
08002874  504F      4642          addq.w    #8,A7
08002876  5286      4643          addq.l    #1,D6
08002878  60E2      4644          bra       doprint_102
                    4645   doprint_104:
0800287A  41EE FFD4 4646          lea       -44(A6),A0
0800287E  2408      4647          move.l    A0,D2
                    4648   doprint_105:
08002880  2042      4649          move.l    D2,A0
08002882  4A10      4650          tst.b     (A0)
08002884  6716      4651          beq.s     doprint_107
08002886  2042      4652          move.l    D2,A0
08002888  5282      4653          addq.l    #1,D2
0800288A  1210      4654          move.b    (A0),D1
0800288C  4881      4655          ext.w     D1
0800288E  48C1      4656          ext.l     D1
08002890  2F01      4657          move.l    D1,-(A7)
08002892  2F0A      4658          move.l    A2,-(A7)
08002894  4E93      4659          jsr       (A3)
08002896  504F      4660          addq.w    #8,A7
08002898  5286      4661          addq.l    #1,D6
0800289A  60E4      4662          bra       doprint_105
                    4663   doprint_107:
0800289C  202E FFFC 4664          move.l    -4(A6),D0
080028A0  1D40 FFD1 4665          move.b    D0,-47(A6)
                    4666   doprint_108:
080028A4  102E FFD1 4667          move.b    -47(A6),D0
080028A8  532E FFD1 4668          subq.b    #1,-47(A6)
080028AC  4A00      4669          tst.b     D0
080028AE  670E      4670          beq.s     doprint_110
080028B0  4878 0030 4671          pea       48
080028B4  2F0A      4672          move.l    A2,-(A7)
080028B6  4E93      4673          jsr       (A3)
080028B8  504F      4674          addq.w    #8,A7
080028BA  5286      4675          addq.l    #1,D6
080028BC  60E6      4676          bra       doprint_108
                    4677   doprint_110:
080028BE  2043      4678          move.l    D3,A0
080028C0  4A10      4679          tst.b     (A0)
080028C2  6700 0048 4680          beq       doprint_113
080028C6  206E 000C 4681          move.l    12(A6),A0
080028CA  1010      4682          move.b    (A0),D0
080028CC  4880      4683          ext.w     D0
080028CE  48C0      4684          ext.l     D0
080028D0  0C80 0000 4685          cmp.l     #115,D0
080028D4  0073      
080028D6  670C      4686          beq.s     doprint_116
080028D8  6E18      4687          bgt.s     doprint_119
080028DA  0C80 0000 4688          cmp.l     #99,D0
080028DE  0063      
080028E0  6702      4689          beq.s     doprint_116
080028E2  600E      4690          bra.s     doprint_119
                    4691   doprint_116:
080028E4  2005      4692          move.l    D5,D0
080028E6  5385      4693          subq.l    #1,D5
080028E8  0C80 0000 4694          cmp.l     #0,D0
080028EC  0000      
080028EE  6E02      4695          bgt.s     doprint_119
080028F0  6016      4696          bra.s     doprint_115
                    4697   doprint_119:
080028F2  2043      4698          move.l    D3,A0
080028F4  5283      4699          addq.l    #1,D3
080028F6  1210      4700          move.b    (A0),D1
080028F8  4881      4701          ext.w     D1
080028FA  48C1      4702          ext.l     D1
080028FC  2F01      4703          move.l    D1,-(A7)
080028FE  2F0A      4704          move.l    A2,-(A7)
08002900  4E93      4705          jsr       (A3)
08002902  504F      4706          addq.w    #8,A7
08002904  5286      4707          addq.l    #1,D6
08002906  6002      4708          bra.s     doprint_112
                    4709   doprint_115:
08002908  6002      4710          bra.s     doprint_113
                    4711   doprint_112:
0800290A  60B2      4712          bra       doprint_110
                    4713   doprint_113:
0800290C  4A2E FFCD 4714          tst.b     -51(A6)
08002910  6700 0030 4715          beq       doprint_125
08002914  1004      4716          move.b    D4,D0
08002916  4880      4717          ext.w     D0
08002918  48C0      4718          ext.l     D0
0800291A  D0AE FFFC 4719          add.l     -4(A6),D0
0800291E  D087      4720          add.l     D7,D0
08002920  1D40 FFD1 4721          move.b    D0,-47(A6)
                    4722   doprint_123:
08002924  102E FFD1 4723          move.b    -47(A6),D0
08002928  4880      4724          ext.w     D0
0800292A  48C0      4725          ext.l     D0
0800292C  220D      4726          move.l    A5,D1
0800292E  534D      4727          subq.w    #1,A5
08002930  B081      4728          cmp.l     D1,D0
08002932  6C0E      4729          bge.s     doprint_125
08002934  4878 0020 4730          pea       32
08002938  2F0A      4731          move.l    A2,-(A7)
0800293A  4E93      4732          jsr       (A3)
0800293C  504F      4733          addq.w    #8,A7
0800293E  5386      4734          subq.l    #1,D6
08002940  60E2      4735          bra       doprint_123
                    4736   doprint_125:
08002942  6014      4737          bra.s     doprint_81
                    4738   doprint_80:
08002944  206E 000C 4739          move.l    12(A6),A0
08002948  1210      4740          move.b    (A0),D1
0800294A  4881      4741          ext.w     D1
0800294C  48C1      4742          ext.l     D1
0800294E  2F01      4743          move.l    D1,-(A7)
08002950  2F0A      4744          move.l    A2,-(A7)
08002952  4E93      4745          jsr       (A3)
08002954  504F      4746          addq.w    #8,A7
08002956  5286      4747          addq.l    #1,D6
                    4748   doprint_81:
08002958  52AE 000C 4749          addq.l    #1,12(A6)
                    4750   doprint_2:
0800295C  6000 FA0A 4751          bra       doprint_1
                    4752   doprint_3:
08002960  4A92      4753          tst.l     (A2)
08002962  6710      4754          beq.s     doprint_126
08002964  4201      4755          clr.b     D1
08002966  C2BC 0000 4756          and.l     #255,D1
0800296A  00FF      
0800296C  2F01      4757          move.l    D1,-(A7)
0800296E  2F0A      4758          move.l    A2,-(A7)
08002970  4E93      4759          jsr       (A3)
08002972  504F      4760          addq.w    #8,A7
                    4761   doprint_126:
08002974  2006      4762          move.l    D6,D0
08002976  4CDF 3CFC 4763          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
0800297A  4E5E      4764          unlk      A6
0800297C  4E75      4765          rts
                    4766   @itoa_convert:
0800297E  4E56 0000 4767          link      A6,#0
08002982  48E7 3C00 4768          movem.l   D2/D3/D4/D5,-(A7)
08002986  242E 0008 4769          move.l    8(A6),D2
0800298A  262E 0010 4770          move.l    16(A6),D3
0800298E  2A2E 000C 4771          move.l    12(A6),D5
08002992  2F05      4772          move.l    D5,-(A7)
08002994  2F03      4773          move.l    D3,-(A7)
08002996  4EB9 0800 4774          jsr       ULDIV
0800299A  20AE      
0800299C  202F 0004 4775          move.l    4(A7),D0
080029A0  504F      4776          addq.w    #8,A7
080029A2  2800      4777          move.l    D0,D4
080029A4  BA83      4778          cmp.l     D3,D5
080029A6  6520      4779          blo.s     @itoa_convert_1
080029A8  2F03      4780          move.l    D3,-(A7)
080029AA  2F05      4781          move.l    D5,-(A7)
080029AC  2F03      4782          move.l    D3,-(A7)
080029AE  4EB9 0800 4783          jsr       ULDIV
080029B2  20AE      
080029B4  2217      4784          move.l    (A7),D1
080029B6  504F      4785          addq.w    #8,A7
080029B8  2F01      4786          move.l    D1,-(A7)
080029BA  2F02      4787          move.l    D2,-(A7)
080029BC  4EB9 0800 4788          jsr       @itoa_convert
080029C0  297E      
080029C2  DEFC 000C 4789          add.w     #12,A7
080029C6  2400      4790          move.l    D0,D2
                    4791   @itoa_convert_1:
080029C8  0C84 0000 4792          cmp.l     #9,D4
080029CC  0009      
080029CE  6E0E      4793          bgt.s     @itoa_convert_3
080029D0  2004      4794          move.l    D4,D0
080029D2  7230      4795          moveq     #48,D1
080029D4  C2BC 0000 4796          and.l     #255,D1
080029D8  00FF      
080029DA  D081      4797          add.l     D1,D0
080029DC  6012      4798          bra.s     @itoa_convert_4
                    4799   @itoa_convert_3:
080029DE  2004      4800          move.l    D4,D0
080029E0  7261      4801          moveq     #97,D1
080029E2  C2BC 0000 4802          and.l     #255,D1
080029E6  00FF      
080029E8  D081      4803          add.l     D1,D0
080029EA  0480 0000 4804          sub.l     #10,D0
080029EE  000A      
                    4805   @itoa_convert_4:
080029F0  2042      4806          move.l    D2,A0
080029F2  1080      4807          move.b    D0,(A0)
080029F4  2002      4808          move.l    D2,D0
080029F6  5280      4809          addq.l    #1,D0
080029F8  4CDF 003C 4810          movem.l   (A7)+,D2/D3/D4/D5
080029FC  4E5E      4811          unlk      A6
080029FE  4E75      4812          rts
                    4813   _ltoa:
08002A00  4E56 0000 4814          link      A6,#0
08002A04  48E7 3C00 4815          movem.l   D2/D3/D4/D5,-(A7)
08002A08  242E 0008 4816          move.l    8(A6),D2
08002A0C  262E 000C 4817          move.l    12(A6),D3
08002A10  2A2E 0010 4818          move.l    16(A6),D5
08002A14  2803      4819          move.l    D3,D4
08002A16  0C85 0000 4820          cmp.l     #2,D5
08002A1A  0002      
08002A1C  6D08      4821          blt.s     ltoa_3
08002A1E  0C85 0000 4822          cmp.l     #36,D5
08002A22  0024      
08002A24  6F06      4823          ble.s     ltoa_1
                    4824   ltoa_3:
08002A26  2003      4825          move.l    D3,D0
08002A28  6000 0056 4826          bra       ltoa_4
                    4827   ltoa_1:
08002A2C  0C85 0000 4828          cmp.l     #10,D5
08002A30  000A      
08002A32  6600 0034 4829          bne       ltoa_5
08002A36  0C82 0000 4830          cmp.l     #0,D2
08002A3A  0000      
08002A3C  6C2A      4831          bge.s     ltoa_5
08002A3E  2002      4832          move.l    D2,D0
08002A40  4480      4833          neg.l     D0
08002A42  2400      4834          move.l    D0,D2
08002A44  0C82 0000 4835          cmp.l     #0,D2
08002A48  0000      
08002A4A  6C14      4836          bge.s     ltoa_7
08002A4C  4879 0800 4837          pea       @itoa_1.L
08002A50  3CE6      
08002A52  2F03      4838          move.l    D3,-(A7)
08002A54  4EB9 0800 4839          jsr       _strcpy
08002A58  209E      
08002A5A  504F      4840          addq.w    #8,A7
08002A5C  2003      4841          move.l    D3,D0
08002A5E  6020      4842          bra.s     ltoa_4
                    4843   ltoa_7:
08002A60  2044      4844          move.l    D4,A0
08002A62  5284      4845          addq.l    #1,D4
08002A64  10BC 002D 4846          move.b    #45,(A0)
                    4847   ltoa_5:
08002A68  2F05      4848          move.l    D5,-(A7)
08002A6A  2F02      4849          move.l    D2,-(A7)
08002A6C  2F04      4850          move.l    D4,-(A7)
08002A6E  4EB9 0800 4851          jsr       @itoa_convert
08002A72  297E      
08002A74  DEFC 000C 4852          add.w     #12,A7
08002A78  2800      4853          move.l    D0,D4
08002A7A  2044      4854          move.l    D4,A0
08002A7C  4210      4855          clr.b     (A0)
08002A7E  2003      4856          move.l    D3,D0
                    4857   ltoa_4:
08002A80  4CDF 003C 4858          movem.l   (A7)+,D2/D3/D4/D5
08002A84  4E5E      4859          unlk      A6
08002A86  4E75      4860          rts
                    4861   _ultoa:
08002A88  4E56 0000 4862          link      A6,#0
08002A8C  48E7 3800 4863          movem.l   D2/D3/D4,-(A7)
08002A90  262E 0010 4864          move.l    16(A6),D3
08002A94  282E 000C 4865          move.l    12(A6),D4
08002A98  2404      4866          move.l    D4,D2
08002A9A  0C83 0000 4867          cmp.l     #2,D3
08002A9E  0002      
08002AA0  6D08      4868          blt.s     ultoa_3
08002AA2  0C83 0000 4869          cmp.l     #36,D3
08002AA6  0024      
08002AA8  6F04      4870          ble.s     ultoa_1
                    4871   ultoa_3:
08002AAA  2004      4872          move.l    D4,D0
08002AAC  601A      4873          bra.s     ultoa_4
                    4874   ultoa_1:
08002AAE  2F03      4875          move.l    D3,-(A7)
08002AB0  2F2E 0008 4876          move.l    8(A6),-(A7)
08002AB4  2F02      4877          move.l    D2,-(A7)
08002AB6  4EB9 0800 4878          jsr       @itoa_convert
08002ABA  297E      
08002ABC  DEFC 000C 4879          add.w     #12,A7
08002AC0  2400      4880          move.l    D0,D2
08002AC2  2042      4881          move.l    D2,A0
08002AC4  4210      4882          clr.b     (A0)
08002AC6  2004      4883          move.l    D4,D0
                    4884   ultoa_4:
08002AC8  4CDF 001C 4885          movem.l   (A7)+,D2/D3/D4
08002ACC  4E5E      4886          unlk      A6
08002ACE  4E75      4887          rts
                    4888   _itoa:
08002AD0  4E56 0000 4889          link      A6,#0
08002AD4  2F2E 0010 4890          move.l    16(A6),-(A7)
08002AD8  2F2E 000C 4891          move.l    12(A6),-(A7)
08002ADC  2F2E 0008 4892          move.l    8(A6),-(A7)
08002AE0  4EB9 0800 4893          jsr       _ltoa
08002AE4  2A00      
08002AE6  DEFC 000C 4894          add.w     #12,A7
08002AEA  4E5E      4895          unlk      A6
08002AEC  4E75      4896          rts
                    4897   ULMUL:
08002AEE  4E56 0000 4898          link    A6,#0
08002AF2  48E7 C000 4899          movem.l D0/D1,-(A7)
08002AF6  222E 0008 4900          move.l  8(A6),D1
08002AFA  202E 000C 4901          move.l  12(A6),D0
08002AFE  602C      4902          bra.s   lmul_3
                    4903   LMUL:
08002B00  4E56 0000 4904          link    A6,#0
08002B04  48E7 C000 4905          movem.l D0/D1,-(A7)
08002B08  222E 0008 4906          move.l  8(A6),D1
08002B0C  202E 000C 4907          move.l  12(A6),D0
08002B10  4A80      4908          tst.l   D0
08002B12  6A0A      4909          bpl.s   lmul_1
08002B14  4480      4910          neg.l   D0
08002B16  4A81      4911          tst.l   D1
08002B18  6A0A      4912          bpl.s   lmul_2
08002B1A  4481      4913          neg.l   D1
08002B1C  600E      4914          bra.s   lmul_3
                    4915   lmul_1:
08002B1E  4A81      4916          tst.l   D1
08002B20  6A0A      4917          bpl.s   lmul_3
08002B22  4481      4918          neg.l   D1
                    4919   lmul_2:
08002B24  6114      4920          bsr.s   domul
08002B26  4481      4921          neg.l   D1
08002B28  4080      4922          negx.l  D0
08002B2A  6002      4923          bra.s   lmul_4
                    4924   lmul_3:
08002B2C  610C      4925          bsr.s   domul
                    4926   lmul_4:
08002B2E  2D41 0008 4927          move.l  D1,8(A6)
08002B32  4CDF 0003 4928          movem.l (A7)+,D0/D1
08002B36  4E5E      4929          unlk    A6
08002B38  4E75      4930          rts
                    4931   domul:
08002B3A  0C81 0000 4932          cmpi.l  #$FFFF,D1
08002B3E  FFFF      
08002B40  620C      4933          bhi.s   domul_1
08002B42  0C80 0000 4934          cmpi.l  #$FFFF,D0
08002B46  FFFF      
08002B48  620E      4935          bhi.s   domul_2
08002B4A  C2C0      4936          mulu    D0,D1
08002B4C  4E75      4937          rts
                    4938   domul_1:
08002B4E  0C80 0000 4939          cmpi.l  #$FFFF,D0
08002B52  FFFF      
08002B54  6218      4940          bhi.s   domul_4
08002B56  6002      4941          bra.s   domul_3
                    4942   domul_2
08002B58  C141      4943          exg     D0,D1
                    4944   domul_3:
08002B5A  2F02      4945          move.l  D2,-(A7)
08002B5C  2401      4946          move.l  D1,D2
08002B5E  4842      4947          swap    D2
08002B60  C2C0      4948          mulu    D0,D1
08002B62  C4C0      4949          mulu    D0,D2
08002B64  4842      4950          swap    D2
08002B66  4242      4951          clr.w   D2
08002B68  D282      4952          add.l   D2,D1
08002B6A  241F      4953          move.l  (A7)+,D2
08002B6C  4E75      4954          rts
                    4955   domul_4:
08002B6E  48E7 3000 4956          movem.l D2/D3,-(A7)
08002B72  2401      4957          move.l  D1,D2
08002B74  2601      4958          move.l  D1,D3
08002B76  C2C0      4959          mulu    D0,D1
08002B78  4842      4960          swap    D2
08002B7A  C4C0      4961          mulu    D0,D2
08002B7C  4840      4962          swap    D0
08002B7E  C6C0      4963          mulu    D0,D3
08002B80  D483      4964          add.l   D3,D2
08002B82  4842      4965          swap    D2
08002B84  4242      4966          clr.w   D2
08002B86  D282      4967          add.l   D2,D1
08002B88  4CDF 000C 4968          movem.l (A7)+,D2/D3
08002B8C  4E75      4969          rts
                    4970   _strlen:
08002B8E  206F 0004 4971          move.l    (4,A7),A0
08002B92  2248      4972          move.l    A0,A1
                    4973   strlen_1:
08002B94  4A19      4974          tst.b     (A1)+
08002B96  66FC      4975          bne       strlen_1
08002B98  2009      4976          move.l    A1,D0
08002B9A  9088      4977          sub.l     A0,D0
08002B9C  5380      4978          subq.l    #1,D0
08002B9E  4E75      4979          rts
                    4980          section   const
08002BA0            4981                   align
                    4982   
                    4983   
                    4984   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_1:
********  **** ****  Error: Syntax error
08002BA0  0D0A 00   4985          dc.b      13,10,0
                    4986   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_2:
********  **** ****  Error: Syntax error
08002BA4  0D53 7769 4987          dc.b      13,83,119,105,116,99,104,101,115,32,83,87,91
08002BA8  7463 6865 
08002BAC  7320 5357 
08002BB0  5B        
08002BB1  372D 305D 4988          dc.b      55,45,48,93,32,61,32,0
08002BB5  203D 2000 
                    4989   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_3:
********  **** ****  Error: Syntax error
08002BBA  3000      4990          dc.b      48,0
                    4991   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_4:
********  **** ****  Error: Syntax error
08002BBC  3100      4992          dc.b      49,0
                    4993   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_5:
********  **** ****  Error: Syntax error
08002BBE  0D0A 4475 4994          dc.b      13,10,68,117,109,112,32,77,101,109,111,114,121
08002BC2  6D70 204D 
08002BC6  656D 6F72 
08002BCA  79        
08002BCB  2042 6C6F 4995          dc.b      32,66,108,111,99,107,58,32,60,69,83,67,62,32
08002BCF  636B 3A20 
08002BD3  3C45 5343 
08002BD7  3E20      
08002BD9  746F 2041 4996          dc.b      116,111,32,65,98,111,114,116,44,32,60,83,80
08002BDD  626F 7274 
08002BE1  2C20 3C53 
08002BE5  50        
08002BE6  4143 453E 4997          dc.b      65,67,69,62,32,116,111,32,67,111,110,116,105
08002BEA  2074 6F20 
08002BEE  436F 6E74 
08002BF2  69        
08002BF3  6E75 6500 4998          dc.b      110,117,101,0
                    4999   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_6:
********  **** ****  Error: Syntax error
08002BF8  0D0A 456E 5000          dc.b      13,10,69,110,116,101,114,32,83,116,97,114,116
08002BFC  7465 7220 
08002C00  5374 6172 
08002C04  74        
08002C05  2041 6464 5001          dc.b      32,65,100,100,114,101,115,115,58,32,0
08002C09  7265 7373 
08002C0D  3A20 00   
                    5002   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_7:
********  **** ****  Error: Syntax error
08002C10  0D0A 2530 5003          dc.b      13,10,37,48,56,120,32,0
08002C14  3878 2000 
                    5004   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_8:
********  **** ****  Error: Syntax error
08002C18  2530 3258 5005          dc.b      37,48,50,88,0
08002C1C  00        
                    5006   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_9:
********  **** ****  Error: Syntax error
08002C1E  2020 00   5007          dc.b      32,32,0
                    5008   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_10:
********  **** ****  Error: Syntax error
08002C22  0D0A 00   5009          dc.b      13,10,0
                    5010   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_11:
********  **** ****  Error: Syntax error
08002C26  0D0A 4669 5011          dc.b      13,10,70,105,108,108,32,77,101,109,111,114,121
08002C2A  6C6C 204D 
08002C2E  656D 6F72 
08002C32  79        
08002C33  2042 6C6F 5012          dc.b      32,66,108,111,99,107,0
08002C37  636B 00   
                    5013   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_12:
********  **** ****  Error: Syntax error
08002C3A  0D0A 456E 5014          dc.b      13,10,69,110,116,101,114,32,83,116,97,114,116
08002C3E  7465 7220 
08002C42  5374 6172 
08002C46  74        
08002C47  2041 6464 5015          dc.b      32,65,100,100,114,101,115,115,58,32,0
08002C4B  7265 7373 
08002C4F  3A20 00   
                    5016   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_13:
********  **** ****  Error: Syntax error
08002C52  0D0A 456E 5017          dc.b      13,10,69,110,116,101,114,32,69,110,100,32,65
08002C56  7465 7220 
08002C5A  456E 6420 
08002C5E  41        
08002C5F  6464 7265 5018          dc.b      100,100,114,101,115,115,58,32,0
08002C63  7373 3A20 
08002C67  00        
                    5019   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_14:
********  **** ****  Error: Syntax error
08002C68  0D0A 456E 5020          dc.b      13,10,69,110,116,101,114,32,70,105,108,108,32
08002C6C  7465 7220 
08002C70  4669 6C6C 
08002C74  20        
08002C75  4461 7461 5021          dc.b      68,97,116,97,58,32,0
08002C79  3A20 00   
                    5022   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_15:
********  **** ****  Error: Syntax error
08002C7C  0D0A 4669 5023          dc.b      13,10,70,105,108,108,105,110,103,32,65,100,100
08002C80  6C6C 696E 
08002C84  6720 4164 
08002C88  64        
08002C89  7265 7373 5024          dc.b      114,101,115,115,101,115,32,91,36,37,48,56,88
08002C8D  6573 205B 
08002C91  2425 3038 
08002C95  58        
08002C96  202D 2024 5025          dc.b      32,45,32,36,37,48,56,88,93,32,119,105,116,104
08002C9A  2530 3858 
08002C9E  5D20 7769 
08002CA2  7468      
08002CA4  2024 2530 5026          dc.b      32,36,37,48,50,88,0
08002CA8  3258 00   
                    5027   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_16:
********  **** ****  Error: Syntax error
08002CAC  0D0A 5573 5028          dc.b      13,10,85,115,101,32,72,121,112,101,114,84,101
08002CB0  6520 4879 
08002CB4  7065 7254 
08002CB8  65        
08002CB9  726D 696E 5029          dc.b      114,109,105,110,97,108,32,116,111,32,83,101
08002CBD  616C 2074 
08002CC1  6F20 5365 
08002CC5  6E64 2054 5030          dc.b      110,100,32,84,101,120,116,32,70,105,108,101
08002CC9  6578 7420 
08002CCD  4669 6C65 
08002CD1  2028 2E68 5031          dc.b      32,40,46,104,101,120,41,13,10,0
08002CD5  6578 290D 
08002CD9  0A00      
                    5032   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_17:
********  **** ****  Error: Syntax error
08002CDC  0D0A 4C6F 5033          dc.b      13,10,76,111,97,100,32,70,97,105,108,101,100
08002CE0  6164 2046 
08002CE4  6169 6C65 
08002CE8  64        
08002CE9  2061 7420 5034          dc.b      32,97,116,32,65,100,100,114,101,115,115,32,61
08002CED  4164 6472 
08002CF1  6573 7320 
08002CF5  3D        
08002CF6  205B 2425 5035          dc.b      32,91,36,37,48,56,88,93,13,10,0
08002CFA  3038 585D 
08002CFE  0D0A 00   
                    5036   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_18:
********  **** ****  Error: Syntax error
08002D02  0D0A 5375 5037          dc.b      13,10,83,117,99,99,101,115,115,58,32,68,111
08002D06  6363 6573 
08002D0A  733A 2044 
08002D0E  6F        
08002D0F  776E 6C6F 5038          dc.b      119,110,108,111,97,100,101,100,32,37,100,32
08002D13  6164 6564 
08002D17  2025 6420 
08002D1B  6279 7465 5039          dc.b      98,121,116,101,115,13,10,0
08002D1F  730D 0A00 
                    5040   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_19:
********  **** ****  Error: Syntax error
08002D24  0D0A 4578 5041          dc.b      13,10,69,120,97,109,105,110,101,32,97,110,100
08002D28  616D 696E 
08002D2C  6520 616E 
08002D30  64        
08002D31  2043 6861 5042          dc.b      32,67,104,97,110,103,101,32,77,101,109,111,114
08002D35  6E67 6520 
08002D39  4D65 6D6F 
08002D3D  72        
08002D3E  7900      5043          dc.b      121,0
                    5044   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_20:
********  **** ****  Error: Syntax error
08002D40  0D0A 3C45 5045          dc.b      13,10,60,69,83,67,62,32,116,111,32,83,116,111
08002D44  5343 3E20 
08002D48  746F 2053 
08002D4C  746F      
08002D4E  702C 203C 5046          dc.b      112,44,32,60,83,80,65,67,69,62,32,116,111,32
08002D52  5350 4143 
08002D56  453E 2074 
08002D5A  6F20      
08002D5C  4164 7661 5047          dc.b      65,100,118,97,110,99,101,44,32,39,45,39,32,116
08002D60  6E63 652C 
08002D64  2027 2D27 
08002D68  2074      
08002D6A  6F20 476F 5048          dc.b      111,32,71,111,32,66,97,99,107,44,32,60,68,65
08002D6E  2042 6163 
08002D72  6B2C 203C 
08002D76  4441      
08002D78  5441 3E20 5049          dc.b      84,65,62,32,116,111,32,99,104,97,110,103,101
08002D7C  746F 2063 
08002D80  6861 6E67 
08002D84  65        
08002D85  00        5050          dc.b      0
                    5051   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_21:
********  **** ****  Error: Syntax error
08002D86  0D0A 456E 5052          dc.b      13,10,69,110,116,101,114,32,65,100,100,114,101
08002D8A  7465 7220 
08002D8E  4164 6472 
08002D92  65        
08002D93  7373 3A20 5053          dc.b      115,115,58,32,0
08002D97  00        
                    5054   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_22:
********  **** ****  Error: Syntax error
08002D98  0D0A 5B25 5055          dc.b      13,10,91,37,48,56,120,93,32,58,32,37,48,50,120
08002D9C  3038 785D 
08002DA0  203A 2025 
08002DA4  3032 78   
08002DA7  2020 00   5056          dc.b      32,32,0
                    5057   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_23:
********  **** ****  Error: Syntax error
08002DAA  0D0A 5761 5058          dc.b      13,10,87,97,114,110,105,110,103,32,67,104,97
08002DAE  726E 696E 
08002DB2  6720 4368 
08002DB6  61        
08002DB7  6E67 6520 5059          dc.b      110,103,101,32,70,97,105,108,101,100,58,32,87
08002DBB  4661 696C 
08002DBF  6564 3A20 
08002DC3  57        
08002DC4  726F 7465 5060          dc.b      114,111,116,101,32,91,37,48,50,120,93,44,32
08002DC8  205B 2530 
08002DCC  3278 5D2C 
08002DD0  20        
08002DD1  5265 6164 5061          dc.b      82,101,97,100,32,91,37,48,50,120,93,0
08002DD5  205B 2530 
08002DD9  3278 5D00 
                    5062   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_24:
********  **** ****  Error: Syntax error
08002DDE  0D0A 4C6F 5063          dc.b      13,10,76,111,97,100,105,110,103,32,80,114,111
08002DE2  6164 696E 
08002DE6  6720 5072 
08002DEA  6F        
08002DEB  6772 616D 5064          dc.b      103,114,97,109,32,70,114,111,109,32,83,80,73
08002DEF  2046 726F 
08002DF3  6D20 5350 
08002DF7  49        
08002DF8  2046 6C61 5065          dc.b      32,70,108,97,115,104,46,46,46,46,0
08002DFC  7368 2E2E 
08002E00  2E2E 00   
                    5066   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_25:
********  **** ****  Error: Syntax error
08002E04  2425 3038 5067          dc.b      36,37,48,56,88,32,32,0
08002E08  5820 2000 
                    5068   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_26:
********  **** ****  Error: Syntax error
08002E0C  2530 3258 5069          dc.b      37,48,50,88,0
08002E10  00        
                    5070   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_27:
********  **** ****  Error: Syntax error
08002E12  2000      5071          dc.b      32,0
                    5072   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_28:
********  **** ****  Error: Syntax error
08002E14  2020 00   5073          dc.b      32,32,0
                    5074   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_29:
********  **** ****  Error: Syntax error
08002E18  2E00      5075          dc.b      46,0
                    5076   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_30:
********  **** ****  Error: Syntax error
08002E1A  2563 00   5077          dc.b      37,99,0
                    5078   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_31:
********  **** ****  Error: Syntax error
08002E1E  00        5079          dc.b      0
                    5080   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_32:
********  **** ****  Error: Syntax error
08002E20  0D0A 0D0A 5081          dc.b      13,10,13,10,32,68,48,32,61,32,36,37,48,56,88
08002E24  2044 3020 
08002E28  3D20 2425 
08002E2C  3038 58   
08002E2F  2020 4130 5082          dc.b      32,32,65,48,32,61,32,36,37,48,56,88,0
08002E33  203D 2024 
08002E37  2530 3858 
08002E3B  00        
                    5083   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_33:
********  **** ****  Error: Syntax error
08002E3C  0D0A 2044 5084          dc.b      13,10,32,68,49,32,61,32,36,37,48,56,88,32,32
08002E40  3120 3D20 
08002E44  2425 3038 
08002E48  5820 20   
08002E4B  4131 203D 5085          dc.b      65,49,32,61,32,36,37,48,56,88,0
08002E4F  2024 2530 
08002E53  3858 00   
                    5086   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_34:
********  **** ****  Error: Syntax error
08002E56  0D0A 2044 5087          dc.b      13,10,32,68,50,32,61,32,36,37,48,56,88,32,32
08002E5A  3220 3D20 
08002E5E  2425 3038 
08002E62  5820 20   
08002E65  4132 203D 5088          dc.b      65,50,32,61,32,36,37,48,56,88,0
08002E69  2024 2530 
08002E6D  3858 00   
                    5089   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_35:
********  **** ****  Error: Syntax error
08002E70  0D0A 2044 5090          dc.b      13,10,32,68,51,32,61,32,36,37,48,56,88,32,32
08002E74  3320 3D20 
08002E78  2425 3038 
08002E7C  5820 20   
08002E7F  4133 203D 5091          dc.b      65,51,32,61,32,36,37,48,56,88,0
08002E83  2024 2530 
08002E87  3858 00   
                    5092   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_36:
********  **** ****  Error: Syntax error
08002E8A  0D0A 2044 5093          dc.b      13,10,32,68,52,32,61,32,36,37,48,56,88,32,32
08002E8E  3420 3D20 
08002E92  2425 3038 
08002E96  5820 20   
08002E99  4134 203D 5094          dc.b      65,52,32,61,32,36,37,48,56,88,0
08002E9D  2024 2530 
08002EA1  3858 00   
                    5095   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_37:
********  **** ****  Error: Syntax error
08002EA4  0D0A 2044 5096          dc.b      13,10,32,68,53,32,61,32,36,37,48,56,88,32,32
08002EA8  3520 3D20 
08002EAC  2425 3038 
08002EB0  5820 20   
08002EB3  4135 203D 5097          dc.b      65,53,32,61,32,36,37,48,56,88,0
08002EB7  2024 2530 
08002EBB  3858 00   
                    5098   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_38:
********  **** ****  Error: Syntax error
08002EBE  0D0A 2044 5099          dc.b      13,10,32,68,54,32,61,32,36,37,48,56,88,32,32
08002EC2  3620 3D20 
08002EC6  2425 3038 
08002ECA  5820 20   
08002ECD  4136 203D 5100          dc.b      65,54,32,61,32,36,37,48,56,88,0
08002ED1  2024 2530 
08002ED5  3858 00   
                    5101   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_39:
********  **** ****  Error: Syntax error
08002ED8  0D0A 2044 5102          dc.b      13,10,32,68,55,32,61,32,36,37,48,56,88,32,32
08002EDC  3720 3D20 
08002EE0  2425 3038 
08002EE4  5820 20   
08002EE7  4137 203D 5103          dc.b      65,55,32,61,32,36,37,48,56,88,0
08002EEB  2024 2530 
08002EEF  3858 00   
                    5104   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_40:
********  **** ****  Error: Syntax error
08002EF2  0D0A 0D0A 5105          dc.b      13,10,13,10,85,83,80,32,61,32,36,37,48,56,88
08002EF6  5553 5020 
08002EFA  3D20 2425 
08002EFE  3038 58   
08002F01  2020 2841 5106          dc.b      32,32,40,65,55,41,32,85,115,101,114,32,83,80
08002F05  3729 2055 
08002F09  7365 7220 
08002F0D  5350      
08002F0F  00        5107          dc.b      0
                    5108   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_41:
********  **** ****  Error: Syntax error
08002F10  0D0A 5353 5109          dc.b      13,10,83,83,80,32,61,32,36,37,48,56,88,32,32
08002F14  5020 3D20 
08002F18  2425 3038 
08002F1C  5820 20   
08002F1F  2841 3729 5110          dc.b      40,65,55,41,32,83,117,112,101,114,118,105,115
08002F23  2053 7570 
08002F27  6572 7669 
08002F2B  73        
08002F2C  6F72 2053 5111          dc.b      111,114,32,83,80,0
08002F30  5000      
                    5112   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_42:
********  **** ****  Error: Syntax error
08002F32  0D0A 2053 5113          dc.b      13,10,32,83,82,32,61,32,36,37,48,52,88,32,32
08002F36  5220 3D20 
08002F3A  2425 3034 
08002F3E  5820 20   
08002F41  2000      5114          dc.b      32,0
                    5115   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_43:
********  **** ****  Error: Syntax error
08002F44  2020 205B 5116          dc.b      32,32,32,91,0
08002F48  00        
                    5117   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_44:
********  **** ****  Error: Syntax error
08002F4A  0D0A 2050 5118          dc.b      13,10,32,80,67,32,61,32,36,37,48,56,88,32,32
08002F4E  4320 3D20 
08002F52  2425 3038 
08002F56  5820 20   
08002F59  00        5119          dc.b      0
                    5120   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_45:
********  **** ****  Error: Syntax error
08002F5A  5B40 2042 5121          dc.b      91,64,32,66,82,69,65,75,80,79,73,78,84,93,0
08002F5E  5245 414B 
08002F62  504F 494E 
08002F66  545D 00   
                    5122   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_46:
********  **** ****  Error: Syntax error
08002F6A  0D0A 00   5123          dc.b      13,10,0
                    5124   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_47:
********  **** ****  Error: Syntax error
08002F6E  0D0A 5750 5125          dc.b      13,10,87,80,37,100,32,61,32,37,115,0
08002F72  2564 203D 
08002F76  2025 7300 
                    5126   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_48:
********  **** ****  Error: Syntax error
08002F7A  0D0A 0D0A 5127          dc.b      13,10,13,10,13,10,13,10,13,10,13,10,83,105,110
08002F7E  0D0A 0D0A 
08002F82  0D0A 0D0A 
08002F86  5369 6E   
08002F89  676C 6520 5128          dc.b      103,108,101,32,83,116,101,112,32,32,58,91,79
08002F8D  5374 6570 
08002F91  2020 3A5B 
08002F95  4F        
08002F96  4E5D 00   5129          dc.b      78,93,0
                    5130   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_49:
********  **** ****  Error: Syntax error
08002F9A  0D0A 4272 5131          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
08002F9E  6561 6B20 
08002FA2  506F 696E 
08002FA6  74        
08002FA7  7320 3A5B 5132          dc.b      115,32,58,91,68,105,115,97,98,108,101,100,93
08002FAB  4469 7361 
08002FAF  626C 6564 
08002FB3  5D        
08002FB4  00        5133          dc.b      0
                    5134   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_50:
********  **** ****  Error: Syntax error
08002FB6  0D0A 5072 5135          dc.b      13,10,80,114,101,115,115,32,60,83,80,65,67,69
08002FBA  6573 7320 
08002FBE  3C53 5041 
08002FC2  4345      
08002FC4  3E20 746F 5136          dc.b      62,32,116,111,32,69,120,101,99,117,116,101,32
08002FC8  2045 7865 
08002FCC  6375 7465 
08002FD0  20        
08002FD1  4E65 7874 5137          dc.b      78,101,120,116,32,73,110,115,116,114,117,99
08002FD5  2049 6E73 
08002FD9  7472 7563 
08002FDD  7469 6F6E 5138          dc.b      116,105,111,110,0
08002FE1  00        
                    5139   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_51:
********  **** ****  Error: Syntax error
08002FE2  0D0A 5072 5140          dc.b      13,10,80,114,101,115,115,32,60,69,83,67,62,32
08002FE6  6573 7320 
08002FEA  3C45 5343 
08002FEE  3E20      
08002FF0  746F 2052 5141          dc.b      116,111,32,82,101,115,117,109,101,32,80,114
08002FF4  6573 756D 
08002FF8  6520 5072 
08002FFC  6F67 7261 5142          dc.b      111,103,114,97,109,0
08003000  6D00      
                    5143   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_52:
********  **** ****  Error: Syntax error
08003002  0D0A 496C 5144          dc.b      13,10,73,108,108,101,103,97,108,32,68,97,116
08003006  6C65 6761 
0800300A  6C20 4461 
0800300E  74        
0800300F  6120 5265 5145          dc.b      97,32,82,101,103,105,115,116,101,114,32,58,32
08003013  6769 7374 
08003017  6572 203A 
0800301B  20        
0800301C  5573 6520 5146          dc.b      85,115,101,32,68,48,45,68,55,46,46,46,46,46
08003020  4430 2D44 
08003024  372E 2E2E 
08003028  2E2E      
0800302A  0D0A 00   5147          dc.b      13,10,0
                    5148   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_53:
********  **** ****  Error: Syntax error
0800302E  0D0A 4425 5149          dc.b      13,10,68,37,99,32,61,32,0
08003032  6320 3D20 
08003036  00        
                    5150   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_54:
********  **** ****  Error: Syntax error
08003038  0D0A 496C 5151          dc.b      13,10,73,108,108,101,103,97,108,32,65,100,100
0800303C  6C65 6761 
08003040  6C20 4164 
08003044  64        
08003045  7265 7373 5152          dc.b      114,101,115,115,32,82,101,103,105,115,116,101
08003049  2052 6567 
0800304D  6973 7465 
08003051  7220 3A20 5153          dc.b      114,32,58,32,85,115,101,32,65,48,45,65,55,46
08003055  5573 6520 
08003059  4130 2D41 
0800305D  372E      
0800305F  2E2E 2E2E 5154          dc.b      46,46,46,46,13,10,0
08003063  0D0A 00   
                    5155   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_55:
********  **** ****  Error: Syntax error
08003066  0D0A 4125 5156          dc.b      13,10,65,37,99,32,61,32,0
0800306A  6320 3D20 
0800306E  00        
                    5157   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_56:
********  **** ****  Error: Syntax error
08003070  0D0A 5573 5158          dc.b      13,10,85,115,101,114,32,83,80,32,61,32,0
08003074  6572 2053 
08003078  5020 3D20 
0800307C  00        
                    5159   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_57:
********  **** ****  Error: Syntax error
0800307E  0D0A 496C 5160          dc.b      13,10,73,108,108,101,103,97,108,32,82,101,103
08003082  6C65 6761 
08003086  6C20 5265 
0800308A  67        
0800308B  6973 7465 5161          dc.b      105,115,116,101,114,46,46,46,46,0
0800308F  722E 2E2E 
08003093  2E00      
                    5162   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_58:
********  **** ****  Error: Syntax error
08003096  0D0A 5379 5163          dc.b      13,10,83,121,115,116,101,109,32,83,80,32,61
0800309A  7374 656D 
0800309E  2053 5020 
080030A2  3D        
080030A3  2000      5164          dc.b      32,0
                    5165   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_59:
********  **** ****  Error: Syntax error
080030A6  0D0A 496C 5166          dc.b      13,10,73,108,108,101,103,97,108,32,82,101,103
080030AA  6C65 6761 
080030AE  6C20 5265 
080030B2  67        
080030B3  6973 7465 5167          dc.b      105,115,116,101,114,46,46,46,46,0
080030B7  722E 2E2E 
080030BB  2E00      
                    5168   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_60:
********  **** ****  Error: Syntax error
080030BE  0D0A 5043 5169          dc.b      13,10,80,67,32,61,32,0
080030C2  203D 2000 
                    5170   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_61:
********  **** ****  Error: Syntax error
080030C6  0D0A 5352 5171          dc.b      13,10,83,82,32,61,32,0
080030CA  203D 2000 
                    5172   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_62:
********  **** ****  Error: Syntax error
080030CE  0D0A 496C 5173          dc.b      13,10,73,108,108,101,103,97,108,32,82,101,103
080030D2  6C65 6761 
080030D6  6C20 5265 
080030DA  67        
080030DB  6973 7465 5174          dc.b      105,115,116,101,114,58,32,85,115,101,32,65,48
080030DF  723A 2055 
080030E3  7365 2041 
080030E7  30        
080030E8  2D41 372C 5175          dc.b      45,65,55,44,32,68,48,45,68,55,44,32,83,83,80
080030EC  2044 302D 
080030F0  4437 2C20 
080030F4  5353 50   
080030F7  2C20 5553 5176          dc.b      44,32,85,83,80,44,32,80,67,32,111,114,32,83
080030FB  502C 2050 
080030FF  4320 6F72 
08003103  2053      
08003105  520D 0A00 5177          dc.b      82,13,10,0
                    5178   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_63:
********  **** ****  Error: Syntax error
0800310A  0D0A 0D0A 5179          dc.b      13,10,13,10,78,117,109,32,32,32,32,32,65,100
0800310E  4E75 6D20 
08003112  2020 2020 
08003116  4164      
08003118  6472 6573 5180          dc.b      100,114,101,115,115,32,32,32,32,32,32,73,110
0800311C  7320 2020 
08003120  2020 2049 
08003124  6E        
08003125  7374 7275 5181          dc.b      115,116,114,117,99,116,105,111,110,0
08003129  6374 696F 
0800312D  6E00      
                    5182   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_64:
********  **** ****  Error: Syntax error
08003130  0D0A 2D2D 5183          dc.b      13,10,45,45,45,32,32,32,32,32,45,45,45,45,45
08003134  2D20 2020 
08003138  2020 2D2D 
0800313C  2D2D 2D   
0800313F  2D2D 2D2D 5184          dc.b      45,45,45,45,32,32,32,32,45,45,45,45,45,45,45
08003143  2020 2020 
08003147  2D2D 2D2D 
0800314B  2D2D 2D   
0800314E  2D2D 2D2D 5185          dc.b      45,45,45,45,0
08003152  00        
                    5186   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_65:
********  **** ****  Error: Syntax error
08003154  0D0A 4E6F 5187          dc.b      13,10,78,111,32,66,114,101,97,107,80,111,105
08003158  2042 7265 
0800315C  616B 506F 
08003160  69        
08003161  6E74 7320 5188          dc.b      110,116,115,32,83,101,116,0
08003165  5365 7400 
                    5189   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_66:
********  **** ****  Error: Syntax error
0800316A  0D0A 2533 5190          dc.b      13,10,37,51,100,32,32,32,32,32,36,37,48,56,120
0800316E  6420 2020 
08003172  2020 2425 
08003176  3038 78   
08003179  00        5191          dc.b      0
                    5192   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_67:
********  **** ****  Error: Syntax error
0800317A  0D0A 00   5193          dc.b      13,10,0
                    5194   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_68:
********  **** ****  Error: Syntax error
0800317E  0D0A 4E75 5195          dc.b      13,10,78,117,109,32,32,32,32,32,65,100,100,114
08003182  6D20 2020 
08003186  2020 4164 
0800318A  6472      
0800318C  6573 7300 5196          dc.b      101,115,115,0
                    5197   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_69:
********  **** ****  Error: Syntax error
08003190  0D0A 2D2D 5198          dc.b      13,10,45,45,45,32,32,32,32,32,45,45,45,45,45
08003194  2D20 2020 
08003198  2020 2D2D 
0800319C  2D2D 2D   
0800319F  2D2D 2D2D 5199          dc.b      45,45,45,45,0
080031A3  00        
                    5200   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_70:
********  **** ****  Error: Syntax error
080031A4  0D0A 4E6F 5201          dc.b      13,10,78,111,32,87,97,116,99,104,80,111,105
080031A8  2057 6174 
080031AC  6368 506F 
080031B0  69        
080031B1  6E74 7320 5202          dc.b      110,116,115,32,83,101,116,0
080031B5  5365 7400 
                    5203   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_71:
********  **** ****  Error: Syntax error
080031BA  0D0A 2533 5204          dc.b      13,10,37,51,100,32,32,32,32,32,36,37,48,56,120
080031BE  6420 2020 
080031C2  2020 2425 
080031C6  3038 78   
080031C9  00        5205          dc.b      0
                    5206   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_72:
********  **** ****  Error: Syntax error
080031CA  0D0A 00   5207          dc.b      13,10,0
                    5208   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_73:
********  **** ****  Error: Syntax error
080031CE  0D0A 456E 5209          dc.b      13,10,69,110,116,101,114,32,66,114,101,97,107
080031D2  7465 7220 
080031D6  4272 6561 
080031DA  6B        
080031DB  2050 6F69 5210          dc.b      32,80,111,105,110,116,32,78,117,109,98,101,114
080031DF  6E74 204E 
080031E3  756D 6265 
080031E7  72        
080031E8  3A20 00   5211          dc.b      58,32,0
                    5212   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_74:
********  **** ****  Error: Syntax error
080031EC  0D0A 496C 5213          dc.b      13,10,73,108,108,101,103,97,108,32,82,97,110
080031F0  6C65 6761 
080031F4  6C20 5261 
080031F8  6E        
080031F9  6765 203A 5214          dc.b      103,101,32,58,32,85,115,101,32,48,32,45,32,55
080031FD  2055 7365 
08003201  2030 202D 
08003205  2037      
08003207  00        5215          dc.b      0
                    5216   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_75:
********  **** ****  Error: Syntax error
08003208  0D0A 4272 5217          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
0800320C  6561 6B20 
08003210  506F 696E 
08003214  74        
08003215  2043 6C65 5218          dc.b      32,67,108,101,97,114,101,100,46,46,46,46,46
08003219  6172 6564 
0800321D  2E2E 2E2E 
08003221  2E        
08003222  0D0A 00   5219          dc.b      13,10,0
                    5220   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_76:
********  **** ****  Error: Syntax error
08003226  0D0A 4272 5221          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
0800322A  6561 6B20 
0800322E  506F 696E 
08003232  74        
08003233  2077 6173 5222          dc.b      32,119,97,115,110,39,116,32,83,101,116,46,46
08003237  6E27 7420 
0800323B  5365 742E 
0800323F  2E        
08003240  2E2E 2E00 5223          dc.b      46,46,46,0
                    5224   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_77:
********  **** ****  Error: Syntax error
08003244  0D0A 456E 5225          dc.b      13,10,69,110,116,101,114,32,87,97,116,99,104
08003248  7465 7220 
0800324C  5761 7463 
08003250  68        
08003251  2050 6F69 5226          dc.b      32,80,111,105,110,116,32,78,117,109,98,101,114
08003255  6E74 204E 
08003259  756D 6265 
0800325D  72        
0800325E  3A20 00   5227          dc.b      58,32,0
                    5228   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_78:
********  **** ****  Error: Syntax error
08003262  0D0A 496C 5229          dc.b      13,10,73,108,108,101,103,97,108,32,82,97,110
08003266  6C65 6761 
0800326A  6C20 5261 
0800326E  6E        
0800326F  6765 203A 5230          dc.b      103,101,32,58,32,85,115,101,32,48,32,45,32,55
08003273  2055 7365 
08003277  2030 202D 
0800327B  2037      
0800327D  00        5231          dc.b      0
                    5232   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_79:
********  **** ****  Error: Syntax error
0800327E  0D0A 5761 5233          dc.b      13,10,87,97,116,99,104,32,80,111,105,110,116
08003282  7463 6820 
08003286  506F 696E 
0800328A  74        
0800328B  2043 6C65 5234          dc.b      32,67,108,101,97,114,101,100,46,46,46,46,46
0800328F  6172 6564 
08003293  2E2E 2E2E 
08003297  2E        
08003298  0D0A 00   5235          dc.b      13,10,0
                    5236   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_80:
********  **** ****  Error: Syntax error
0800329C  0D0A 5761 5237          dc.b      13,10,87,97,116,99,104,32,80,111,105,110,116
080032A0  7463 6820 
080032A4  506F 696E 
080032A8  74        
080032A9  2057 6173 5238          dc.b      32,87,97,115,32,110,111,116,32,83,101,116,46
080032AD  206E 6F74 
080032B1  2053 6574 
080032B5  2E        
080032B6  2E2E 2E2E 5239          dc.b      46,46,46,46,0
080032BA  00        
                    5240   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_81:
********  **** ****  Error: Syntax error
080032BC  0D0A 4E6F 5241          dc.b      13,10,78,111,32,70,82,69,69,32,66,114,101,97
080032C0  2046 5245 
080032C4  4520 4272 
080032C8  6561      
080032CA  6B20 506F 5242          dc.b      107,32,80,111,105,110,116,115,46,46,46,46,46
080032CE  696E 7473 
080032D2  2E2E 2E2E 
080032D6  2E        
080032D7  00        5243          dc.b      0
                    5244   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_82:
********  **** ****  Error: Syntax error
080032D8  0D0A 4272 5245          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
080032DC  6561 6B20 
080032E0  506F 696E 
080032E4  74        
080032E5  2041 6464 5246          dc.b      32,65,100,100,114,101,115,115,58,32,0
080032E9  7265 7373 
080032ED  3A20 00   
                    5247   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_83:
********  **** ****  Error: Syntax error
080032F0  0D0A 4572 5248          dc.b      13,10,69,114,114,111,114,32,58,32,66,114,101
080032F4  726F 7220 
080032F8  3A20 4272 
080032FC  65        
080032FD  616B 2050 5249          dc.b      97,107,32,80,111,105,110,116,115,32,67,65,78
08003301  6F69 6E74 
08003305  7320 4341 
08003309  4E        
0800330A  4E4F 5420 5250          dc.b      78,79,84,32,98,101,32,115,101,116,32,97,116
0800330E  6265 2073 
08003312  6574 2061 
08003316  74        
08003317  204F 4444 5251          dc.b      32,79,68,68,32,97,100,100,114,101,115,115,101
0800331B  2061 6464 
0800331F  7265 7373 
08003323  65        
08003324  7300      5252          dc.b      115,0
                    5253   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_84:
********  **** ****  Error: Syntax error
08003326  0D0A 4572 5254          dc.b      13,10,69,114,114,111,114,32,58,32,66,114,101
0800332A  726F 7220 
0800332E  3A20 4272 
08003332  65        
08003333  616B 2050 5255          dc.b      97,107,32,80,111,105,110,116,115,32,67,65,78
08003337  6F69 6E74 
0800333B  7320 4341 
0800333F  4E        
08003340  4E4F 5420 5256          dc.b      78,79,84,32,98,101,32,115,101,116,32,102,111
08003344  6265 2073 
08003348  6574 2066 
0800334C  6F        
0800334D  7220 524F 5257          dc.b      114,32,82,79,77,32,105,110,32,82,97,110,103
08003351  4D20 696E 
08003355  2052 616E 
08003359  67        
0800335A  6520 3A20 5258          dc.b      101,32,58,32,91,36,48,45,36,48,48,48,48,55,70
0800335E  5B24 302D 
08003362  2430 3030 
08003366  3037 46   
08003369  4646 5D00 5259          dc.b      70,70,93,0
                    5260   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_85:
********  **** ****  Error: Syntax error
0800336E  0D0A 4572 5261          dc.b      13,10,69,114,114,111,114,58,32,66,114,101,97
08003372  726F 723A 
08003376  2042 7265 
0800337A  61        
0800337B  6B20 506F 5262          dc.b      107,32,80,111,105,110,116,32,65,108,114,101
0800337F  696E 7420 
08003383  416C 7265 
08003387  6164 7920 5263          dc.b      97,100,121,32,69,120,105,115,116,115,32,97,116
0800338B  4578 6973 
0800338F  7473 2061 
08003393  74        
08003394  2041 6464 5264          dc.b      32,65,100,100,114,101,115,115,32,58,32,37,48
08003398  7265 7373 
0800339C  203A 2025 
080033A0  30        
080033A1  3878 0D0A 5265          dc.b      56,120,13,10,0
080033A5  00        
                    5266   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_86:
********  **** ****  Error: Syntax error
080033A6  0D0A 4272 5267          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
080033AA  6561 6B20 
080033AE  506F 696E 
080033B2  74        
080033B3  2053 6574 5268          dc.b      32,83,101,116,32,97,116,32,65,100,100,114,101
080033B7  2061 7420 
080033BB  4164 6472 
080033BF  65        
080033C0  7373 3A20 5269          dc.b      115,115,58,32,91,36,37,48,56,120,93,0
080033C4  5B24 2530 
080033C8  3878 5D00 
                    5270   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_87:
********  **** ****  Error: Syntax error
080033CC  0D0A 00   5271          dc.b      13,10,0
                    5272   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_88:
********  **** ****  Error: Syntax error
080033D0  0D0A 4E6F 5273          dc.b      13,10,78,111,32,70,82,69,69,32,87,97,116,99
080033D4  2046 5245 
080033D8  4520 5761 
080033DC  7463      
080033DE  6820 506F 5274          dc.b      104,32,80,111,105,110,116,115,46,46,46,46,46
080033E2  696E 7473 
080033E6  2E2E 2E2E 
080033EA  2E        
080033EB  00        5275          dc.b      0
                    5276   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_89:
********  **** ****  Error: Syntax error
080033EC  0D0A 5761 5277          dc.b      13,10,87,97,116,99,104,32,80,111,105,110,116
080033F0  7463 6820 
080033F4  506F 696E 
080033F8  74        
080033F9  2041 6464 5278          dc.b      32,65,100,100,114,101,115,115,58,32,0
080033FD  7265 7373 
08003401  3A20 00   
                    5279   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_90:
********  **** ****  Error: Syntax error
08003404  0D0A 4572 5280          dc.b      13,10,69,114,114,111,114,58,32,87,97,116,99
08003408  726F 723A 
0800340C  2057 6174 
08003410  63        
08003411  6820 506F 5281          dc.b      104,32,80,111,105,110,116,32,65,108,114,101
08003415  696E 7420 
08003419  416C 7265 
0800341D  6164 7920 5282          dc.b      97,100,121,32,83,101,116,32,97,116,32,65,100
08003421  5365 7420 
08003425  6174 2041 
08003429  64        
0800342A  6472 6573 5283          dc.b      100,114,101,115,115,32,58,32,37,48,56,120,13
0800342E  7320 3A20 
08003432  2530 3878 
08003436  0D        
08003437  0A00      5284          dc.b      10,0
                    5285   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_91:
********  **** ****  Error: Syntax error
0800343A  0D0A 5761 5286          dc.b      13,10,87,97,116,99,104,32,80,111,105,110,116
0800343E  7463 6820 
08003442  506F 696E 
08003446  74        
08003447  2053 6574 5287          dc.b      32,83,101,116,32,97,116,32,65,100,100,114,101
0800344B  2061 7420 
0800344F  4164 6472 
08003453  65        
08003454  7373 3A20 5288          dc.b      115,115,58,32,91,36,37,48,56,120,93,0
08003458  5B24 2530 
0800345C  3878 5D00 
                    5289   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_92:
********  **** ****  Error: Syntax error
08003460  0D0A 00   5290          dc.b      13,10,0
                    5291   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_93:
********  **** ****  Error: Syntax error
08003464  0D0A 0D0A 5292          dc.b      13,10,13,10,13,10,13,10,64,66,82,69,65,75,80
08003468  0D0A 0D0A 
0800346C  4042 5245 
08003470  414B 50   
08003473  4F49 4E54 5293          dc.b      79,73,78,84,0
08003477  00        
                    5294   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_94:
********  **** ****  Error: Syntax error
08003478  0D0A 5369 5295          dc.b      13,10,83,105,110,103,108,101,32,83,116,101,112
0800347C  6E67 6C65 
08003480  2053 7465 
08003484  70        
08003485  203A 205B 5296          dc.b      32,58,32,91,79,78,93,0
08003489  4F4E 5D00 
                    5297   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_95:
********  **** ****  Error: Syntax error
0800348E  0D0A 4272 5298          dc.b      13,10,66,114,101,97,107,80,111,105,110,116,115
08003492  6561 6B50 
08003496  6F69 6E74 
0800349A  73        
0800349B  203A 205B 5299          dc.b      32,58,32,91,69,110,97,98,108,101,100,93,0
0800349F  456E 6162 
080034A3  6C65 645D 
080034A7  00        
                    5300   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_96:
********  **** ****  Error: Syntax error
080034A8  0D0A 5072 5301          dc.b      13,10,80,114,101,115,115,32,60,83,80,65,67,69
080034AC  6573 7320 
080034B0  3C53 5041 
080034B4  4345      
080034B6  3E20 746F 5302          dc.b      62,32,116,111,32,69,120,101,99,117,116,101,32
080034BA  2045 7865 
080034BE  6375 7465 
080034C2  20        
080034C3  4E65 7874 5303          dc.b      78,101,120,116,32,73,110,115,116,114,117,99
080034C7  2049 6E73 
080034CB  7472 7563 
080034CF  7469 6F6E 5304          dc.b      116,105,111,110,0
080034D3  00        
                    5305   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_97:
********  **** ****  Error: Syntax error
080034D4  0D0A 5072 5306          dc.b      13,10,80,114,101,115,115,32,60,69,83,67,62,32
080034D8  6573 7320 
080034DC  3C45 5343 
080034E0  3E20      
080034E2  746F 2052 5307          dc.b      116,111,32,82,101,115,117,109,101,32,85,115
080034E6  6573 756D 
080034EA  6520 5573 
080034EE  6572 2050 5308          dc.b      101,114,32,80,114,111,103,114,97,109,13,10,0
080034F2  726F 6772 
080034F6  616D 0D0A 
080034FA  00        
                    5309   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_98:
********  **** ****  Error: Syntax error
080034FC  0D0A 556E 5310          dc.b      13,10,85,110,107,110,111,119,110,32,67,111,109
08003500  6B6E 6F77 
08003504  6E20 436F 
08003508  6D        
08003509  6D61 6E64 5311          dc.b      109,97,110,100,46,46,46,46,46,13,10,0
0800350D  2E2E 2E2E 
08003511  2E0D 0A00 
                    5312   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_99:
********  **** ****  Error: Syntax error
08003516  0D0A 5072 5313          dc.b      13,10,80,114,111,103,114,97,109,32,69,110,100
0800351A  6F67 7261 
0800351E  6D20 456E 
08003522  64        
08003523  6564 2028 5314          dc.b      101,100,32,40,84,82,65,80,32,35,49,53,41,46
08003527  5452 4150 
0800352B  2023 3135 
0800352F  292E      
08003531  2E2E 2E00 5315          dc.b      46,46,46,0
                    5316   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_100:
********  **** ****  Error: Syntax error
08003536  0D0A 4B69 5317          dc.b      13,10,75,105,108,108,32,65,108,108,32,66,114
0800353A  6C6C 2041 
0800353E  6C6C 2042 
08003542  72        
08003543  6561 6B20 5318          dc.b      101,97,107,32,80,111,105,110,116,115,46,46,46
08003547  506F 696E 
0800354B  7473 2E2E 
0800354F  2E        
08003550  2879 2F6E 5319          dc.b      40,121,47,110,41,63,0
08003554  293F 00   
                    5320   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_101:
********  **** ****  Error: Syntax error
08003558  0D0A 4B69 5321          dc.b      13,10,75,105,108,108,32,65,108,108,32,87,97
0800355C  6C6C 2041 
08003560  6C6C 2057 
08003564  61        
08003565  7463 6820 5322          dc.b      116,99,104,32,80,111,105,110,116,115,46,46,46
08003569  506F 696E 
0800356D  7473 2E2E 
08003571  2E        
08003572  2879 2F6E 5323          dc.b      40,121,47,110,41,63,0
08003576  293F 00   
                    5324   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_102:
********  **** ****  Error: Syntax error
0800357A  0D0A 2D2D 5325          dc.b      13,10,45,45,45,45,45,45,45,45,45,45,45,45,45
0800357E  2D2D 2D2D 
08003582  2D2D 2D2D 
08003586  2D2D 2D   
08003589  2D2D 2D2D 5326          dc.b      45,45,45,45,45,45,45,45,45,45,45,45,45,45,45
0800358D  2D2D 2D2D 
08003591  2D2D 2D2D 
08003595  2D2D 2D   
08003598  2D2D 2D2D 5327          dc.b      45,45,45,45,45,45,45,45,45,45,45,45,45,45,45
0800359C  2D2D 2D2D 
080035A0  2D2D 2D2D 
080035A4  2D2D 2D   
080035A7  2D2D 2D2D 5328          dc.b      45,45,45,45,45,45,45,45,45,45,45,45,45,45,45
080035AB  2D2D 2D2D 
080035AF  2D2D 2D2D 
080035B3  2D2D 2D   
080035B6  2D2D 2D2D 5329          dc.b      45,45,45,45,45,45,0
080035BA  2D2D 00   
                    5330   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_103:
********  **** ****  Error: Syntax error
080035BE  0D0A 2020 5331          dc.b      13,10,32,32,68,101,98,117,103,103,101,114,32
080035C2  4465 6275 
080035C6  6767 6572 
080035CA  20        
080035CB  436F 6D6D 5332          dc.b      67,111,109,109,97,110,100,32,83,117,109,109
080035CF  616E 6420 
080035D3  5375 6D6D 
080035D7  6172 7900 5333          dc.b      97,114,121,0
                    5334   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_104:
********  **** ****  Error: Syntax error
080035DC  0D0A 2020 5335          dc.b      13,10,32,32,46,40,114,101,103,41,32,32,32,32
080035E0  2E28 7265 
080035E4  6729 2020 
080035E8  2020      
080035EA  2020 202D 5336          dc.b      32,32,32,45,32,67,104,97,110,103,101,32,82,101
080035EE  2043 6861 
080035F2  6E67 6520 
080035F6  5265      
080035F8  6769 7374 5337          dc.b      103,105,115,116,101,114,115,58,32,101,46,103
080035FC  6572 733A 
08003600  2065 2E67 
08003604  2041 302D 5338          dc.b      32,65,48,45,65,55,44,68,48,45,68,55,44,80,67
08003608  4137 2C44 
0800360C  302D 4437 
08003610  2C50 43   
08003613  2C53 5350 5339          dc.b      44,83,83,80,44,85,83,80,44,83,82,0
08003617  2C55 5350 
0800361B  2C53 5200 
                    5340   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_105:
********  **** ****  Error: Syntax error
08003620  0D0A 2020 5341          dc.b      13,10,32,32,66,68,47,66,83,47,66,67,47,66,75
08003624  4244 2F42 
08003628  532F 4243 
0800362C  2F42 4B   
0800362F  2020 2D20 5342          dc.b      32,32,45,32,66,114,101,97,107,32,80,111,105
08003633  4272 6561 
08003637  6B20 506F 
0800363B  69        
0800363C  6E74 3A20 5343          dc.b      110,116,58,32,68,105,115,112,108,97,121,47,83
08003640  4469 7370 
08003644  6C61 792F 
08003648  53        
08003649  6574 2F43 5344          dc.b      101,116,47,67,108,101,97,114,47,75,105,108,108
0800364D  6C65 6172 
08003651  2F4B 696C 
08003655  6C        
08003656  00        5345          dc.b      0
                    5346   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_106:
********  **** ****  Error: Syntax error
08003658  0D0A 2020 5347          dc.b      13,10,32,32,67,32,32,32,32,32,32,32,32,32,32
0800365C  4320 2020 
08003660  2020 2020 
08003664  2020 20   
08003667  2020 2D20 5348          dc.b      32,32,45,32,67,111,112,121,32,80,114,111,103
0800366B  436F 7079 
0800366F  2050 726F 
08003673  67        
08003674  7261 6D20 5349          dc.b      114,97,109,32,102,114,111,109,32,70,108,97,115
08003678  6672 6F6D 
0800367C  2046 6C61 
08003680  73        
08003681  6820 746F 5350          dc.b      104,32,116,111,32,77,97,105,110,32,77,101,109
08003685  204D 6169 
08003689  6E20 4D65 
0800368D  6D        
0800368E  6F72 7900 5351          dc.b      111,114,121,0
                    5352   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_107:
********  **** ****  Error: Syntax error
08003692  0D0A 2020 5353          dc.b      13,10,32,32,68,32,32,32,32,32,32,32,32,32,32
08003696  4420 2020 
0800369A  2020 2020 
0800369E  2020 20   
080036A1  2020 2D20 5354          dc.b      32,32,45,32,68,117,109,112,32,77,101,109,111
080036A5  4475 6D70 
080036A9  204D 656D 
080036AD  6F        
080036AE  7279 2043 5355          dc.b      114,121,32,67,111,110,116,101,110,116,115,32
080036B2  6F6E 7465 
080036B6  6E74 7320 
080036BA  746F 2053 5356          dc.b      116,111,32,83,99,114,101,101,110,0
080036BE  6372 6565 
080036C2  6E00      
                    5357   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_108:
********  **** ****  Error: Syntax error
080036C4  0D0A 2020 5358          dc.b      13,10,32,32,69,32,32,32,32,32,32,32,32,32,32
080036C8  4520 2020 
080036CC  2020 2020 
080036D0  2020 20   
080036D3  2020 2D20 5359          dc.b      32,32,45,32,69,110,116,101,114,32,83,116,114
080036D7  456E 7465 
080036DB  7220 5374 
080036DF  72        
080036E0  696E 6720 5360          dc.b      105,110,103,32,105,110,116,111,32,77,101,109
080036E4  696E 746F 
080036E8  204D 656D 
080036EC  6F72 7900 5361          dc.b      111,114,121,0
                    5362   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_109:
********  **** ****  Error: Syntax error
080036F0  0D0A 2020 5363          dc.b      13,10,32,32,70,32,32,32,32,32,32,32,32,32,32
080036F4  4620 2020 
080036F8  2020 2020 
080036FC  2020 20   
080036FF  2020 2D20 5364          dc.b      32,32,45,32,70,105,108,108,32,77,101,109,111
08003703  4669 6C6C 
08003707  204D 656D 
0800370B  6F        
0800370C  7279 2077 5365          dc.b      114,121,32,119,105,116,104,32,68,97,116,97,0
08003710  6974 6820 
08003714  4461 7461 
08003718  00        
                    5366   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_110:
********  **** ****  Error: Syntax error
0800371A  0D0A 2020 5367          dc.b      13,10,32,32,71,32,32,32,32,32,32,32,32,32,32
0800371E  4720 2020 
08003722  2020 2020 
08003726  2020 20   
08003729  2020 2D20 5368          dc.b      32,32,45,32,71,111,32,80,114,111,103,114,97
0800372D  476F 2050 
08003731  726F 6772 
08003735  61        
08003736  6D20 5374 5369          dc.b      109,32,83,116,97,114,116,105,110,103,32,97,116
0800373A  6172 7469 
0800373E  6E67 2061 
08003742  74        
08003743  2041 6464 5370          dc.b      32,65,100,100,114,101,115,115,58,32,36,37,48
08003747  7265 7373 
0800374B  3A20 2425 
0800374F  30        
08003750  3858 00   5371          dc.b      56,88,0
                    5372   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_111:
********  **** ****  Error: Syntax error
08003754  0D0A 2020 5373          dc.b      13,10,32,32,76,32,32,32,32,32,32,32,32,32,32
08003758  4C20 2020 
0800375C  2020 2020 
08003760  2020 20   
08003763  2020 2D20 5374          dc.b      32,32,45,32,76,111,97,100,32,80,114,111,103
08003767  4C6F 6164 
0800376B  2050 726F 
0800376F  67        
08003770  7261 6D20 5375          dc.b      114,97,109,32,40,46,72,69,88,32,102,105,108
08003774  282E 4845 
08003778  5820 6669 
0800377C  6C        
0800377D  6529 2066 5376          dc.b      101,41,32,102,114,111,109,32,76,97,112,116,111
08003781  726F 6D20 
08003785  4C61 7074 
08003789  6F        
0800378A  7000      5377          dc.b      112,0
                    5378   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_112:
********  **** ****  Error: Syntax error
0800378C  0D0A 2020 5379          dc.b      13,10,32,32,77,32,32,32,32,32,32,32,32,32,32
08003790  4D20 2020 
08003794  2020 2020 
08003798  2020 20   
0800379B  2020 2D20 5380          dc.b      32,32,45,32,77,101,109,111,114,121,32,69,120
0800379F  4D65 6D6F 
080037A3  7279 2045 
080037A7  78        
080037A8  616D 696E 5381          dc.b      97,109,105,110,101,32,97,110,100,32,67,104,97
080037AC  6520 616E 
080037B0  6420 4368 
080037B4  61        
080037B5  6E67 6500 5382          dc.b      110,103,101,0
                    5383   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_113:
********  **** ****  Error: Syntax error
080037BA  0D0A 2020 5384          dc.b      13,10,32,32,80,32,32,32,32,32,32,32,32,32,32
080037BE  5020 2020 
080037C2  2020 2020 
080037C6  2020 20   
080037C9  2020 2D20 5385          dc.b      32,32,45,32,80,114,111,103,114,97,109,32,70
080037CD  5072 6F67 
080037D1  7261 6D20 
080037D5  46        
080037D6  6C61 7368 5386          dc.b      108,97,115,104,32,77,101,109,111,114,121,32
080037DA  204D 656D 
080037DE  6F72 7920 
080037E2  7769 7468 5387          dc.b      119,105,116,104,32,85,115,101,114,32,80,114
080037E6  2055 7365 
080037EA  7220 5072 
080037EE  6F67 7261 5388          dc.b      111,103,114,97,109,0
080037F2  6D00      
                    5389   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_114:
********  **** ****  Error: Syntax error
080037F4  0D0A 2020 5390          dc.b      13,10,32,32,82,32,32,32,32,32,32,32,32,32,32
080037F8  5220 2020 
080037FC  2020 2020 
08003800  2020 20   
08003803  2020 2D20 5391          dc.b      32,32,45,32,68,105,115,112,108,97,121,32,54
08003807  4469 7370 
0800380B  6C61 7920 
0800380F  36        
08003810  3830 3030 5392          dc.b      56,48,48,48,32,82,101,103,105,115,116,101,114
08003814  2052 6567 
08003818  6973 7465 
0800381C  72        
0800381D  7300      5393          dc.b      115,0
                    5394   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_115:
********  **** ****  Error: Syntax error
08003820  0D0A 2020 5395          dc.b      13,10,32,32,83,32,32,32,32,32,32,32,32,32,32
08003824  5320 2020 
08003828  2020 2020 
0800382C  2020 20   
0800382F  2020 2D20 5396          dc.b      32,32,45,32,84,111,103,103,108,101,32,79,78
08003833  546F 6767 
08003837  6C65 204F 
0800383B  4E        
0800383C  2F4F 4646 5397          dc.b      47,79,70,70,32,83,105,110,103,108,101,32,83
08003840  2053 696E 
08003844  676C 6520 
08003848  53        
08003849  7465 7020 5398          dc.b      116,101,112,32,77,111,100,101,0
0800384D  4D6F 6465 
08003851  00        
                    5399   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_116:
********  **** ****  Error: Syntax error
08003852  0D0A 2020 5400          dc.b      13,10,32,32,84,77,32,32,32,32,32,32,32,32,32
08003856  544D 2020 
0800385A  2020 2020 
0800385E  2020 20   
08003861  2020 2D20 5401          dc.b      32,32,45,32,84,101,115,116,32,77,101,109,111
08003865  5465 7374 
08003869  204D 656D 
0800386D  6F        
0800386E  7279 00   5402          dc.b      114,121,0
                    5403   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_117:
********  **** ****  Error: Syntax error
08003872  0D0A 2020 5404          dc.b      13,10,32,32,84,83,32,32,32,32,32,32,32,32,32
08003876  5453 2020 
0800387A  2020 2020 
0800387E  2020 20   
08003881  2020 2D20 5405          dc.b      32,32,45,32,84,101,115,116,32,83,119,105,116
08003885  5465 7374 
08003889  2053 7769 
0800388D  74        
0800388E  6368 6573 5406          dc.b      99,104,101,115,58,32,83,87,55,45,48,0
08003892  3A20 5357 
08003896  372D 3000 
                    5407   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_118:
********  **** ****  Error: Syntax error
0800389A  0D0A 2020 5408          dc.b      13,10,32,32,84,68,32,32,32,32,32,32,32,32,32
0800389E  5444 2020 
080038A2  2020 2020 
080038A6  2020 20   
080038A9  2020 2D20 5409          dc.b      32,32,45,32,84,101,115,116,32,68,105,115,112
080038AD  5465 7374 
080038B1  2044 6973 
080038B5  70        
080038B6  6C61 7973 5410          dc.b      108,97,121,115,58,32,76,69,68,115,32,97,110
080038BA  3A20 4C45 
080038BE  4473 2061 
080038C2  6E        
080038C3  6420 372D 5411          dc.b      100,32,55,45,83,101,103,109,101,110,116,0
080038C7  5365 676D 
080038CB  656E 7400 
                    5412   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_119:
********  **** ****  Error: Syntax error
080038D0  0D0A 2020 5413          dc.b      13,10,32,32,87,68,47,87,83,47,87,67,47,87,75
080038D4  5744 2F57 
080038D8  532F 5743 
080038DC  2F57 4B   
080038DF  2020 2D20 5414          dc.b      32,32,45,32,87,97,116,99,104,32,80,111,105,110
080038E3  5761 7463 
080038E7  6820 506F 
080038EB  696E      
080038ED  743A 2044 5415          dc.b      116,58,32,68,105,115,112,108,97,121,47,83,101
080038F1  6973 706C 
080038F5  6179 2F53 
080038F9  65        
080038FA  742F 436C 5416          dc.b      116,47,67,108,101,97,114,47,75,105,108,108,0
080038FE  6561 722F 
08003902  4B69 6C6C 
08003906  00        
                    5417   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_120:
********  **** ****  Error: Syntax error
08003908  0D0A 2300 5418          dc.b      13,10,35,0
                    5419   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_121:
********  **** ****  Error: Syntax error
0800390C  0D0A 5072 5420          dc.b      13,10,80,114,111,103,114,97,109,32,82,117,110
08003910  6F67 7261 
08003914  6D20 5275 
08003918  6E        
08003919  6E69 6E67 5421          dc.b      110,105,110,103,46,46,46,46,46,0
0800391D  2E2E 2E2E 
08003921  2E00      
                    5422   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_122:
********  **** ****  Error: Syntax error
08003924  0D0A 5072 5423          dc.b      13,10,80,114,101,115,115,32,60,82,69,83,69,84
08003928  6573 7320 
0800392C  3C52 4553 
08003930  4554      
08003932  3E20 6275 5424          dc.b      62,32,98,117,116,116,111,110,32,60,75,101,121
08003936  7474 6F6E 
0800393A  203C 4B65 
0800393E  79        
0800393F  303E 206F 5425          dc.b      48,62,32,111,110,32,68,69,49,32,116,111,32,115
08003943  6E20 4445 
08003947  3120 746F 
0800394B  2073      
0800394D  746F 7000 5426          dc.b      116,111,112,0
                    5427   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_123:
********  **** ****  Error: Syntax error
08003952  0D0A 4572 5428          dc.b      13,10,69,114,114,111,114,58,32,80,114,101,115
08003956  726F 723A 
0800395A  2050 7265 
0800395E  73        
0800395F  7320 2747 5429          dc.b      115,32,39,71,39,32,102,105,114,115,116,32,116
08003963  2720 6669 
08003967  7273 7420 
0800396B  74        
0800396C  6F20 7374 5430          dc.b      111,32,115,116,97,114,116,32,112,114,111,103
08003970  6172 7420 
08003974  7072 6F67 
08003978  7261 6D00 5431          dc.b      114,97,109,0
                    5432   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_124:
********  **** ****  Error: Syntax error
0800397C  0D0A 5369 5433          dc.b      13,10,83,105,110,103,108,101,32,83,116,101,112
08003980  6E67 6C65 
08003984  2053 7465 
08003988  70        
08003989  2020 3A5B 5434          dc.b      32,32,58,91,79,78,93,0
0800398D  4F4E 5D00 
                    5435   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_125:
********  **** ****  Error: Syntax error
08003992  0D0A 4272 5436          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
08003996  6561 6B20 
0800399A  506F 696E 
0800399E  74        
0800399F  7320 3A5B 5437          dc.b      115,32,58,91,68,105,115,97,98,108,101,100,93
080039A3  4469 7361 
080039A7  626C 6564 
080039AB  5D        
080039AC  00        5438          dc.b      0
                    5439   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_126:
********  **** ****  Error: Syntax error
080039AE  0D0A 5072 5440          dc.b      13,10,80,114,101,115,115,32,39,71,39,32,116
080039B2  6573 7320 
080039B6  2747 2720 
080039BA  74        
080039BB  6F20 5472 5441          dc.b      111,32,84,114,97,99,101,32,80,114,111,103,114
080039BF  6163 6520 
080039C3  5072 6F67 
080039C7  72        
080039C8  616D 2066 5442          dc.b      97,109,32,102,114,111,109,32,97,100,100,114
080039CC  726F 6D20 
080039D0  6164 6472 
080039D4  6573 7320 5443          dc.b      101,115,115,32,36,37,88,46,46,46,46,46,0
080039D8  2425 582E 
080039DC  2E2E 2E2E 
080039E0  00        
                    5444   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_127:
********  **** ****  Error: Syntax error
080039E2  0D0A 5075 5445          dc.b      13,10,80,117,115,104,32,60,82,69,83,69,84,32
080039E6  7368 203C 
080039EA  5245 5345 
080039EE  5420      
080039F0  4275 7474 5446          dc.b      66,117,116,116,111,110,62,32,116,111,32,83,116
080039F4  6F6E 3E20 
080039F8  746F 2053 
080039FC  74        
080039FD  6F70 2E2E 5447          dc.b      111,112,46,46,46,46,46,0
08003A01  2E2E 2E00 
                    5448   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_128:
********  **** ****  Error: Syntax error
08003A06  0D0A 5369 5449          dc.b      13,10,83,105,110,103,108,101,32,83,116,101,112
08003A0A  6E67 6C65 
08003A0E  2053 7465 
08003A12  70        
08003A13  203A 205B 5450          dc.b      32,58,32,91,79,70,70,93,0
08003A17  4F46 465D 
08003A1B  00        
                    5451   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_129:
********  **** ****  Error: Syntax error
08003A1C  0D0A 4272 5452          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
08003A20  6561 6B20 
08003A24  506F 696E 
08003A28  74        
08003A29  7320 3A5B 5453          dc.b      115,32,58,91,69,110,97,98,108,101,100,93,0
08003A2D  456E 6162 
08003A31  6C65 645D 
08003A35  00        
                    5454   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_130:
********  **** ****  Error: Syntax error
08003A36  0D0A 5072 5455          dc.b      13,10,80,114,101,115,115,32,60,69,83,67,62,32
08003A3A  6573 7320 
08003A3E  3C45 5343 
08003A42  3E20      
08003A44  746F 2052 5456          dc.b      116,111,32,82,101,115,117,109,101,32,85,115
08003A48  6573 756D 
08003A4C  6520 5573 
08003A50  6572 2050 5457          dc.b      101,114,32,80,114,111,103,114,97,109,46,46,46
08003A54  726F 6772 
08003A58  616D 2E2E 
08003A5C  2E        
08003A5D  2E2E 00   5458          dc.b      46,46,0
                    5459   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_131:
********  **** ****  Error: Syntax error
08003A60  0D0A 5369 5460          dc.b      13,10,83,105,110,103,108,101,32,83,116,101,112
08003A64  6E67 6C65 
08003A68  2053 7465 
08003A6C  70        
08003A6D  2020 3A5B 5461          dc.b      32,32,58,91,79,70,70,93,0
08003A71  4F46 465D 
08003A75  00        
                    5462   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_132:
********  **** ****  Error: Syntax error
08003A76  0D0A 4272 5463          dc.b      13,10,66,114,101,97,107,32,80,111,105,110,116
08003A7A  6561 6B20 
08003A7E  506F 696E 
08003A82  74        
08003A83  7320 3A5B 5464          dc.b      115,32,58,91,69,110,97,98,108,101,100,93,0
08003A87  456E 6162 
08003A8B  6C65 645D 
08003A8F  00        
                    5465   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_133:
********  **** ****  Error: Syntax error
08003A90  0D0A 5072 5466          dc.b      13,10,80,114,111,103,114,97,109,32,82,117,110
08003A94  6F67 7261 
08003A98  6D20 5275 
08003A9C  6E        
08003A9D  6E69 6E67 5467          dc.b      110,105,110,103,46,46,46,46,46,0
08003AA1  2E2E 2E2E 
08003AA5  2E00      
                    5468   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_134:
********  **** ****  Error: Syntax error
08003AA8  0D0A 5072 5469          dc.b      13,10,80,114,101,115,115,32,60,82,69,83,69,84
08003AAC  6573 7320 
08003AB0  3C52 4553 
08003AB4  4554      
08003AB6  3E20 6275 5470          dc.b      62,32,98,117,116,116,111,110,32,60,75,101,121
08003ABA  7474 6F6E 
08003ABE  203C 4B65 
08003AC2  79        
08003AC3  303E 206F 5471          dc.b      48,62,32,111,110,32,68,69,49,32,116,111,32,115
08003AC7  6E20 4445 
08003ACB  3120 746F 
08003ACF  2073      
08003AD1  746F 7000 5472          dc.b      116,111,112,0
                    5473   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_135:
********  **** ****  Error: Syntax error
08003AD6  0D0A 0D0A 5474          dc.b      13,10,13,10,80,114,111,103,114,97,109,32,65
08003ADA  5072 6F67 
08003ADE  7261 6D20 
08003AE2  41        
08003AE3  424F 5254 5475          dc.b      66,79,82,84,32,33,33,33,33,33,33,13,10,0
08003AE7  2021 2121 
08003AEB  2121 210D 
08003AEF  0A00      
                    5476   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_136:
********  **** ****  Error: Syntax error
08003AF2  2573 0D0A 5477          dc.b      37,115,13,10,0
08003AF6  00        
                    5478   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_137:
********  **** ****  Error: Syntax error
08003AF8  0D0A 0D0A 5479          dc.b      13,10,13,10,80,114,111,103,114,97,109,32,65
08003AFC  5072 6F67 
08003B00  7261 6D20 
08003B04  41        
08003B05  424F 5254 5480          dc.b      66,79,82,84,32,33,33,33,33,33,0
08003B09  2021 2121 
08003B0D  2121 00   
                    5481   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_138:
********  **** ****  Error: Syntax error
08003B10  0D0A 556E 5482          dc.b      13,10,85,110,104,97,110,100,108,101,100,32,73
08003B14  6861 6E64 
08003B18  6C65 6420 
08003B1C  49        
08003B1D  6E74 6572 5483          dc.b      110,116,101,114,114,117,112,116,58,32,73,82
08003B21  7275 7074 
08003B25  3A20 4952 
08003B29  5125 6420 5484          dc.b      81,37,100,32,33,33,33,33,33,0
08003B2D  2121 2121 
08003B31  2100      
                    5485   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_139:
********  **** ****  Error: Syntax error
08003B34  4144 4452 5486          dc.b      65,68,68,82,69,83,83,32,69,82,82,79,82,58,32
08003B38  4553 5320 
08003B3C  4552 524F 
08003B40  523A 20   
08003B43  3136 206F 5487          dc.b      49,54,32,111,114,32,51,50,32,66,105,116,32,84
08003B47  7220 3332 
08003B4B  2042 6974 
08003B4F  2054      
08003B51  7261 6E73 5488          dc.b      114,97,110,115,102,101,114,32,116,111,47,102
08003B55  6665 7220 
08003B59  746F 2F66 
08003B5D  726F 6D20 5489          dc.b      114,111,109,32,97,110,32,79,68,68,32,65,100
08003B61  616E 204F 
08003B65  4444 2041 
08003B69  64        
08003B6A  6472 6573 5490          dc.b      100,114,101,115,115,46,46,46,46,0
08003B6E  732E 2E2E 
08003B72  2E00      
                    5491   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_140:
********  **** ****  Error: Syntax error
08003B74  556E 6861 5492          dc.b      85,110,104,97,110,100,108,101,100,32,84,114
08003B78  6E64 6C65 
08003B7C  6420 5472 
08003B80  6170 2021 5493          dc.b      97,112,32,33,33,33,33,33,0
08003B84  2121 2121 
08003B88  00        
                    5494   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_141:
********  **** ****  Error: Syntax error
08003B8A  4255 5320 5495          dc.b      66,85,83,32,69,114,114,111,114,33,0
08003B8E  4572 726F 
08003B92  7221 00   
                    5496   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_142:
********  **** ****  Error: Syntax error
08003B96  4144 4452 5497          dc.b      65,68,68,82,69,83,83,32,69,114,114,111,114,33
08003B9A  4553 5320 
08003B9E  4572 726F 
08003BA2  7221      
08003BA4  00        5498          dc.b      0
                    5499   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_143:
********  **** ****  Error: Syntax error
08003BA6  494C 4C45 5500          dc.b      73,76,76,69,71,65,76,32,73,78,83,84,82,85,67
08003BAA  4741 4C20 
08003BAE  494E 5354 
08003BB2  5255 43   
08003BB5  5449 4F4E 5501          dc.b      84,73,79,78,0
08003BB9  00        
                    5502   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_144:
********  **** ****  Error: Syntax error
08003BBA  4449 5649 5503          dc.b      68,73,86,73,68,69,32,66,89,32,90,69,82,79,0
08003BBE  4445 2042 
08003BC2  5920 5A45 
08003BC6  524F 00   
                    5504   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_145:
********  **** ****  Error: Syntax error
08003BCA  2743 484B 5505          dc.b      39,67,72,75,39,32,73,78,83,84,82,85,67,84,73
08003BCE  2720 494E 
08003BD2  5354 5255 
08003BD6  4354 49   
08003BD9  4F4E 00   5506          dc.b      79,78,0
                    5507   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_146:
********  **** ****  Error: Syntax error
08003BDC  5452 4150 5508          dc.b      84,82,65,80,86,32,73,78,83,84,82,85,67,84,73
08003BE0  5620 494E 
08003BE4  5354 5255 
08003BE8  4354 49   
08003BEB  4F4E 00   5509          dc.b      79,78,0
                    5510   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_147:
********  **** ****  Error: Syntax error
08003BEE  5052 4956 5511          dc.b      80,82,73,86,73,76,69,71,69,32,86,73,79,76,65
08003BF2  494C 4547 
08003BF6  4520 5649 
08003BFA  4F4C 41   
08003BFD  5449 4F4E 5512          dc.b      84,73,79,78,0
08003C01  00        
                    5513   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_148:
********  **** ****  Error: Syntax error
08003C02  554E 494E 5514          dc.b      85,78,73,78,73,84,73,65,76,73,83,69,68,32,73
08003C06  4954 4941 
08003C0A  4C49 5345 
08003C0E  4420 49   
08003C11  5251 00   5515          dc.b      82,81,0
                    5516   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_149:
********  **** ****  Error: Syntax error
08003C14  5350 5552 5517          dc.b      83,80,85,82,73,79,85,83,32,73,82,81,0
08003C18  494F 5553 
08003C1C  2049 5251 
08003C20  00        
                    5518   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_150:
********  **** ****  Error: Syntax error
08003C22  0D0A 5374 5519          dc.b      13,10,83,116,97,114,116,32,65,100,100,114,101
08003C26  6172 7420 
08003C2A  4164 6472 
08003C2E  65        
08003C2F  7373 2069 5520          dc.b      115,115,32,105,110,32,77,101,109,111,114,121
08003C33  6E20 4D65 
08003C37  6D6F 7279 
08003C3B  3A20 00   5521          dc.b      58,32,0
                    5522   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_151:
********  **** ****  Error: Syntax error
08003C3E  0D0A 456E 5523          dc.b      13,10,69,110,116,101,114,32,83,116,114,105,110
08003C42  7465 7220 
08003C46  5374 7269 
08003C4A  6E        
08003C4B  6720 2845 5524          dc.b      103,32,40,69,83,67,32,116,111,32,101,110,100
08003C4F  5343 2074 
08003C53  6F20 656E 
08003C57  64        
08003C58  2920 3A00 5525          dc.b      41,32,58,0
                    5526   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_152:
********  **** ****  Error: Syntax error
08003C5C  0D0A 5374 5527          dc.b      13,10,83,116,97,114,116,32,65,100,100,114,101
08003C60  6172 7420 
08003C64  4164 6472 
08003C68  65        
08003C69  7373 3A20 5528          dc.b      115,115,58,32,0
08003C6D  00        
                    5529   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_153:
********  **** ****  Error: Syntax error
08003C6E  0D0A 456E 5530          dc.b      13,10,69,110,100,32,65,100,100,114,101,115,115
08003C72  6420 4164 
08003C76  6472 6573 
08003C7A  73        
08003C7B  3A20 00   5531          dc.b      58,32,0
                    5532   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_154:
********  **** ****  Error: Syntax error
08003C7E  4445 312D 5533          dc.b      68,69,49,45,54,56,107,32,66,117,103,32,86,49
08003C82  3638 6B20 
08003C86  4275 6720 
08003C8A  5631      
08003C8C  2E37 3700 5534          dc.b      46,55,55,0
                    5535   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_155:
********  **** ****  Error: Syntax error
08003C90  436F 7079 5536          dc.b      67,111,112,121,114,105,103,104,116,32,40,67
08003C94  7269 6768 
08003C98  7420 2843 
08003C9C  2920 504A 5537          dc.b      41,32,80,74,32,68,97,118,105,101,115,32,50,48
08003CA0  2044 6176 
08003CA4  6965 7320 
08003CA8  3230      
08003CAA  3136 00   5538          dc.b      49,54,0
                    5539   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_156:
********  **** ****  Error: Syntax error
08003CAE  0D0A 5275 5540          dc.b      13,10,82,117,110,110,105,110,103,46,46,46,46
08003CB2  6E6E 696E 
08003CB6  672E 2E2E 
08003CBA  2E        
08003CBB  2E00      5541          dc.b      46,0
                    5542   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_157:
********  **** ****  Error: Syntax error
08003CBE  5275 6E6E 5543          dc.b      82,117,110,110,105,110,103,46,46,46,46,46,0
08003CC2  696E 672E 
08003CC6  2E2E 2E2E 
08003CCA  00        
                    5544   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_158:
********  **** ****  Error: Syntax error
08003CCC  4279 3A20 5545          dc.b      66,121,58,32,80,74,32,68,97,118,105,101,115
08003CD0  504A 2044 
08003CD4  6176 6965 
08003CD8  73        
08003CD9  00        5546          dc.b      0
                    5547   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_159:
********  **** ****  Error: Syntax error
08003CDA  0D0A 2573 5548          dc.b      13,10,37,115,0
08003CDE  00        
                    5549   @m68kdebug@m68kdebug@m68kdebug@m68kdebug@m68kd_160:
********  **** ****  Error: Syntax error
08003CE0  0D0A 2573 5550          dc.b      13,10,37,115,0
08003CE4  00        
                    5551   @itoa_1:
08003CE6  2D32 3134 5552          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08003CEA  3734 3833 
08003CEE  3634 3800 
                    5553   __ctype:
08003CF2  0040 4040 5554          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08003CF6  4040 4040 
08003CFA  4040 5050 
08003CFE  5050 50   
08003D01  4040 4040 5555          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08003D05  4040 4040 
08003D09  4040 4040 
08003D0D  4040 40   
08003D10  4040 40D0 5556          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08003D14  A0A0 A0A0 
08003D18  A0A0 A0A0 
08003D1C  A0A0 A0A0 5557          dc.b      160,160,160,160,160,160,160,140,140,140,140
08003D20  A0A0 A08C 
08003D24  8C8C 8C   
08003D27  8C8C 8C8C 5558          dc.b      140,140,140,140,140,140,160,160,160,160,160
08003D2B  8C8C A0A0 
08003D2F  A0A0 A0   
08003D32  A0A0 8A8A 5559          dc.b      160,160,138,138,138,138,138,138,130,130,130
08003D36  8A8A 8A8A 
08003D3A  8282 82   
08003D3D  8282 8282 5560          dc.b      130,130,130,130,130,130,130,130,130,130,130
08003D41  8282 8282 
08003D45  8282 82   
08003D48  8282 8282 5561          dc.b      130,130,130,130,130,130,160,160,160,160,160
08003D4C  8282 A0A0 
08003D50  A0A0 A0   
08003D53  A089 8989 5562          dc.b      160,137,137,137,137,137,137,129,129,129,129
08003D57  8989 8981 
08003D5B  8181 81   
08003D5E  8181 8181 5563          dc.b      129,129,129,129,129,129,129,129,129,129,129
08003D62  8181 8181 
08003D66  8181 81   
08003D69  8181 8181 5564          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08003D6D  81A0 A0A0 
08003D71  A040 0000 
08003D75  00        
08003D76  0000 0000 5565          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003D7A  0000 0000 
08003D7E  0000 0000 
08003D82  0000 0000 
08003D86  0000 0000 
08003D8A  0000      
08003D8C  0000 0000 5566          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003D90  0000 0000 
08003D94  0000 0000 
08003D98  0000 0000 
08003D9C  0000 0000 
08003DA0  0000      
08003DA2  0000 0000 5567          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DA6  0000 0000 
08003DAA  0000 0000 
08003DAE  0000 0000 
08003DB2  0000 0000 
08003DB6  0000      
08003DB8  0000 0000 5568          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DBC  0000 0000 
08003DC0  0000 0000 
08003DC4  0000 0000 
08003DC8  0000 0000 
08003DCC  0000      
08003DCE  0000 0000 5569          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DD2  0000 0000 
08003DD6  0000 0000 
08003DDA  0000 0000 
08003DDE  0000 0000 
08003DE2  0000      
08003DE4  0000 0000 5570          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08003DE8  0000 0000 
08003DEC  0000 0000 
08003DF0  0000 00   
                    5571          section   data
08003DF4            5572                   align
                    5573   
                    5574   *********************************************************************************************************************************************************
                    5575   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    5576   ********************************************************************************************************************************************************
                    5577   
          0800 3DF4 5578   DataStart       equ       *
08003DF4            5579   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08003DF8            5580   __allocp:       ds.l      1                    start of free memory block list
08003DFC            5581   __heap:         ds.l      1                    begin of free memory
                    5582   
                    5583   
                    5584          section   bss
08003E00            5585                   align
                    5586   
          0800 3E00 5587   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 000C 5588   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    5589   
                    5590   *********************************************************************************************************
                    5591   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    5592   *********************************************************************************************************
          0800 3E00 5593   BssStart       equ       *
                    5594   
                    5595   _i:
08003E00            5596          ds.b      4
                    5597   _x:
08003E04            5598          ds.b      4
                    5599   _y:
08003E08            5600          ds.b      4
                    5601   _z:
08003E0C            5602          ds.b      4
                    5603   _PortA_Count:
08003E10            5604          ds.b      4
                    5605   _Trace:
08003E14            5606          ds.b      4
                    5607   _GoFlag:
08003E18            5608          ds.b      4
                    5609   _Echo:
08003E1C            5610          ds.b      4
                    5611   _d0:
08003E20            5612          ds.b      4
                    5613   _d1:
08003E24            5614          ds.b      4
                    5615   _d2:
08003E28            5616          ds.b      4
                    5617   _d3:
08003E2C            5618          ds.b      4
                    5619   _d4:
08003E30            5620          ds.b      4
                    5621   _d5:
08003E34            5622          ds.b      4
                    5623   _d6:
08003E38            5624          ds.b      4
                    5625   _d7:
08003E3C            5626          ds.b      4
                    5627   _a0:
08003E40            5628          ds.b      4
                    5629   _a1:
08003E44            5630          ds.b      4
                    5631   _a2:
08003E48            5632          ds.b      4
                    5633   _a3:
08003E4C            5634          ds.b      4
                    5635   _a4:
08003E50            5636          ds.b      4
                    5637   _a5:
08003E54            5638          ds.b      4
                    5639   _a6:
08003E58            5640          ds.b      4
                    5641   _PC:
08003E5C            5642          ds.b      4
                    5643   _SSP:
08003E60            5644          ds.b      4
                    5645   _USP:
08003E64            5646          ds.b      4
                    5647   _SR:
08003E68            5648          ds.b      2
                    5649   _BreakPointAddress:
08003E6A            5650          ds.b      32
                    5651   _BreakPointInstruction:
08003E8A            5652          ds.b      16
                    5653   _BreakPointSetOrCleared:
08003E9A            5654          ds.b      32
                    5655   _InstructionSize:
08003EBA            5656          ds.b      4
                    5657   _WatchPointAddress:
08003EBE            5658          ds.b      32
                    5659   _WatchPointSetOrCleared:
08003EDE            5660          ds.b      32
                    5661   _WatchPointString:
08003EFE            5662          ds.b      800
                    5663   _TempString:
0800421E            5664          ds.b      100
                    5665          section   heap
08004282            5666                  align
                    5667   
          0800 4282 5668   BssEnd         equ       *
          0000 0482 5669   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    5670   
                    5671   *********************************************************************************************************
                    5672   * Section for Heap
                    5673   *********************************************************************************************************
                    5674   
          0800 4282 5675   heap           equ       *
08004282            5676                  align
          0800 0000

Assembly errors: 322
